// Auto-generated by voglgen. Don't hand modify!

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCullFace \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glCullFace GL_ENTRYPOINT(glCullFace)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFrontFace \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFrontFace GL_ENTRYPOINT(glFrontFace)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glHint \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glHint GL_ENTRYPOINT(glHint)(target, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLineWidth \
   GLfloat width = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glLineWidth GL_ENTRYPOINT(glLineWidth)(width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointSize \
   GLfloat size = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPointSize GL_ENTRYPOINT(glPointSize)(size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPolygonMode \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPolygonMode GL_ENTRYPOINT(glPolygonMode)(face, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glScissor \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glScissor GL_ENTRYPOINT(glScissor)(x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameterf \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameterf GL_ENTRYPOINT(glTexParameterf)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameterfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameterfv GL_ENTRYPOINT(glTexParameterfv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameteri \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameteri GL_ENTRYPOINT(glTexParameteri)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameteriv GL_ENTRYPOINT(glTexParameteriv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexImage1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint internalformat = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLint border = trace_packet.get_param_value<GLint>(4); \
   GLenum format = trace_packet.get_param_value<GLenum>(5); \
   GLenum type = trace_packet.get_param_value<GLenum>(6); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexImage1D GL_ENTRYPOINT(glTexImage1D)(target, level, internalformat, width, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexImage2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint internalformat = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLint border = trace_packet.get_param_value<GLint>(5); \
   GLenum format = trace_packet.get_param_value<GLenum>(6); \
   GLenum type = trace_packet.get_param_value<GLenum>(7); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexImage2D GL_ENTRYPOINT(glTexImage2D)(target, level, internalformat, width, height, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawBuffer \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawBuffer GL_ENTRYPOINT(glDrawBuffer)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClear \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClear GL_ENTRYPOINT(glClear)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearColor \
   GLfloat red = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat green = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat blue = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat alpha = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearColor GL_ENTRYPOINT(glClearColor)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearStencil \
   GLint s = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearStencil GL_ENTRYPOINT(glClearStencil)(s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearDepth \
   GLdouble depth = trace_packet.get_param_value<GLdouble>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearDepth GL_ENTRYPOINT(glClearDepth)(depth)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilMask \
   GLuint mask = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilMask GL_ENTRYPOINT(glStencilMask)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorMask \
   GLboolean red = trace_packet.get_param_value<GLboolean>(0); \
   GLboolean green = trace_packet.get_param_value<GLboolean>(1); \
   GLboolean blue = trace_packet.get_param_value<GLboolean>(2); \
   GLboolean alpha = trace_packet.get_param_value<GLboolean>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorMask GL_ENTRYPOINT(glColorMask)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthMask \
   GLboolean flag = trace_packet.get_param_value<GLboolean>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthMask GL_ENTRYPOINT(glDepthMask)(flag)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDisable \
   GLenum cap = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDisable GL_ENTRYPOINT(glDisable)(cap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnable \
   GLenum cap = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEnable GL_ENTRYPOINT(glEnable)(cap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFinish  

#define VOGL_REPLAY_CALL_GL_HELPER_glFinish GL_ENTRYPOINT(glFinish)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFlush  

#define VOGL_REPLAY_CALL_GL_HELPER_glFlush GL_ENTRYPOINT(glFlush)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFunc \
   GLenum sfactor = trace_packet.get_param_value<GLenum>(0); \
   GLenum dfactor = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFunc GL_ENTRYPOINT(glBlendFunc)(sfactor, dfactor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLogicOp \
   GLenum opcode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glLogicOp GL_ENTRYPOINT(glLogicOp)(opcode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilFunc \
   GLenum func = trace_packet.get_param_value<GLenum>(0); \
   GLint ref = trace_packet.get_param_value<GLint>(1); \
   GLuint mask = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilFunc GL_ENTRYPOINT(glStencilFunc)(func, ref, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilOp \
   GLenum fail = trace_packet.get_param_value<GLenum>(0); \
   GLenum zfail = trace_packet.get_param_value<GLenum>(1); \
   GLenum zpass = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilOp GL_ENTRYPOINT(glStencilOp)(fail, zfail, zpass)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthFunc \
   GLenum func = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthFunc GL_ENTRYPOINT(glDepthFunc)(func)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelStoref \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelStoref GL_ENTRYPOINT(glPixelStoref)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelStorei \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelStorei GL_ENTRYPOINT(glPixelStorei)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReadBuffer \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glReadBuffer GL_ENTRYPOINT(glReadBuffer)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReadPixels \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glReadPixels GL_ENTRYPOINT(glReadPixels)(x, y, width, height, format, type, pReplay_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBooleanv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLboolean * pTrace_params = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBooleanv GL_ENTRYPOINT(glGetBooleanv)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetDoublev \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetDoublev GL_ENTRYPOINT(glGetDoublev)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetError  

#define VOGL_REPLAY_CALL_GL_HELPER_glGetError GL_ENTRYPOINT(glGetError)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFloatv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFloatv GL_ENTRYPOINT(glGetFloatv)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetIntegerv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetIntegerv GL_ENTRYPOINT(glGetIntegerv)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetString \
   GLenum name = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetString GL_ENTRYPOINT(glGetString)(name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexImage \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexImage GL_ENTRYPOINT(glGetTexImage)(target, level, format, type, pReplay_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexParameterfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexParameterfv GL_ENTRYPOINT(glGetTexParameterfv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexParameteriv GL_ENTRYPOINT(glGetTexParameteriv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexLevelParameterfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexLevelParameterfv GL_ENTRYPOINT(glGetTexLevelParameterfv)(target, level, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexLevelParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexLevelParameteriv GL_ENTRYPOINT(glGetTexLevelParameteriv)(target, level, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsEnabled \
   GLenum cap = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsEnabled GL_ENTRYPOINT(glIsEnabled)(cap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthRange \
   GLdouble near = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble far = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthRange GL_ENTRYPOINT(glDepthRange)(near, far)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glViewport \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glViewport GL_ENTRYPOINT(glViewport)(x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNewList \
   GLuint list = trace_packet.get_param_value<GLuint>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glNewList GL_ENTRYPOINT(glNewList)(list, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndList  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndList GL_ENTRYPOINT(glEndList)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCallList \
   GLuint list = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glCallList GL_ENTRYPOINT(glCallList)(list)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCallLists \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_lists = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glCallLists GL_ENTRYPOINT(glCallLists)(n, type, pTrace_lists)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteLists \
   GLuint list = trace_packet.get_param_value<GLuint>(0); \
   GLsizei range = trace_packet.get_param_value<GLsizei>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteLists GL_ENTRYPOINT(glDeleteLists)(list, range)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenLists \
   GLsizei range = trace_packet.get_param_value<GLsizei>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenLists GL_ENTRYPOINT(glGenLists)(range)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glListBase \
   GLuint base = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glListBase GL_ENTRYPOINT(glListBase)(base)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBegin \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBegin GL_ENTRYPOINT(glBegin)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBitmap \
   GLsizei width = trace_packet.get_param_value<GLsizei>(0); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(1); \
   GLfloat xorig = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat yorig = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat xmove = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat ymove = trace_packet.get_param_value<GLfloat>(5); \
   const GLubyte * pTrace_bitmap = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glBitmap GL_ENTRYPOINT(glBitmap)(width, height, xorig, yorig, xmove, ymove, pTrace_bitmap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3b \
   GLbyte red = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte green = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte blue = trace_packet.get_param_value<GLbyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3b GL_ENTRYPOINT(glColor3b)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3bv \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3bv GL_ENTRYPOINT(glColor3bv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3d \
   GLdouble red = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble green = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble blue = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3d GL_ENTRYPOINT(glColor3d)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3dv GL_ENTRYPOINT(glColor3dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3f \
   GLfloat red = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat green = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat blue = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3f GL_ENTRYPOINT(glColor3f)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3fv GL_ENTRYPOINT(glColor3fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3i \
   GLint red = trace_packet.get_param_value<GLint>(0); \
   GLint green = trace_packet.get_param_value<GLint>(1); \
   GLint blue = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3i GL_ENTRYPOINT(glColor3i)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3iv GL_ENTRYPOINT(glColor3iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3s \
   GLshort red = trace_packet.get_param_value<GLshort>(0); \
   GLshort green = trace_packet.get_param_value<GLshort>(1); \
   GLshort blue = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3s GL_ENTRYPOINT(glColor3s)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3sv GL_ENTRYPOINT(glColor3sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3ub \
   GLubyte red = trace_packet.get_param_value<GLubyte>(0); \
   GLubyte green = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte blue = trace_packet.get_param_value<GLubyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3ub GL_ENTRYPOINT(glColor3ub)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3ubv \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3ubv GL_ENTRYPOINT(glColor3ubv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3ui \
   GLuint red = trace_packet.get_param_value<GLuint>(0); \
   GLuint green = trace_packet.get_param_value<GLuint>(1); \
   GLuint blue = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3ui GL_ENTRYPOINT(glColor3ui)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3uiv \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3uiv GL_ENTRYPOINT(glColor3uiv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3us \
   GLushort red = trace_packet.get_param_value<GLushort>(0); \
   GLushort green = trace_packet.get_param_value<GLushort>(1); \
   GLushort blue = trace_packet.get_param_value<GLushort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3us GL_ENTRYPOINT(glColor3us)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3usv \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3usv GL_ENTRYPOINT(glColor3usv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4b \
   GLbyte red = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte green = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte blue = trace_packet.get_param_value<GLbyte>(2); \
   GLbyte alpha = trace_packet.get_param_value<GLbyte>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4b GL_ENTRYPOINT(glColor4b)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4bv \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4bv GL_ENTRYPOINT(glColor4bv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4d \
   GLdouble red = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble green = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble blue = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble alpha = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4d GL_ENTRYPOINT(glColor4d)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4dv GL_ENTRYPOINT(glColor4dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4f \
   GLfloat red = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat green = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat blue = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat alpha = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4f GL_ENTRYPOINT(glColor4f)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4fv GL_ENTRYPOINT(glColor4fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4i \
   GLint red = trace_packet.get_param_value<GLint>(0); \
   GLint green = trace_packet.get_param_value<GLint>(1); \
   GLint blue = trace_packet.get_param_value<GLint>(2); \
   GLint alpha = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4i GL_ENTRYPOINT(glColor4i)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4iv GL_ENTRYPOINT(glColor4iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4s \
   GLshort red = trace_packet.get_param_value<GLshort>(0); \
   GLshort green = trace_packet.get_param_value<GLshort>(1); \
   GLshort blue = trace_packet.get_param_value<GLshort>(2); \
   GLshort alpha = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4s GL_ENTRYPOINT(glColor4s)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4sv GL_ENTRYPOINT(glColor4sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4ub \
   GLubyte red = trace_packet.get_param_value<GLubyte>(0); \
   GLubyte green = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte blue = trace_packet.get_param_value<GLubyte>(2); \
   GLubyte alpha = trace_packet.get_param_value<GLubyte>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4ub GL_ENTRYPOINT(glColor4ub)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4ubv \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4ubv GL_ENTRYPOINT(glColor4ubv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4ui \
   GLuint red = trace_packet.get_param_value<GLuint>(0); \
   GLuint green = trace_packet.get_param_value<GLuint>(1); \
   GLuint blue = trace_packet.get_param_value<GLuint>(2); \
   GLuint alpha = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4ui GL_ENTRYPOINT(glColor4ui)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4uiv \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4uiv GL_ENTRYPOINT(glColor4uiv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4us \
   GLushort red = trace_packet.get_param_value<GLushort>(0); \
   GLushort green = trace_packet.get_param_value<GLushort>(1); \
   GLushort blue = trace_packet.get_param_value<GLushort>(2); \
   GLushort alpha = trace_packet.get_param_value<GLushort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4us GL_ENTRYPOINT(glColor4us)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4usv \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4usv GL_ENTRYPOINT(glColor4usv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEdgeFlag \
   GLboolean flag = trace_packet.get_param_value<GLboolean>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEdgeFlag GL_ENTRYPOINT(glEdgeFlag)(flag)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEdgeFlagv \
   const GLboolean * pTrace_flag = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glEdgeFlagv GL_ENTRYPOINT(glEdgeFlagv)(pTrace_flag)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnd  

#define VOGL_REPLAY_CALL_GL_HELPER_glEnd GL_ENTRYPOINT(glEnd)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexd \
   GLdouble c = trace_packet.get_param_value<GLdouble>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexd GL_ENTRYPOINT(glIndexd)(c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexdv \
   const GLdouble * pTrace_c = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexdv GL_ENTRYPOINT(glIndexdv)(pTrace_c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexf \
   GLfloat c = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexf GL_ENTRYPOINT(glIndexf)(c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexfv \
   const GLfloat * pTrace_c = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexfv GL_ENTRYPOINT(glIndexfv)(pTrace_c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexi \
   GLint c = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexi GL_ENTRYPOINT(glIndexi)(c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexiv \
   const GLint * pTrace_c = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexiv GL_ENTRYPOINT(glIndexiv)(pTrace_c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexs \
   GLshort c = trace_packet.get_param_value<GLshort>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexs GL_ENTRYPOINT(glIndexs)(c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexsv \
   const GLshort * pTrace_c = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexsv GL_ENTRYPOINT(glIndexsv)(pTrace_c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3b \
   GLbyte nx = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte ny = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte nz = trace_packet.get_param_value<GLbyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3b GL_ENTRYPOINT(glNormal3b)(nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3bv \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3bv GL_ENTRYPOINT(glNormal3bv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3d \
   GLdouble nx = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble ny = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble nz = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3d GL_ENTRYPOINT(glNormal3d)(nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3dv GL_ENTRYPOINT(glNormal3dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3f \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3f GL_ENTRYPOINT(glNormal3f)(nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3fv GL_ENTRYPOINT(glNormal3fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3i \
   GLint nx = trace_packet.get_param_value<GLint>(0); \
   GLint ny = trace_packet.get_param_value<GLint>(1); \
   GLint nz = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3i GL_ENTRYPOINT(glNormal3i)(nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3iv GL_ENTRYPOINT(glNormal3iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3s \
   GLshort nx = trace_packet.get_param_value<GLshort>(0); \
   GLshort ny = trace_packet.get_param_value<GLshort>(1); \
   GLshort nz = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3s GL_ENTRYPOINT(glNormal3s)(nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3sv GL_ENTRYPOINT(glNormal3sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2d \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2d GL_ENTRYPOINT(glRasterPos2d)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2dv GL_ENTRYPOINT(glRasterPos2dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2f \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2f GL_ENTRYPOINT(glRasterPos2f)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2fv GL_ENTRYPOINT(glRasterPos2fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2i \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2i GL_ENTRYPOINT(glRasterPos2i)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2iv GL_ENTRYPOINT(glRasterPos2iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2s \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2s GL_ENTRYPOINT(glRasterPos2s)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2sv GL_ENTRYPOINT(glRasterPos2sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3d \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3d GL_ENTRYPOINT(glRasterPos3d)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3dv GL_ENTRYPOINT(glRasterPos3dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3f \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3f GL_ENTRYPOINT(glRasterPos3f)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3fv GL_ENTRYPOINT(glRasterPos3fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3i \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLint z = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3i GL_ENTRYPOINT(glRasterPos3i)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3iv GL_ENTRYPOINT(glRasterPos3iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3s \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1); \
   GLshort z = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3s GL_ENTRYPOINT(glRasterPos3s)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3sv GL_ENTRYPOINT(glRasterPos3sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4d \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4d GL_ENTRYPOINT(glRasterPos4d)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4dv GL_ENTRYPOINT(glRasterPos4dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4f \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4f GL_ENTRYPOINT(glRasterPos4f)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4fv GL_ENTRYPOINT(glRasterPos4fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4i \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLint z = trace_packet.get_param_value<GLint>(2); \
   GLint w = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4i GL_ENTRYPOINT(glRasterPos4i)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4iv GL_ENTRYPOINT(glRasterPos4iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4s \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1); \
   GLshort z = trace_packet.get_param_value<GLshort>(2); \
   GLshort w = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4s GL_ENTRYPOINT(glRasterPos4s)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4sv GL_ENTRYPOINT(glRasterPos4sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRectd \
   GLdouble x1 = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y1 = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble x2 = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble y2 = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRectd GL_ENTRYPOINT(glRectd)(x1, y1, x2, y2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRectdv \
   const GLdouble * pTrace_v1 = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLdouble * pTrace_v2 = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glRectdv GL_ENTRYPOINT(glRectdv)(pTrace_v1, pTrace_v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRectf \
   GLfloat x1 = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y1 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat x2 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat y2 = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRectf GL_ENTRYPOINT(glRectf)(x1, y1, x2, y2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRectfv \
   const GLfloat * pTrace_v1 = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_v2 = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glRectfv GL_ENTRYPOINT(glRectfv)(pTrace_v1, pTrace_v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRecti \
   GLint x1 = trace_packet.get_param_value<GLint>(0); \
   GLint y1 = trace_packet.get_param_value<GLint>(1); \
   GLint x2 = trace_packet.get_param_value<GLint>(2); \
   GLint y2 = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRecti GL_ENTRYPOINT(glRecti)(x1, y1, x2, y2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRectiv \
   const GLint * pTrace_v1 = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLint * pTrace_v2 = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glRectiv GL_ENTRYPOINT(glRectiv)(pTrace_v1, pTrace_v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRects \
   GLshort x1 = trace_packet.get_param_value<GLshort>(0); \
   GLshort y1 = trace_packet.get_param_value<GLshort>(1); \
   GLshort x2 = trace_packet.get_param_value<GLshort>(2); \
   GLshort y2 = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRects GL_ENTRYPOINT(glRects)(x1, y1, x2, y2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRectsv \
   const GLshort * pTrace_v1 = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLshort * pTrace_v2 = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glRectsv GL_ENTRYPOINT(glRectsv)(pTrace_v1, pTrace_v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1d \
   GLdouble s = trace_packet.get_param_value<GLdouble>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1d GL_ENTRYPOINT(glTexCoord1d)(s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1dv GL_ENTRYPOINT(glTexCoord1dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1f \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1f GL_ENTRYPOINT(glTexCoord1f)(s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1fv GL_ENTRYPOINT(glTexCoord1fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1i \
   GLint s = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1i GL_ENTRYPOINT(glTexCoord1i)(s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1iv GL_ENTRYPOINT(glTexCoord1iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1s \
   GLshort s = trace_packet.get_param_value<GLshort>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1s GL_ENTRYPOINT(glTexCoord1s)(s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1sv GL_ENTRYPOINT(glTexCoord1sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2d \
   GLdouble s = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble t = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2d GL_ENTRYPOINT(glTexCoord2d)(s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2dv GL_ENTRYPOINT(glTexCoord2dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2f \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2f GL_ENTRYPOINT(glTexCoord2f)(s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fv GL_ENTRYPOINT(glTexCoord2fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2i \
   GLint s = trace_packet.get_param_value<GLint>(0); \
   GLint t = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2i GL_ENTRYPOINT(glTexCoord2i)(s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2iv GL_ENTRYPOINT(glTexCoord2iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2s \
   GLshort s = trace_packet.get_param_value<GLshort>(0); \
   GLshort t = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2s GL_ENTRYPOINT(glTexCoord2s)(s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2sv GL_ENTRYPOINT(glTexCoord2sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3d \
   GLdouble s = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble t = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble r = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3d GL_ENTRYPOINT(glTexCoord3d)(s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3dv GL_ENTRYPOINT(glTexCoord3dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3f \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3f GL_ENTRYPOINT(glTexCoord3f)(s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3fv GL_ENTRYPOINT(glTexCoord3fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3i \
   GLint s = trace_packet.get_param_value<GLint>(0); \
   GLint t = trace_packet.get_param_value<GLint>(1); \
   GLint r = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3i GL_ENTRYPOINT(glTexCoord3i)(s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3iv GL_ENTRYPOINT(glTexCoord3iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3s \
   GLshort s = trace_packet.get_param_value<GLshort>(0); \
   GLshort t = trace_packet.get_param_value<GLshort>(1); \
   GLshort r = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3s GL_ENTRYPOINT(glTexCoord3s)(s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3sv GL_ENTRYPOINT(glTexCoord3sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4d \
   GLdouble s = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble t = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble r = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble q = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4d GL_ENTRYPOINT(glTexCoord4d)(s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4dv GL_ENTRYPOINT(glTexCoord4dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4f \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat q = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4f GL_ENTRYPOINT(glTexCoord4f)(s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4fv GL_ENTRYPOINT(glTexCoord4fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4i \
   GLint s = trace_packet.get_param_value<GLint>(0); \
   GLint t = trace_packet.get_param_value<GLint>(1); \
   GLint r = trace_packet.get_param_value<GLint>(2); \
   GLint q = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4i GL_ENTRYPOINT(glTexCoord4i)(s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4iv GL_ENTRYPOINT(glTexCoord4iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4s \
   GLshort s = trace_packet.get_param_value<GLshort>(0); \
   GLshort t = trace_packet.get_param_value<GLshort>(1); \
   GLshort r = trace_packet.get_param_value<GLshort>(2); \
   GLshort q = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4s GL_ENTRYPOINT(glTexCoord4s)(s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4sv GL_ENTRYPOINT(glTexCoord4sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2d \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2d GL_ENTRYPOINT(glVertex2d)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2dv GL_ENTRYPOINT(glVertex2dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2f \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2f GL_ENTRYPOINT(glVertex2f)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2fv GL_ENTRYPOINT(glVertex2fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2i \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2i GL_ENTRYPOINT(glVertex2i)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2iv GL_ENTRYPOINT(glVertex2iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2s \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2s GL_ENTRYPOINT(glVertex2s)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2sv GL_ENTRYPOINT(glVertex2sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3d \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3d GL_ENTRYPOINT(glVertex3d)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3dv GL_ENTRYPOINT(glVertex3dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3f \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3f GL_ENTRYPOINT(glVertex3f)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3fv GL_ENTRYPOINT(glVertex3fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3i \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLint z = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3i GL_ENTRYPOINT(glVertex3i)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3iv GL_ENTRYPOINT(glVertex3iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3s \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1); \
   GLshort z = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3s GL_ENTRYPOINT(glVertex3s)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3sv GL_ENTRYPOINT(glVertex3sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4d \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4d GL_ENTRYPOINT(glVertex4d)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4dv GL_ENTRYPOINT(glVertex4dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4f \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4f GL_ENTRYPOINT(glVertex4f)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4fv GL_ENTRYPOINT(glVertex4fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4i \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLint z = trace_packet.get_param_value<GLint>(2); \
   GLint w = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4i GL_ENTRYPOINT(glVertex4i)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4iv GL_ENTRYPOINT(glVertex4iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4s \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1); \
   GLshort z = trace_packet.get_param_value<GLshort>(2); \
   GLshort w = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4s GL_ENTRYPOINT(glVertex4s)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4sv GL_ENTRYPOINT(glVertex4sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClipPlane \
   GLenum plane = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_equation = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glClipPlane GL_ENTRYPOINT(glClipPlane)(plane, pTrace_equation)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorMaterial \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorMaterial GL_ENTRYPOINT(glColorMaterial)(face, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogf \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogf GL_ENTRYPOINT(glFogf)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogfv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogfv GL_ENTRYPOINT(glFogfv)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogi \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogi GL_ENTRYPOINT(glFogi)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogiv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogiv GL_ENTRYPOINT(glFogiv)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightf \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glLightf GL_ENTRYPOINT(glLightf)(light, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightfv \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glLightfv GL_ENTRYPOINT(glLightfv)(light, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLighti \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glLighti GL_ENTRYPOINT(glLighti)(light, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightiv \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glLightiv GL_ENTRYPOINT(glLightiv)(light, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightModelf \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glLightModelf GL_ENTRYPOINT(glLightModelf)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightModelfv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glLightModelfv GL_ENTRYPOINT(glLightModelfv)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightModeli \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glLightModeli GL_ENTRYPOINT(glLightModeli)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightModeliv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glLightModeliv GL_ENTRYPOINT(glLightModeliv)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLineStipple \
   GLint factor = trace_packet.get_param_value<GLint>(0); \
   GLushort pattern = trace_packet.get_param_value<GLushort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glLineStipple GL_ENTRYPOINT(glLineStipple)(factor, pattern)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMaterialf \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMaterialf GL_ENTRYPOINT(glMaterialf)(face, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMaterialfv \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glMaterialfv GL_ENTRYPOINT(glMaterialfv)(face, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMateriali \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMateriali GL_ENTRYPOINT(glMateriali)(face, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMaterialiv \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glMaterialiv GL_ENTRYPOINT(glMaterialiv)(face, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPolygonStipple \
   const GLubyte * pTrace_mask = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glPolygonStipple GL_ENTRYPOINT(glPolygonStipple)(pTrace_mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glShadeModel \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glShadeModel GL_ENTRYPOINT(glShadeModel)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexEnvf \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexEnvf GL_ENTRYPOINT(glTexEnvf)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexEnvfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexEnvfv GL_ENTRYPOINT(glTexEnvfv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexEnvi \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexEnvi GL_ENTRYPOINT(glTexEnvi)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexEnviv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexEnviv GL_ENTRYPOINT(glTexEnviv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexGend \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLdouble param = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexGend GL_ENTRYPOINT(glTexGend)(coord, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexGendv \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexGendv GL_ENTRYPOINT(glTexGendv)(coord, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexGenf \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexGenf GL_ENTRYPOINT(glTexGenf)(coord, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexGenfv \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexGenfv GL_ENTRYPOINT(glTexGenfv)(coord, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexGeni \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexGeni GL_ENTRYPOINT(glTexGeni)(coord, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexGeniv \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexGeniv GL_ENTRYPOINT(glTexGeniv)(coord, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFeedbackBuffer \
   GLsizei size = trace_packet.get_param_value<GLsizei>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_buffer = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glFeedbackBuffer GL_ENTRYPOINT(glFeedbackBuffer)(size, type, pReplay_buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSelectBuffer \
   GLsizei size = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_buffer = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glSelectBuffer GL_ENTRYPOINT(glSelectBuffer)(size, pReplay_buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRenderMode \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glRenderMode GL_ENTRYPOINT(glRenderMode)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInitNames  

#define VOGL_REPLAY_CALL_GL_HELPER_glInitNames GL_ENTRYPOINT(glInitNames)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadName \
   GLuint name = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadName GL_ENTRYPOINT(glLoadName)(name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPassThrough \
   GLfloat token = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPassThrough GL_ENTRYPOINT(glPassThrough)(token)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPopName  

#define VOGL_REPLAY_CALL_GL_HELPER_glPopName GL_ENTRYPOINT(glPopName)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPushName \
   GLuint name = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPushName GL_ENTRYPOINT(glPushName)(name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearAccum \
   GLfloat red = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat green = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat blue = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat alpha = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearAccum GL_ENTRYPOINT(glClearAccum)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearIndex \
   GLfloat c = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearIndex GL_ENTRYPOINT(glClearIndex)(c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexMask \
   GLuint mask = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexMask GL_ENTRYPOINT(glIndexMask)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAccum \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLfloat value = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glAccum GL_ENTRYPOINT(glAccum)(op, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPopAttrib  

#define VOGL_REPLAY_CALL_GL_HELPER_glPopAttrib GL_ENTRYPOINT(glPopAttrib)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPushAttrib \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPushAttrib GL_ENTRYPOINT(glPushAttrib)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMap1d \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble u1 = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble u2 = trace_packet.get_param_value<GLdouble>(2); \
   GLint stride = trace_packet.get_param_value<GLint>(3); \
   GLint order = trace_packet.get_param_value<GLint>(4); \
   const GLdouble * pTrace_points = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glMap1d GL_ENTRYPOINT(glMap1d)(target, u1, u2, stride, order, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMap1f \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat u1 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat u2 = trace_packet.get_param_value<GLfloat>(2); \
   GLint stride = trace_packet.get_param_value<GLint>(3); \
   GLint order = trace_packet.get_param_value<GLint>(4); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glMap1f GL_ENTRYPOINT(glMap1f)(target, u1, u2, stride, order, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMap2d \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble u1 = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble u2 = trace_packet.get_param_value<GLdouble>(2); \
   GLint ustride = trace_packet.get_param_value<GLint>(3); \
   GLint uorder = trace_packet.get_param_value<GLint>(4); \
   GLdouble v1 = trace_packet.get_param_value<GLdouble>(5); \
   GLdouble v2 = trace_packet.get_param_value<GLdouble>(6); \
   GLint vstride = trace_packet.get_param_value<GLint>(7); \
   GLint vorder = trace_packet.get_param_value<GLint>(8); \
   const GLdouble * pTrace_points = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glMap2d GL_ENTRYPOINT(glMap2d)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMap2f \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat u1 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat u2 = trace_packet.get_param_value<GLfloat>(2); \
   GLint ustride = trace_packet.get_param_value<GLint>(3); \
   GLint uorder = trace_packet.get_param_value<GLint>(4); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(6); \
   GLint vstride = trace_packet.get_param_value<GLint>(7); \
   GLint vorder = trace_packet.get_param_value<GLint>(8); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glMap2f GL_ENTRYPOINT(glMap2f)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapGrid1d \
   GLint un = trace_packet.get_param_value<GLint>(0); \
   GLdouble u1 = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble u2 = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapGrid1d GL_ENTRYPOINT(glMapGrid1d)(un, u1, u2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapGrid1f \
   GLint un = trace_packet.get_param_value<GLint>(0); \
   GLfloat u1 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat u2 = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapGrid1f GL_ENTRYPOINT(glMapGrid1f)(un, u1, u2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapGrid2d \
   GLint un = trace_packet.get_param_value<GLint>(0); \
   GLdouble u1 = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble u2 = trace_packet.get_param_value<GLdouble>(2); \
   GLint vn = trace_packet.get_param_value<GLint>(3); \
   GLdouble v1 = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble v2 = trace_packet.get_param_value<GLdouble>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapGrid2d GL_ENTRYPOINT(glMapGrid2d)(un, u1, u2, vn, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapGrid2f \
   GLint un = trace_packet.get_param_value<GLint>(0); \
   GLfloat u1 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat u2 = trace_packet.get_param_value<GLfloat>(2); \
   GLint vn = trace_packet.get_param_value<GLint>(3); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapGrid2f GL_ENTRYPOINT(glMapGrid2f)(un, u1, u2, vn, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord1d \
   GLdouble u = trace_packet.get_param_value<GLdouble>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord1d GL_ENTRYPOINT(glEvalCoord1d)(u)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord1dv \
   const GLdouble * pTrace_u = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord1dv GL_ENTRYPOINT(glEvalCoord1dv)(pTrace_u)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord1f \
   GLfloat u = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord1f GL_ENTRYPOINT(glEvalCoord1f)(u)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord1fv \
   const GLfloat * pTrace_u = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord1fv GL_ENTRYPOINT(glEvalCoord1fv)(pTrace_u)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord2d \
   GLdouble u = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble v = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord2d GL_ENTRYPOINT(glEvalCoord2d)(u, v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord2dv \
   const GLdouble * pTrace_u = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord2dv GL_ENTRYPOINT(glEvalCoord2dv)(pTrace_u)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord2f \
   GLfloat u = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat v = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord2f GL_ENTRYPOINT(glEvalCoord2f)(u, v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord2fv \
   const GLfloat * pTrace_u = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord2fv GL_ENTRYPOINT(glEvalCoord2fv)(pTrace_u)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalMesh1 \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint i1 = trace_packet.get_param_value<GLint>(1); \
   GLint i2 = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalMesh1 GL_ENTRYPOINT(glEvalMesh1)(mode, i1, i2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalPoint1 \
   GLint i = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalPoint1 GL_ENTRYPOINT(glEvalPoint1)(i)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalMesh2 \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint i1 = trace_packet.get_param_value<GLint>(1); \
   GLint i2 = trace_packet.get_param_value<GLint>(2); \
   GLint j1 = trace_packet.get_param_value<GLint>(3); \
   GLint j2 = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalMesh2 GL_ENTRYPOINT(glEvalMesh2)(mode, i1, i2, j1, j2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalPoint2 \
   GLint i = trace_packet.get_param_value<GLint>(0); \
   GLint j = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalPoint2 GL_ENTRYPOINT(glEvalPoint2)(i, j)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAlphaFunc \
   GLenum func = trace_packet.get_param_value<GLenum>(0); \
   GLfloat ref = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glAlphaFunc GL_ENTRYPOINT(glAlphaFunc)(func, ref)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelZoom \
   GLfloat xfactor = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat yfactor = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelZoom GL_ENTRYPOINT(glPixelZoom)(xfactor, yfactor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTransferf \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTransferf GL_ENTRYPOINT(glPixelTransferf)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTransferi \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTransferi GL_ENTRYPOINT(glPixelTransferi)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelMapfv \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   GLint mapsize = trace_packet.get_param_value<GLint>(1); \
   const GLfloat * pTrace_values = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelMapfv GL_ENTRYPOINT(glPixelMapfv)(map, mapsize, pTrace_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelMapuiv \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   GLint mapsize = trace_packet.get_param_value<GLint>(1); \
   const GLuint * pTrace_values = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelMapuiv GL_ENTRYPOINT(glPixelMapuiv)(map, mapsize, pTrace_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelMapusv \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   GLint mapsize = trace_packet.get_param_value<GLint>(1); \
   const GLushort * pTrace_values = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelMapusv GL_ENTRYPOINT(glPixelMapusv)(map, mapsize, pTrace_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyPixels \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyPixels GL_ENTRYPOINT(glCopyPixels)(x, y, width, height, type)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawPixels \
   GLsizei width = trace_packet.get_param_value<GLsizei>(0); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawPixels GL_ENTRYPOINT(glDrawPixels)(width, height, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetClipPlane \
   GLenum plane = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_equation = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetClipPlane GL_ENTRYPOINT(glGetClipPlane)(plane, pReplay_equation)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetLightfv \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetLightfv GL_ENTRYPOINT(glGetLightfv)(light, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetLightiv \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetLightiv GL_ENTRYPOINT(glGetLightiv)(light, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMapdv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum query = trace_packet.get_param_value<GLenum>(1); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMapdv GL_ENTRYPOINT(glGetMapdv)(target, query, pReplay_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMapfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum query = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMapfv GL_ENTRYPOINT(glGetMapfv)(target, query, pReplay_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMapiv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum query = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMapiv GL_ENTRYPOINT(glGetMapiv)(target, query, pReplay_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMaterialfv \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMaterialfv GL_ENTRYPOINT(glGetMaterialfv)(face, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMaterialiv \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMaterialiv GL_ENTRYPOINT(glGetMaterialiv)(face, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPixelMapfv \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_values = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPixelMapfv GL_ENTRYPOINT(glGetPixelMapfv)(map, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPixelMapuiv \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_values = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPixelMapuiv GL_ENTRYPOINT(glGetPixelMapuiv)(map, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPixelMapusv \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   const GLushort * pTrace_values = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPixelMapusv GL_ENTRYPOINT(glGetPixelMapusv)(map, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPolygonStipple \
   const GLubyte * pTrace_mask = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPolygonStipple GL_ENTRYPOINT(glGetPolygonStipple)(pReplay_mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexEnvfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexEnvfv GL_ENTRYPOINT(glGetTexEnvfv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexEnviv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexEnviv GL_ENTRYPOINT(glGetTexEnviv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexGendv \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexGendv GL_ENTRYPOINT(glGetTexGendv)(coord, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexGenfv \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexGenfv GL_ENTRYPOINT(glGetTexGenfv)(coord, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexGeniv \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexGeniv GL_ENTRYPOINT(glGetTexGeniv)(coord, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsList \
   GLuint list = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsList GL_ENTRYPOINT(glIsList)(list)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFrustum \
   GLdouble left = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble right = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble bottom = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble top = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble zNear = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble zFar = trace_packet.get_param_value<GLdouble>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glFrustum GL_ENTRYPOINT(glFrustum)(left, right, bottom, top, zNear, zFar)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadIdentity  

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadIdentity GL_ENTRYPOINT(glLoadIdentity)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadMatrixf \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadMatrixf GL_ENTRYPOINT(glLoadMatrixf)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadMatrixd \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadMatrixd GL_ENTRYPOINT(glLoadMatrixd)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixMode \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixMode GL_ENTRYPOINT(glMatrixMode)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultMatrixf \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultMatrixf GL_ENTRYPOINT(glMultMatrixf)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultMatrixd \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultMatrixd GL_ENTRYPOINT(glMultMatrixd)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glOrtho \
   GLdouble left = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble right = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble bottom = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble top = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble zNear = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble zFar = trace_packet.get_param_value<GLdouble>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glOrtho GL_ENTRYPOINT(glOrtho)(left, right, bottom, top, zNear, zFar)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPopMatrix  

#define VOGL_REPLAY_CALL_GL_HELPER_glPopMatrix GL_ENTRYPOINT(glPopMatrix)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPushMatrix  

#define VOGL_REPLAY_CALL_GL_HELPER_glPushMatrix GL_ENTRYPOINT(glPushMatrix)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRotated \
   GLdouble angle = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRotated GL_ENTRYPOINT(glRotated)(angle, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRotatef \
   GLfloat angle = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRotatef GL_ENTRYPOINT(glRotatef)(angle, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glScaled \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glScaled GL_ENTRYPOINT(glScaled)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glScalef \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glScalef GL_ENTRYPOINT(glScalef)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTranslated \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTranslated GL_ENTRYPOINT(glTranslated)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTranslatef \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTranslatef GL_ENTRYPOINT(glTranslatef)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawArrays \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint first = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawArrays GL_ENTRYPOINT(glDrawArrays)(mode, first, count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElements \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_indices = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElements GL_ENTRYPOINT(glDrawElements)(mode, count, type, pTrace_indices)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPointerv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLvoid* * pTrace_params = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPointerv GL_ENTRYPOINT(glGetPointerv)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPolygonOffset \
   GLfloat factor = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat units = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPolygonOffset GL_ENTRYPOINT(glPolygonOffset)(factor, units)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexImage1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLint x = trace_packet.get_param_value<GLint>(3); \
   GLint y = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexImage1D GL_ENTRYPOINT(glCopyTexImage1D)(target, level, internalformat, x, y, width, border)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexImage2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLint x = trace_packet.get_param_value<GLint>(3); \
   GLint y = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLint border = trace_packet.get_param_value<GLint>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexImage2D GL_ENTRYPOINT(glCopyTexImage2D)(target, level, internalformat, x, y, width, height, border)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexSubImage1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint x = trace_packet.get_param_value<GLint>(3); \
   GLint y = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexSubImage1D GL_ENTRYPOINT(glCopyTexSubImage1D)(target, level, xoffset, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexSubImage2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint x = trace_packet.get_param_value<GLint>(4); \
   GLint y = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexSubImage2D GL_ENTRYPOINT(glCopyTexSubImage2D)(target, level, xoffset, yoffset, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexSubImage1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexSubImage1D GL_ENTRYPOINT(glTexSubImage1D)(target, level, xoffset, width, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexSubImage2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLenum format = trace_packet.get_param_value<GLenum>(6); \
   GLenum type = trace_packet.get_param_value<GLenum>(7); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexSubImage2D GL_ENTRYPOINT(glTexSubImage2D)(target, level, xoffset, yoffset, width, height, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindTexture \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint texture = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindTexture GL_ENTRYPOINT(glBindTexture)(target, texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteTextures \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_textures = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteTextures GL_ENTRYPOINT(glDeleteTextures)(n, pTrace_textures)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenTextures \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_textures = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenTextures GL_ENTRYPOINT(glGenTextures)(n, pReplay_textures)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsTexture \
   GLuint texture = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsTexture GL_ENTRYPOINT(glIsTexture)(texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glArrayElement \
   GLint i = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glArrayElement GL_ENTRYPOINT(glArrayElement)(i)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorPointer \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorPointer GL_ENTRYPOINT(glColorPointer)(size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDisableClientState \
   GLenum array = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDisableClientState GL_ENTRYPOINT(glDisableClientState)(array)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEdgeFlagPointer \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(0); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glEdgeFlagPointer GL_ENTRYPOINT(glEdgeFlagPointer)(stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnableClientState \
   GLenum array = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEnableClientState GL_ENTRYPOINT(glEnableClientState)(array)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexPointer \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexPointer GL_ENTRYPOINT(glIndexPointer)(type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInterleavedArrays \
   GLenum format = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glInterleavedArrays GL_ENTRYPOINT(glInterleavedArrays)(format, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalPointer \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalPointer GL_ENTRYPOINT(glNormalPointer)(type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordPointer \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordPointer GL_ENTRYPOINT(glTexCoordPointer)(size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexPointer \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexPointer GL_ENTRYPOINT(glVertexPointer)(size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAreTexturesResident \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_textures = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLboolean * pTrace_residences = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glAreTexturesResident GL_ENTRYPOINT(glAreTexturesResident)(n, pTrace_textures, pReplay_residences)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPrioritizeTextures \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_textures = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_priorities = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPrioritizeTextures GL_ENTRYPOINT(glPrioritizeTextures)(n, pTrace_textures, pTrace_priorities)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexub \
   GLubyte c = trace_packet.get_param_value<GLubyte>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexub GL_ENTRYPOINT(glIndexub)(c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexubv \
   const GLubyte * pTrace_c = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexubv GL_ENTRYPOINT(glIndexubv)(pTrace_c)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPopClientAttrib  

#define VOGL_REPLAY_CALL_GL_HELPER_glPopClientAttrib GL_ENTRYPOINT(glPopClientAttrib)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPushClientAttrib \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPushClientAttrib GL_ENTRYPOINT(glPushClientAttrib)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendColor \
   GLfloat red = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat green = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat blue = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat alpha = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendColor GL_ENTRYPOINT(glBlendColor)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquation \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquation GL_ENTRYPOINT(glBlendEquation)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawRangeElements \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint start = trace_packet.get_param_value<GLuint>(1); \
   GLuint end = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_indices = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawRangeElements GL_ENTRYPOINT(glDrawRangeElements)(mode, start, end, count, type, pTrace_indices)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexImage3D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint internalformat = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6); \
   GLenum format = trace_packet.get_param_value<GLenum>(7); \
   GLenum type = trace_packet.get_param_value<GLenum>(8); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexImage3D GL_ENTRYPOINT(glTexImage3D)(target, level, internalformat, width, height, depth, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexSubImage3D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint zoffset = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(7); \
   GLenum format = trace_packet.get_param_value<GLenum>(8); \
   GLenum type = trace_packet.get_param_value<GLenum>(9); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(10));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexSubImage3D GL_ENTRYPOINT(glTexSubImage3D)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexSubImage3D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint zoffset = trace_packet.get_param_value<GLint>(4); \
   GLint x = trace_packet.get_param_value<GLint>(5); \
   GLint y = trace_packet.get_param_value<GLint>(6); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(7); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexSubImage3D GL_ENTRYPOINT(glCopyTexSubImage3D)(target, level, xoffset, yoffset, zoffset, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorTable \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLenum format = trace_packet.get_param_value<GLenum>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_table = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorTable GL_ENTRYPOINT(glColorTable)(target, internalformat, width, format, type, pTrace_table)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorTableParameterfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorTableParameterfv GL_ENTRYPOINT(glColorTableParameterfv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorTableParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorTableParameteriv GL_ENTRYPOINT(glColorTableParameteriv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyColorTable \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyColorTable GL_ENTRYPOINT(glCopyColorTable)(target, internalformat, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetColorTable \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_table = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetColorTable GL_ENTRYPOINT(glGetColorTable)(target, format, type, pReplay_table)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetColorTableParameterfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetColorTableParameterfv GL_ENTRYPOINT(glGetColorTableParameterfv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetColorTableParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetColorTableParameteriv GL_ENTRYPOINT(glGetColorTableParameteriv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorSubTable \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei start = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLenum format = trace_packet.get_param_value<GLenum>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorSubTable GL_ENTRYPOINT(glColorSubTable)(target, start, count, format, type, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyColorSubTable \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei start = trace_packet.get_param_value<GLsizei>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyColorSubTable GL_ENTRYPOINT(glCopyColorSubTable)(target, start, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionFilter1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLenum format = trace_packet.get_param_value<GLenum>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_image = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionFilter1D GL_ENTRYPOINT(glConvolutionFilter1D)(target, internalformat, width, format, type, pTrace_image)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionFilter2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const GLvoid * pTrace_image = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionFilter2D GL_ENTRYPOINT(glConvolutionFilter2D)(target, internalformat, width, height, format, type, pTrace_image)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameterf \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat params = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameterf GL_ENTRYPOINT(glConvolutionParameterf)(target, pname, params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameterfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameterfv GL_ENTRYPOINT(glConvolutionParameterfv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameteri \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint params = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameteri GL_ENTRYPOINT(glConvolutionParameteri)(target, pname, params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameteriv GL_ENTRYPOINT(glConvolutionParameteriv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyConvolutionFilter1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyConvolutionFilter1D GL_ENTRYPOINT(glCopyConvolutionFilter1D)(target, internalformat, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyConvolutionFilter2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyConvolutionFilter2D GL_ENTRYPOINT(glCopyConvolutionFilter2D)(target, internalformat, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetConvolutionFilter \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_image = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetConvolutionFilter GL_ENTRYPOINT(glGetConvolutionFilter)(target, format, type, pReplay_image)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetConvolutionParameterfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetConvolutionParameterfv GL_ENTRYPOINT(glGetConvolutionParameterfv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetConvolutionParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetConvolutionParameteriv GL_ENTRYPOINT(glGetConvolutionParameteriv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSeparableFilter \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_row = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLvoid * pTrace_column = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLvoid * pTrace_span = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSeparableFilter GL_ENTRYPOINT(glGetSeparableFilter)(target, format, type, pReplay_row, pReplay_column, pReplay_span)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSeparableFilter2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const GLvoid * pTrace_row = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6)); \
   const GLvoid * pTrace_column = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glSeparableFilter2D GL_ENTRYPOINT(glSeparableFilter2D)(target, internalformat, width, height, format, type, pTrace_row, pTrace_column)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetHistogram \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLboolean reset = trace_packet.get_param_value<GLboolean>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   const GLvoid * pTrace_values = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetHistogram GL_ENTRYPOINT(glGetHistogram)(target, reset, format, type, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetHistogramParameterfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetHistogramParameterfv GL_ENTRYPOINT(glGetHistogramParameterfv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetHistogramParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetHistogramParameteriv GL_ENTRYPOINT(glGetHistogramParameteriv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMinmax \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLboolean reset = trace_packet.get_param_value<GLboolean>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   const GLvoid * pTrace_values = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMinmax GL_ENTRYPOINT(glGetMinmax)(target, reset, format, type, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMinmaxParameterfv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMinmaxParameterfv GL_ENTRYPOINT(glGetMinmaxParameterfv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMinmaxParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMinmaxParameteriv GL_ENTRYPOINT(glGetMinmaxParameteriv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glHistogram \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLboolean sink = trace_packet.get_param_value<GLboolean>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glHistogram GL_ENTRYPOINT(glHistogram)(target, width, internalformat, sink)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMinmax \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLboolean sink = trace_packet.get_param_value<GLboolean>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMinmax GL_ENTRYPOINT(glMinmax)(target, internalformat, sink)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glResetHistogram \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glResetHistogram GL_ENTRYPOINT(glResetHistogram)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glResetMinmax \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glResetMinmax GL_ENTRYPOINT(glResetMinmax)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glActiveTexture \
   GLenum texture = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glActiveTexture GL_ENTRYPOINT(glActiveTexture)(texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSampleCoverage \
   GLfloat value = trace_packet.get_param_value<GLfloat>(0); \
   GLboolean invert = trace_packet.get_param_value<GLboolean>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSampleCoverage GL_ENTRYPOINT(glSampleCoverage)(value, invert)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexImage3D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(7); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexImage3D GL_ENTRYPOINT(glCompressedTexImage3D)(target, level, internalformat, width, height, depth, border, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexImage2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLint border = trace_packet.get_param_value<GLint>(5); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(6); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexImage2D GL_ENTRYPOINT(glCompressedTexImage2D)(target, level, internalformat, width, height, border, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexImage1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLint border = trace_packet.get_param_value<GLint>(4); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(5); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexImage1D GL_ENTRYPOINT(glCompressedTexImage1D)(target, level, internalformat, width, border, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexSubImage3D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint zoffset = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(7); \
   GLenum format = trace_packet.get_param_value<GLenum>(8); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(9); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(10));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexSubImage3D GL_ENTRYPOINT(glCompressedTexSubImage3D)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexSubImage2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLenum format = trace_packet.get_param_value<GLenum>(6); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(7); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexSubImage2D GL_ENTRYPOINT(glCompressedTexSubImage2D)(target, level, xoffset, yoffset, width, height, format, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexSubImage1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(5); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexSubImage1D GL_ENTRYPOINT(glCompressedTexSubImage1D)(target, level, xoffset, width, format, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetCompressedTexImage \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   const GLvoid * pTrace_img = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetCompressedTexImage GL_ENTRYPOINT(glGetCompressedTexImage)(target, level, pReplay_img)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClientActiveTexture \
   GLenum texture = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClientActiveTexture GL_ENTRYPOINT(glClientActiveTexture)(texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1d \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble s = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1d GL_ENTRYPOINT(glMultiTexCoord1d)(target, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1dv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1dv GL_ENTRYPOINT(glMultiTexCoord1dv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1f \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1f GL_ENTRYPOINT(glMultiTexCoord1f)(target, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1fv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1fv GL_ENTRYPOINT(glMultiTexCoord1fv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1i \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint s = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1i GL_ENTRYPOINT(glMultiTexCoord1i)(target, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1iv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1iv GL_ENTRYPOINT(glMultiTexCoord1iv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1s \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLshort s = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1s GL_ENTRYPOINT(glMultiTexCoord1s)(target, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1sv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1sv GL_ENTRYPOINT(glMultiTexCoord1sv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2d \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble s = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble t = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2d GL_ENTRYPOINT(glMultiTexCoord2d)(target, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2dv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2dv GL_ENTRYPOINT(glMultiTexCoord2dv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2f \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2f GL_ENTRYPOINT(glMultiTexCoord2f)(target, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2fv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2fv GL_ENTRYPOINT(glMultiTexCoord2fv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2i \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint s = trace_packet.get_param_value<GLint>(1); \
   GLint t = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2i GL_ENTRYPOINT(glMultiTexCoord2i)(target, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2iv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2iv GL_ENTRYPOINT(glMultiTexCoord2iv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2s \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLshort s = trace_packet.get_param_value<GLshort>(1); \
   GLshort t = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2s GL_ENTRYPOINT(glMultiTexCoord2s)(target, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2sv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2sv GL_ENTRYPOINT(glMultiTexCoord2sv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3d \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble s = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble t = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble r = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3d GL_ENTRYPOINT(glMultiTexCoord3d)(target, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3dv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3dv GL_ENTRYPOINT(glMultiTexCoord3dv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3f \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3f GL_ENTRYPOINT(glMultiTexCoord3f)(target, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3fv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3fv GL_ENTRYPOINT(glMultiTexCoord3fv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3i \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint s = trace_packet.get_param_value<GLint>(1); \
   GLint t = trace_packet.get_param_value<GLint>(2); \
   GLint r = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3i GL_ENTRYPOINT(glMultiTexCoord3i)(target, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3iv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3iv GL_ENTRYPOINT(glMultiTexCoord3iv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3s \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLshort s = trace_packet.get_param_value<GLshort>(1); \
   GLshort t = trace_packet.get_param_value<GLshort>(2); \
   GLshort r = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3s GL_ENTRYPOINT(glMultiTexCoord3s)(target, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3sv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3sv GL_ENTRYPOINT(glMultiTexCoord3sv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4d \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble s = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble t = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble r = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble q = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4d GL_ENTRYPOINT(glMultiTexCoord4d)(target, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4dv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4dv GL_ENTRYPOINT(glMultiTexCoord4dv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4f \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat q = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4f GL_ENTRYPOINT(glMultiTexCoord4f)(target, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4fv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4fv GL_ENTRYPOINT(glMultiTexCoord4fv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4i \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint s = trace_packet.get_param_value<GLint>(1); \
   GLint t = trace_packet.get_param_value<GLint>(2); \
   GLint r = trace_packet.get_param_value<GLint>(3); \
   GLint q = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4i GL_ENTRYPOINT(glMultiTexCoord4i)(target, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4iv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4iv GL_ENTRYPOINT(glMultiTexCoord4iv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4s \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLshort s = trace_packet.get_param_value<GLshort>(1); \
   GLshort t = trace_packet.get_param_value<GLshort>(2); \
   GLshort r = trace_packet.get_param_value<GLshort>(3); \
   GLshort q = trace_packet.get_param_value<GLshort>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4s GL_ENTRYPOINT(glMultiTexCoord4s)(target, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4sv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4sv GL_ENTRYPOINT(glMultiTexCoord4sv)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadTransposeMatrixf \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadTransposeMatrixf GL_ENTRYPOINT(glLoadTransposeMatrixf)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadTransposeMatrixd \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadTransposeMatrixd GL_ENTRYPOINT(glLoadTransposeMatrixd)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultTransposeMatrixf \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultTransposeMatrixf GL_ENTRYPOINT(glMultTransposeMatrixf)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultTransposeMatrixd \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultTransposeMatrixd GL_ENTRYPOINT(glMultTransposeMatrixd)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFuncSeparate \
   GLenum sfactorRGB = trace_packet.get_param_value<GLenum>(0); \
   GLenum dfactorRGB = trace_packet.get_param_value<GLenum>(1); \
   GLenum sfactorAlpha = trace_packet.get_param_value<GLenum>(2); \
   GLenum dfactorAlpha = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFuncSeparate GL_ENTRYPOINT(glBlendFuncSeparate)(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawArrays \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_first = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLsizei drawcount = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawArrays GL_ENTRYPOINT(glMultiDrawArrays)(mode, pTrace_first, pTrace_count, drawcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawElements \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid* const * pTrace_indices = reinterpret_cast<const GLvoid* const *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei drawcount = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawElements GL_ENTRYPOINT(glMultiDrawElements)(mode, pTrace_count, type, pReplay_indices, drawcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterf \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterf GL_ENTRYPOINT(glPointParameterf)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterfv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterfv GL_ENTRYPOINT(glPointParameterfv)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameteri \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameteri GL_ENTRYPOINT(glPointParameteri)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameteriv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameteriv GL_ENTRYPOINT(glPointParameteriv)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordf \
   GLfloat coord = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordf GL_ENTRYPOINT(glFogCoordf)(coord)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordfv \
   const GLfloat * pTrace_coord = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordfv GL_ENTRYPOINT(glFogCoordfv)(pTrace_coord)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordd \
   GLdouble coord = trace_packet.get_param_value<GLdouble>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordd GL_ENTRYPOINT(glFogCoordd)(coord)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoorddv \
   const GLdouble * pTrace_coord = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoorddv GL_ENTRYPOINT(glFogCoorddv)(pTrace_coord)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordPointer \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordPointer GL_ENTRYPOINT(glFogCoordPointer)(type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3b \
   GLbyte red = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte green = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte blue = trace_packet.get_param_value<GLbyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3b GL_ENTRYPOINT(glSecondaryColor3b)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3bv \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3bv GL_ENTRYPOINT(glSecondaryColor3bv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3d \
   GLdouble red = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble green = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble blue = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3d GL_ENTRYPOINT(glSecondaryColor3d)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3dv GL_ENTRYPOINT(glSecondaryColor3dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3f \
   GLfloat red = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat green = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat blue = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3f GL_ENTRYPOINT(glSecondaryColor3f)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3fv GL_ENTRYPOINT(glSecondaryColor3fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3i \
   GLint red = trace_packet.get_param_value<GLint>(0); \
   GLint green = trace_packet.get_param_value<GLint>(1); \
   GLint blue = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3i GL_ENTRYPOINT(glSecondaryColor3i)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3iv GL_ENTRYPOINT(glSecondaryColor3iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3s \
   GLshort red = trace_packet.get_param_value<GLshort>(0); \
   GLshort green = trace_packet.get_param_value<GLshort>(1); \
   GLshort blue = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3s GL_ENTRYPOINT(glSecondaryColor3s)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3sv GL_ENTRYPOINT(glSecondaryColor3sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3ub \
   GLubyte red = trace_packet.get_param_value<GLubyte>(0); \
   GLubyte green = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte blue = trace_packet.get_param_value<GLubyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3ub GL_ENTRYPOINT(glSecondaryColor3ub)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3ubv \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3ubv GL_ENTRYPOINT(glSecondaryColor3ubv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3ui \
   GLuint red = trace_packet.get_param_value<GLuint>(0); \
   GLuint green = trace_packet.get_param_value<GLuint>(1); \
   GLuint blue = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3ui GL_ENTRYPOINT(glSecondaryColor3ui)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3uiv \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3uiv GL_ENTRYPOINT(glSecondaryColor3uiv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3us \
   GLushort red = trace_packet.get_param_value<GLushort>(0); \
   GLushort green = trace_packet.get_param_value<GLushort>(1); \
   GLushort blue = trace_packet.get_param_value<GLushort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3us GL_ENTRYPOINT(glSecondaryColor3us)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3usv \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3usv GL_ENTRYPOINT(glSecondaryColor3usv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColorPointer \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColorPointer GL_ENTRYPOINT(glSecondaryColorPointer)(size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2d \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2d GL_ENTRYPOINT(glWindowPos2d)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2dv GL_ENTRYPOINT(glWindowPos2dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2f \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2f GL_ENTRYPOINT(glWindowPos2f)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2fv GL_ENTRYPOINT(glWindowPos2fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2i \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2i GL_ENTRYPOINT(glWindowPos2i)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2iv GL_ENTRYPOINT(glWindowPos2iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2s \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2s GL_ENTRYPOINT(glWindowPos2s)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2sv GL_ENTRYPOINT(glWindowPos2sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3d \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3d GL_ENTRYPOINT(glWindowPos3d)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3dv \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3dv GL_ENTRYPOINT(glWindowPos3dv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3f \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3f GL_ENTRYPOINT(glWindowPos3f)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3fv \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3fv GL_ENTRYPOINT(glWindowPos3fv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3i \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLint z = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3i GL_ENTRYPOINT(glWindowPos3i)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3iv \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3iv GL_ENTRYPOINT(glWindowPos3iv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3s \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1); \
   GLshort z = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3s GL_ENTRYPOINT(glWindowPos3s)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3sv \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3sv GL_ENTRYPOINT(glWindowPos3sv)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenQueries \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenQueries GL_ENTRYPOINT(glGenQueries)(n, pReplay_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteQueries \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteQueries GL_ENTRYPOINT(glDeleteQueries)(n, pTrace_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsQuery \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsQuery GL_ENTRYPOINT(glIsQuery)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginQuery \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginQuery GL_ENTRYPOINT(glBeginQuery)(target, id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndQuery \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEndQuery GL_ENTRYPOINT(glEndQuery)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryiv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryiv GL_ENTRYPOINT(glGetQueryiv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryObjectiv \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryObjectiv GL_ENTRYPOINT(glGetQueryObjectiv)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryObjectuiv \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryObjectuiv GL_ENTRYPOINT(glGetQueryObjectuiv)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBuffer \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBuffer GL_ENTRYPOINT(glBindBuffer)(target, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteBuffers \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_buffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteBuffers GL_ENTRYPOINT(glDeleteBuffers)(n, pTrace_buffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenBuffers \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_buffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenBuffers GL_ENTRYPOINT(glGenBuffers)(n, pReplay_buffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsBuffer \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsBuffer GL_ENTRYPOINT(glIsBuffer)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBufferData \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(1); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLenum usage = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBufferData GL_ENTRYPOINT(glBufferData)(target, size, pTrace_data, usage)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBufferSubData \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(2); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glBufferSubData GL_ENTRYPOINT(glBufferSubData)(target, offset, size, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBufferSubData \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(2); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBufferSubData GL_ENTRYPOINT(glGetBufferSubData)(target, offset, size, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapBuffer \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum access = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapBuffer GL_ENTRYPOINT(glMapBuffer)(target, access)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUnmapBuffer \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glUnmapBuffer GL_ENTRYPOINT(glUnmapBuffer)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBufferParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBufferParameteriv GL_ENTRYPOINT(glGetBufferParameteriv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBufferPointerv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_params = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBufferPointerv GL_ENTRYPOINT(glGetBufferPointerv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquationSeparate \
   GLenum modeRGB = trace_packet.get_param_value<GLenum>(0); \
   GLenum modeAlpha = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquationSeparate GL_ENTRYPOINT(glBlendEquationSeparate)(modeRGB, modeAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawBuffers \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLenum * pTrace_bufs = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawBuffers GL_ENTRYPOINT(glDrawBuffers)(n, pTrace_bufs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilOpSeparate \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum sfail = trace_packet.get_param_value<GLenum>(1); \
   GLenum dpfail = trace_packet.get_param_value<GLenum>(2); \
   GLenum dppass = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilOpSeparate GL_ENTRYPOINT(glStencilOpSeparate)(face, sfail, dpfail, dppass)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilFuncSeparate \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum func = trace_packet.get_param_value<GLenum>(1); \
   GLint ref = trace_packet.get_param_value<GLint>(2); \
   GLuint mask = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilFuncSeparate GL_ENTRYPOINT(glStencilFuncSeparate)(face, func, ref, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilMaskSeparate \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLuint mask = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilMaskSeparate GL_ENTRYPOINT(glStencilMaskSeparate)(face, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAttachShader \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint shader = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glAttachShader GL_ENTRYPOINT(glAttachShader)(program, shader)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindAttribLocation \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glBindAttribLocation GL_ENTRYPOINT(glBindAttribLocation)(program, index, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompileShader \
   GLuint shader = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glCompileShader GL_ENTRYPOINT(glCompileShader)(shader)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCreateProgram  

#define VOGL_REPLAY_CALL_GL_HELPER_glCreateProgram GL_ENTRYPOINT(glCreateProgram)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCreateShader \
   GLenum type = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glCreateShader GL_ENTRYPOINT(glCreateShader)(type)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteProgram \
   GLuint program = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteProgram GL_ENTRYPOINT(glDeleteProgram)(program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteShader \
   GLuint shader = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteShader GL_ENTRYPOINT(glDeleteShader)(shader)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDetachShader \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint shader = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDetachShader GL_ENTRYPOINT(glDetachShader)(program, shader)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDisableVertexAttribArray \
   GLuint index = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDisableVertexAttribArray GL_ENTRYPOINT(glDisableVertexAttribArray)(index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnableVertexAttribArray \
   GLuint index = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEnableVertexAttribArray GL_ENTRYPOINT(glEnableVertexAttribArray)(index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveAttrib \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLint * pTrace_size = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLenum * pTrace_type = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveAttrib GL_ENTRYPOINT(glGetActiveAttrib)(program, index, bufSize, pReplay_length, pReplay_size, pReplay_type, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveUniform \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLint * pTrace_size = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLenum * pTrace_type = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveUniform GL_ENTRYPOINT(glGetActiveUniform)(program, index, bufSize, pReplay_length, pReplay_size, pReplay_type, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetAttachedShaders \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLsizei maxCount = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLuint * pTrace_obj = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetAttachedShaders GL_ENTRYPOINT(glGetAttachedShaders)(program, maxCount, pReplay_count, pReplay_obj)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetAttribLocation \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetAttribLocation GL_ENTRYPOINT(glGetAttribLocation)(program, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramiv GL_ENTRYPOINT(glGetProgramiv)(program, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramInfoLog \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLchar * pTrace_infoLog = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramInfoLog GL_ENTRYPOINT(glGetProgramInfoLog)(program, bufSize, pReplay_length, pReplay_infoLog)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetShaderiv \
   GLuint shader = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetShaderiv GL_ENTRYPOINT(glGetShaderiv)(shader, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetShaderInfoLog \
   GLuint shader = trace_packet.get_param_value<GLuint>(0); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLchar * pTrace_infoLog = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetShaderInfoLog GL_ENTRYPOINT(glGetShaderInfoLog)(shader, bufSize, pReplay_length, pReplay_infoLog)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetShaderSource \
   GLuint shader = trace_packet.get_param_value<GLuint>(0); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLchar * pTrace_source = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetShaderSource GL_ENTRYPOINT(glGetShaderSource)(shader, bufSize, pReplay_length, pReplay_source)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformLocation \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformLocation GL_ENTRYPOINT(glGetUniformLocation)(program, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformfv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformfv GL_ENTRYPOINT(glGetUniformfv)(program, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformiv GL_ENTRYPOINT(glGetUniformiv)(program, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribdv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribdv GL_ENTRYPOINT(glGetVertexAttribdv)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribfv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribfv GL_ENTRYPOINT(glGetVertexAttribfv)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribiv GL_ENTRYPOINT(glGetVertexAttribiv)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribPointerv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribPointerv GL_ENTRYPOINT(glGetVertexAttribPointerv)(index, pname, pReplay_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsProgram \
   GLuint program = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsProgram GL_ENTRYPOINT(glIsProgram)(program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsShader \
   GLuint shader = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsShader GL_ENTRYPOINT(glIsShader)(shader)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLinkProgram \
   GLuint program = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glLinkProgram GL_ENTRYPOINT(glLinkProgram)(program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glShaderSource \
   GLuint shader = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLchar* const * pTrace_string = reinterpret_cast<const GLchar* const *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLint * pTrace_length = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glShaderSource GL_ENTRYPOINT(glShaderSource)(shader, count, pReplay_string, pTrace_length)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUseProgram \
   GLuint program = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glUseProgram GL_ENTRYPOINT(glUseProgram)(program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1f \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1f GL_ENTRYPOINT(glUniform1f)(location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2f \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2f GL_ENTRYPOINT(glUniform2f)(location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3f \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3f GL_ENTRYPOINT(glUniform3f)(location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4f \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat v3 = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4f GL_ENTRYPOINT(glUniform4f)(location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1i \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint v0 = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1i GL_ENTRYPOINT(glUniform1i)(location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2i \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint v0 = trace_packet.get_param_value<GLint>(1); \
   GLint v1 = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2i GL_ENTRYPOINT(glUniform2i)(location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3i \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint v0 = trace_packet.get_param_value<GLint>(1); \
   GLint v1 = trace_packet.get_param_value<GLint>(2); \
   GLint v2 = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3i GL_ENTRYPOINT(glUniform3i)(location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4i \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint v0 = trace_packet.get_param_value<GLint>(1); \
   GLint v1 = trace_packet.get_param_value<GLint>(2); \
   GLint v2 = trace_packet.get_param_value<GLint>(3); \
   GLint v3 = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4i GL_ENTRYPOINT(glUniform4i)(location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1fv GL_ENTRYPOINT(glUniform1fv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2fv GL_ENTRYPOINT(glUniform2fv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3fv GL_ENTRYPOINT(glUniform3fv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4fv GL_ENTRYPOINT(glUniform4fv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1iv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1iv GL_ENTRYPOINT(glUniform1iv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2iv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2iv GL_ENTRYPOINT(glUniform2iv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3iv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3iv GL_ENTRYPOINT(glUniform3iv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4iv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4iv GL_ENTRYPOINT(glUniform4iv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix2fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix2fv GL_ENTRYPOINT(glUniformMatrix2fv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix3fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix3fv GL_ENTRYPOINT(glUniformMatrix3fv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix4fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix4fv GL_ENTRYPOINT(glUniformMatrix4fv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glValidateProgram \
   GLuint program = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glValidateProgram GL_ENTRYPOINT(glValidateProgram)(program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1d \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1d GL_ENTRYPOINT(glVertexAttrib1d)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1dv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1dv GL_ENTRYPOINT(glVertexAttrib1dv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1f \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1f GL_ENTRYPOINT(glVertexAttrib1f)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1fv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1fv GL_ENTRYPOINT(glVertexAttrib1fv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1s \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1s GL_ENTRYPOINT(glVertexAttrib1s)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1sv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1sv GL_ENTRYPOINT(glVertexAttrib1sv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2d \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2d GL_ENTRYPOINT(glVertexAttrib2d)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2dv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2dv GL_ENTRYPOINT(glVertexAttrib2dv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2f \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2f GL_ENTRYPOINT(glVertexAttrib2f)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2fv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2fv GL_ENTRYPOINT(glVertexAttrib2fv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2s \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2s GL_ENTRYPOINT(glVertexAttrib2s)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2sv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2sv GL_ENTRYPOINT(glVertexAttrib2sv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3d \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3d GL_ENTRYPOINT(glVertexAttrib3d)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3dv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3dv GL_ENTRYPOINT(glVertexAttrib3dv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3f \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3f GL_ENTRYPOINT(glVertexAttrib3f)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3fv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3fv GL_ENTRYPOINT(glVertexAttrib3fv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3s \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2); \
   GLshort z = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3s GL_ENTRYPOINT(glVertexAttrib3s)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3sv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3sv GL_ENTRYPOINT(glVertexAttrib3sv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4Nbv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4Nbv GL_ENTRYPOINT(glVertexAttrib4Nbv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4Niv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4Niv GL_ENTRYPOINT(glVertexAttrib4Niv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4Nsv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4Nsv GL_ENTRYPOINT(glVertexAttrib4Nsv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4Nub \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLubyte x = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte y = trace_packet.get_param_value<GLubyte>(2); \
   GLubyte z = trace_packet.get_param_value<GLubyte>(3); \
   GLubyte w = trace_packet.get_param_value<GLubyte>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4Nub GL_ENTRYPOINT(glVertexAttrib4Nub)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4Nubv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4Nubv GL_ENTRYPOINT(glVertexAttrib4Nubv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4Nuiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4Nuiv GL_ENTRYPOINT(glVertexAttrib4Nuiv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4Nusv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4Nusv GL_ENTRYPOINT(glVertexAttrib4Nusv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4bv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4bv GL_ENTRYPOINT(glVertexAttrib4bv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4d \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4d GL_ENTRYPOINT(glVertexAttrib4d)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4dv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4dv GL_ENTRYPOINT(glVertexAttrib4dv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4f \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4f GL_ENTRYPOINT(glVertexAttrib4f)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4fv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4fv GL_ENTRYPOINT(glVertexAttrib4fv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4iv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4iv GL_ENTRYPOINT(glVertexAttrib4iv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4s \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2); \
   GLshort z = trace_packet.get_param_value<GLshort>(3); \
   GLshort w = trace_packet.get_param_value<GLshort>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4s GL_ENTRYPOINT(glVertexAttrib4s)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4sv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4sv GL_ENTRYPOINT(glVertexAttrib4sv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4ubv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4ubv GL_ENTRYPOINT(glVertexAttrib4ubv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4uiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4uiv GL_ENTRYPOINT(glVertexAttrib4uiv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4usv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4usv GL_ENTRYPOINT(glVertexAttrib4usv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribPointer \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(3); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(4); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribPointer GL_ENTRYPOINT(glVertexAttribPointer)(index, size, type, normalized, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix2x3fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix2x3fv GL_ENTRYPOINT(glUniformMatrix2x3fv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix3x2fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix3x2fv GL_ENTRYPOINT(glUniformMatrix3x2fv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix2x4fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix2x4fv GL_ENTRYPOINT(glUniformMatrix2x4fv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix4x2fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix4x2fv GL_ENTRYPOINT(glUniformMatrix4x2fv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix3x4fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix3x4fv GL_ENTRYPOINT(glUniformMatrix3x4fv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix4x3fv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix4x3fv GL_ENTRYPOINT(glUniformMatrix4x3fv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorMaski \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLboolean r = trace_packet.get_param_value<GLboolean>(1); \
   GLboolean g = trace_packet.get_param_value<GLboolean>(2); \
   GLboolean b = trace_packet.get_param_value<GLboolean>(3); \
   GLboolean a = trace_packet.get_param_value<GLboolean>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorMaski GL_ENTRYPOINT(glColorMaski)(index, r, g, b, a)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBooleani_v \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLboolean * pTrace_data = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBooleani_v GL_ENTRYPOINT(glGetBooleani_v)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetIntegeri_v \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLint * pTrace_data = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetIntegeri_v GL_ENTRYPOINT(glGetIntegeri_v)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnablei \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEnablei GL_ENTRYPOINT(glEnablei)(target, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDisablei \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDisablei GL_ENTRYPOINT(glDisablei)(target, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsEnabledi \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsEnabledi GL_ENTRYPOINT(glIsEnabledi)(target, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginTransformFeedback \
   GLenum primitiveMode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginTransformFeedback GL_ENTRYPOINT(glBeginTransformFeedback)(primitiveMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndTransformFeedback  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndTransformFeedback GL_ENTRYPOINT(glEndTransformFeedback)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBufferRange \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(3); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBufferRange GL_ENTRYPOINT(glBindBufferRange)(target, index, buffer, offset, size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBufferBase \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBufferBase GL_ENTRYPOINT(glBindBufferBase)(target, index, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTransformFeedbackVaryings \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLchar* const * pTrace_varyings = reinterpret_cast<const GLchar* const *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLenum bufferMode = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTransformFeedbackVaryings GL_ENTRYPOINT(glTransformFeedbackVaryings)(program, count, pReplay_varyings, bufferMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTransformFeedbackVarying \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLsizei * pTrace_size = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLenum * pTrace_type = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTransformFeedbackVarying GL_ENTRYPOINT(glGetTransformFeedbackVarying)(program, index, bufSize, pReplay_length, pReplay_size, pReplay_type, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClampColor \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum clamp = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glClampColor GL_ENTRYPOINT(glClampColor)(target, clamp)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginConditionalRender \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginConditionalRender GL_ENTRYPOINT(glBeginConditionalRender)(id, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndConditionalRender  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndConditionalRender GL_ENTRYPOINT(glEndConditionalRender)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribIPointer \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribIPointer GL_ENTRYPOINT(glVertexAttribIPointer)(index, size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribIiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribIiv GL_ENTRYPOINT(glGetVertexAttribIiv)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribIuiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribIuiv GL_ENTRYPOINT(glGetVertexAttribIuiv)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI1i \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI1i GL_ENTRYPOINT(glVertexAttribI1i)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI2i \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1); \
   GLint y = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI2i GL_ENTRYPOINT(glVertexAttribI2i)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI3i \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1); \
   GLint y = trace_packet.get_param_value<GLint>(2); \
   GLint z = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI3i GL_ENTRYPOINT(glVertexAttribI3i)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4i \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1); \
   GLint y = trace_packet.get_param_value<GLint>(2); \
   GLint z = trace_packet.get_param_value<GLint>(3); \
   GLint w = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4i GL_ENTRYPOINT(glVertexAttribI4i)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI1ui \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint x = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI1ui GL_ENTRYPOINT(glVertexAttribI1ui)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI2ui \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint x = trace_packet.get_param_value<GLuint>(1); \
   GLuint y = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI2ui GL_ENTRYPOINT(glVertexAttribI2ui)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI3ui \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint x = trace_packet.get_param_value<GLuint>(1); \
   GLuint y = trace_packet.get_param_value<GLuint>(2); \
   GLuint z = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI3ui GL_ENTRYPOINT(glVertexAttribI3ui)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4ui \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint x = trace_packet.get_param_value<GLuint>(1); \
   GLuint y = trace_packet.get_param_value<GLuint>(2); \
   GLuint z = trace_packet.get_param_value<GLuint>(3); \
   GLuint w = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4ui GL_ENTRYPOINT(glVertexAttribI4ui)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI1iv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI1iv GL_ENTRYPOINT(glVertexAttribI1iv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI2iv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI2iv GL_ENTRYPOINT(glVertexAttribI2iv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI3iv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI3iv GL_ENTRYPOINT(glVertexAttribI3iv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4iv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4iv GL_ENTRYPOINT(glVertexAttribI4iv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI1uiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI1uiv GL_ENTRYPOINT(glVertexAttribI1uiv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI2uiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI2uiv GL_ENTRYPOINT(glVertexAttribI2uiv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI3uiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI3uiv GL_ENTRYPOINT(glVertexAttribI3uiv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4uiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4uiv GL_ENTRYPOINT(glVertexAttribI4uiv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4bv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4bv GL_ENTRYPOINT(glVertexAttribI4bv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4sv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4sv GL_ENTRYPOINT(glVertexAttribI4sv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4ubv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4ubv GL_ENTRYPOINT(glVertexAttribI4ubv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4usv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4usv GL_ENTRYPOINT(glVertexAttribI4usv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformuiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformuiv GL_ENTRYPOINT(glGetUniformuiv)(program, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindFragDataLocation \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint color = trace_packet.get_param_value<GLuint>(1); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glBindFragDataLocation GL_ENTRYPOINT(glBindFragDataLocation)(program, color, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFragDataLocation \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFragDataLocation GL_ENTRYPOINT(glGetFragDataLocation)(program, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1ui \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1ui GL_ENTRYPOINT(glUniform1ui)(location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2ui \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(1); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2ui GL_ENTRYPOINT(glUniform2ui)(location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3ui \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(1); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v2 = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3ui GL_ENTRYPOINT(glUniform3ui)(location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4ui \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(1); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v2 = trace_packet.get_param_value<GLuint>(3); \
   GLuint v3 = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4ui GL_ENTRYPOINT(glUniform4ui)(location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1uiv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1uiv GL_ENTRYPOINT(glUniform1uiv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2uiv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2uiv GL_ENTRYPOINT(glUniform2uiv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3uiv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3uiv GL_ENTRYPOINT(glUniform3uiv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4uiv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4uiv GL_ENTRYPOINT(glUniform4uiv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameterIiv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameterIiv GL_ENTRYPOINT(glTexParameterIiv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameterIuiv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameterIuiv GL_ENTRYPOINT(glTexParameterIuiv)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexParameterIiv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexParameterIiv GL_ENTRYPOINT(glGetTexParameterIiv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexParameterIuiv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexParameterIuiv GL_ENTRYPOINT(glGetTexParameterIuiv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearBufferiv \
   GLenum buffer = trace_packet.get_param_value<GLenum>(0); \
   GLint drawbuffer = trace_packet.get_param_value<GLint>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glClearBufferiv GL_ENTRYPOINT(glClearBufferiv)(buffer, drawbuffer, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearBufferuiv \
   GLenum buffer = trace_packet.get_param_value<GLenum>(0); \
   GLint drawbuffer = trace_packet.get_param_value<GLint>(1); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glClearBufferuiv GL_ENTRYPOINT(glClearBufferuiv)(buffer, drawbuffer, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearBufferfv \
   GLenum buffer = trace_packet.get_param_value<GLenum>(0); \
   GLint drawbuffer = trace_packet.get_param_value<GLint>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glClearBufferfv GL_ENTRYPOINT(glClearBufferfv)(buffer, drawbuffer, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearBufferfi \
   GLenum buffer = trace_packet.get_param_value<GLenum>(0); \
   GLint drawbuffer = trace_packet.get_param_value<GLint>(1); \
   GLfloat depth = trace_packet.get_param_value<GLfloat>(2); \
   GLint stencil = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearBufferfi GL_ENTRYPOINT(glClearBufferfi)(buffer, drawbuffer, depth, stencil)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetStringi \
   GLenum name = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetStringi GL_ENTRYPOINT(glGetStringi)(name, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawArraysInstanced \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint first = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei instancecount = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawArraysInstanced GL_ENTRYPOINT(glDrawArraysInstanced)(mode, first, count, instancecount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementsInstanced \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_indices = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei instancecount = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementsInstanced GL_ENTRYPOINT(glDrawElementsInstanced)(mode, count, type, pTrace_indices, instancecount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexBuffer \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexBuffer GL_ENTRYPOINT(glTexBuffer)(target, internalformat, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPrimitiveRestartIndex \
   GLuint index = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPrimitiveRestartIndex GL_ENTRYPOINT(glPrimitiveRestartIndex)(index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetInteger64i_v \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLint64 * pTrace_data = reinterpret_cast<const GLint64 *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetInteger64i_v GL_ENTRYPOINT(glGetInteger64i_v)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBufferParameteri64v \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint64 * pTrace_params = reinterpret_cast<const GLint64 *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBufferParameteri64v GL_ENTRYPOINT(glGetBufferParameteri64v)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTexture \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTexture GL_ENTRYPOINT(glFramebufferTexture)(target, attachment, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribDivisor \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint divisor = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribDivisor GL_ENTRYPOINT(glVertexAttribDivisor)(index, divisor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMinSampleShading \
   GLfloat value = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMinSampleShading GL_ENTRYPOINT(glMinSampleShading)(value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquationi \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquationi GL_ENTRYPOINT(glBlendEquationi)(buf, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquationSeparatei \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum modeRGB = trace_packet.get_param_value<GLenum>(1); \
   GLenum modeAlpha = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquationSeparatei GL_ENTRYPOINT(glBlendEquationSeparatei)(buf, modeRGB, modeAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFunci \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum src = trace_packet.get_param_value<GLenum>(1); \
   GLenum dst = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFunci GL_ENTRYPOINT(glBlendFunci)(buf, src, dst)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFuncSeparatei \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum srcRGB = trace_packet.get_param_value<GLenum>(1); \
   GLenum dstRGB = trace_packet.get_param_value<GLenum>(2); \
   GLenum srcAlpha = trace_packet.get_param_value<GLenum>(3); \
   GLenum dstAlpha = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFuncSeparatei GL_ENTRYPOINT(glBlendFuncSeparatei)(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glActiveTextureARB \
   GLenum texture = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glActiveTextureARB GL_ENTRYPOINT(glActiveTextureARB)(texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClientActiveTextureARB \
   GLenum texture = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClientActiveTextureARB GL_ENTRYPOINT(glClientActiveTextureARB)(texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1dARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble s = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1dARB GL_ENTRYPOINT(glMultiTexCoord1dARB)(target, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1dvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1dvARB GL_ENTRYPOINT(glMultiTexCoord1dvARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1fARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1fARB GL_ENTRYPOINT(glMultiTexCoord1fARB)(target, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1fvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1fvARB GL_ENTRYPOINT(glMultiTexCoord1fvARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1iARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint s = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1iARB GL_ENTRYPOINT(glMultiTexCoord1iARB)(target, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1ivARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1ivARB GL_ENTRYPOINT(glMultiTexCoord1ivARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1sARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLshort s = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1sARB GL_ENTRYPOINT(glMultiTexCoord1sARB)(target, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1svARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1svARB GL_ENTRYPOINT(glMultiTexCoord1svARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2dARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble s = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble t = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2dARB GL_ENTRYPOINT(glMultiTexCoord2dARB)(target, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2dvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2dvARB GL_ENTRYPOINT(glMultiTexCoord2dvARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2fARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2fARB GL_ENTRYPOINT(glMultiTexCoord2fARB)(target, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2fvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2fvARB GL_ENTRYPOINT(glMultiTexCoord2fvARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2iARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint s = trace_packet.get_param_value<GLint>(1); \
   GLint t = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2iARB GL_ENTRYPOINT(glMultiTexCoord2iARB)(target, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2ivARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2ivARB GL_ENTRYPOINT(glMultiTexCoord2ivARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2sARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLshort s = trace_packet.get_param_value<GLshort>(1); \
   GLshort t = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2sARB GL_ENTRYPOINT(glMultiTexCoord2sARB)(target, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2svARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2svARB GL_ENTRYPOINT(glMultiTexCoord2svARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3dARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble s = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble t = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble r = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3dARB GL_ENTRYPOINT(glMultiTexCoord3dARB)(target, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3dvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3dvARB GL_ENTRYPOINT(glMultiTexCoord3dvARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3fARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3fARB GL_ENTRYPOINT(glMultiTexCoord3fARB)(target, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3fvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3fvARB GL_ENTRYPOINT(glMultiTexCoord3fvARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3iARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint s = trace_packet.get_param_value<GLint>(1); \
   GLint t = trace_packet.get_param_value<GLint>(2); \
   GLint r = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3iARB GL_ENTRYPOINT(glMultiTexCoord3iARB)(target, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3ivARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3ivARB GL_ENTRYPOINT(glMultiTexCoord3ivARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3sARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLshort s = trace_packet.get_param_value<GLshort>(1); \
   GLshort t = trace_packet.get_param_value<GLshort>(2); \
   GLshort r = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3sARB GL_ENTRYPOINT(glMultiTexCoord3sARB)(target, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3svARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3svARB GL_ENTRYPOINT(glMultiTexCoord3svARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4dARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble s = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble t = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble r = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble q = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4dARB GL_ENTRYPOINT(glMultiTexCoord4dARB)(target, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4dvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4dvARB GL_ENTRYPOINT(glMultiTexCoord4dvARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4fARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat q = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4fARB GL_ENTRYPOINT(glMultiTexCoord4fARB)(target, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4fvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4fvARB GL_ENTRYPOINT(glMultiTexCoord4fvARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4iARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint s = trace_packet.get_param_value<GLint>(1); \
   GLint t = trace_packet.get_param_value<GLint>(2); \
   GLint r = trace_packet.get_param_value<GLint>(3); \
   GLint q = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4iARB GL_ENTRYPOINT(glMultiTexCoord4iARB)(target, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4ivARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4ivARB GL_ENTRYPOINT(glMultiTexCoord4ivARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4sARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLshort s = trace_packet.get_param_value<GLshort>(1); \
   GLshort t = trace_packet.get_param_value<GLshort>(2); \
   GLshort r = trace_packet.get_param_value<GLshort>(3); \
   GLshort q = trace_packet.get_param_value<GLshort>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4sARB GL_ENTRYPOINT(glMultiTexCoord4sARB)(target, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4svARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4svARB GL_ENTRYPOINT(glMultiTexCoord4svARB)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadTransposeMatrixfARB \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadTransposeMatrixfARB GL_ENTRYPOINT(glLoadTransposeMatrixfARB)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadTransposeMatrixdARB \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadTransposeMatrixdARB GL_ENTRYPOINT(glLoadTransposeMatrixdARB)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultTransposeMatrixfARB \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultTransposeMatrixfARB GL_ENTRYPOINT(glMultTransposeMatrixfARB)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultTransposeMatrixdARB \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultTransposeMatrixdARB GL_ENTRYPOINT(glMultTransposeMatrixdARB)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSampleCoverageARB \
   GLfloat value = trace_packet.get_param_value<GLfloat>(0); \
   GLboolean invert = trace_packet.get_param_value<GLboolean>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSampleCoverageARB GL_ENTRYPOINT(glSampleCoverageARB)(value, invert)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexImage3DARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(7); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexImage3DARB GL_ENTRYPOINT(glCompressedTexImage3DARB)(target, level, internalformat, width, height, depth, border, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexImage2DARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLint border = trace_packet.get_param_value<GLint>(5); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(6); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexImage2DARB GL_ENTRYPOINT(glCompressedTexImage2DARB)(target, level, internalformat, width, height, border, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexImage1DARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLint border = trace_packet.get_param_value<GLint>(4); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(5); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexImage1DARB GL_ENTRYPOINT(glCompressedTexImage1DARB)(target, level, internalformat, width, border, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexSubImage3DARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint zoffset = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(7); \
   GLenum format = trace_packet.get_param_value<GLenum>(8); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(9); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(10));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexSubImage3DARB GL_ENTRYPOINT(glCompressedTexSubImage3DARB)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexSubImage2DARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLenum format = trace_packet.get_param_value<GLenum>(6); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(7); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexSubImage2DARB GL_ENTRYPOINT(glCompressedTexSubImage2DARB)(target, level, xoffset, yoffset, width, height, format, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTexSubImage1DARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(5); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTexSubImage1DARB GL_ENTRYPOINT(glCompressedTexSubImage1DARB)(target, level, xoffset, width, format, imageSize, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetCompressedTexImageARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   const GLvoid * pTrace_img = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetCompressedTexImageARB GL_ENTRYPOINT(glGetCompressedTexImageARB)(target, level, pReplay_img)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterfARB \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterfARB GL_ENTRYPOINT(glPointParameterfARB)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterfvARB \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterfvARB GL_ENTRYPOINT(glPointParameterfvARB)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightbvARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLbyte * pTrace_weights = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightbvARB GL_ENTRYPOINT(glWeightbvARB)(size, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightsvARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLshort * pTrace_weights = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightsvARB GL_ENTRYPOINT(glWeightsvARB)(size, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightivARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLint * pTrace_weights = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightivARB GL_ENTRYPOINT(glWeightivARB)(size, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightfvARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLfloat * pTrace_weights = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightfvARB GL_ENTRYPOINT(glWeightfvARB)(size, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightdvARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLdouble * pTrace_weights = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightdvARB GL_ENTRYPOINT(glWeightdvARB)(size, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightubvARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLubyte * pTrace_weights = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightubvARB GL_ENTRYPOINT(glWeightubvARB)(size, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightusvARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLushort * pTrace_weights = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightusvARB GL_ENTRYPOINT(glWeightusvARB)(size, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightuivARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLuint * pTrace_weights = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightuivARB GL_ENTRYPOINT(glWeightuivARB)(size, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightPointerARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightPointerARB GL_ENTRYPOINT(glWeightPointerARB)(size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexBlendARB \
   GLint count = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexBlendARB GL_ENTRYPOINT(glVertexBlendARB)(count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCurrentPaletteMatrixARB \
   GLint index = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glCurrentPaletteMatrixARB GL_ENTRYPOINT(glCurrentPaletteMatrixARB)(index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixIndexubvARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLubyte * pTrace_indices = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixIndexubvARB GL_ENTRYPOINT(glMatrixIndexubvARB)(size, pTrace_indices)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixIndexusvARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLushort * pTrace_indices = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixIndexusvARB GL_ENTRYPOINT(glMatrixIndexusvARB)(size, pTrace_indices)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixIndexuivARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   const GLuint * pTrace_indices = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixIndexuivARB GL_ENTRYPOINT(glMatrixIndexuivARB)(size, pTrace_indices)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixIndexPointerARB \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixIndexPointerARB GL_ENTRYPOINT(glMatrixIndexPointerARB)(size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2dARB \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2dARB GL_ENTRYPOINT(glWindowPos2dARB)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2dvARB \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2dvARB GL_ENTRYPOINT(glWindowPos2dvARB)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2fARB \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2fARB GL_ENTRYPOINT(glWindowPos2fARB)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2fvARB \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2fvARB GL_ENTRYPOINT(glWindowPos2fvARB)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2iARB \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2iARB GL_ENTRYPOINT(glWindowPos2iARB)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2ivARB \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2ivARB GL_ENTRYPOINT(glWindowPos2ivARB)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2sARB \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2sARB GL_ENTRYPOINT(glWindowPos2sARB)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2svARB \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2svARB GL_ENTRYPOINT(glWindowPos2svARB)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3dARB \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3dARB GL_ENTRYPOINT(glWindowPos3dARB)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3dvARB \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3dvARB GL_ENTRYPOINT(glWindowPos3dvARB)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3fARB \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3fARB GL_ENTRYPOINT(glWindowPos3fARB)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3fvARB \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3fvARB GL_ENTRYPOINT(glWindowPos3fvARB)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3iARB \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLint z = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3iARB GL_ENTRYPOINT(glWindowPos3iARB)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3ivARB \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3ivARB GL_ENTRYPOINT(glWindowPos3ivARB)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3sARB \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1); \
   GLshort z = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3sARB GL_ENTRYPOINT(glWindowPos3sARB)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3svARB \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3svARB GL_ENTRYPOINT(glWindowPos3svARB)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1dARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1dARB GL_ENTRYPOINT(glVertexAttrib1dARB)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1dvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1dvARB GL_ENTRYPOINT(glVertexAttrib1dvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1fARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1fARB GL_ENTRYPOINT(glVertexAttrib1fARB)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1fvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1fvARB GL_ENTRYPOINT(glVertexAttrib1fvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1sARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1sARB GL_ENTRYPOINT(glVertexAttrib1sARB)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1svARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1svARB GL_ENTRYPOINT(glVertexAttrib1svARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2dARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2dARB GL_ENTRYPOINT(glVertexAttrib2dARB)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2dvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2dvARB GL_ENTRYPOINT(glVertexAttrib2dvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2fARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2fARB GL_ENTRYPOINT(glVertexAttrib2fARB)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2fvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2fvARB GL_ENTRYPOINT(glVertexAttrib2fvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2sARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2sARB GL_ENTRYPOINT(glVertexAttrib2sARB)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2svARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2svARB GL_ENTRYPOINT(glVertexAttrib2svARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3dARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3dARB GL_ENTRYPOINT(glVertexAttrib3dARB)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3dvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3dvARB GL_ENTRYPOINT(glVertexAttrib3dvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3fARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3fARB GL_ENTRYPOINT(glVertexAttrib3fARB)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3fvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3fvARB GL_ENTRYPOINT(glVertexAttrib3fvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3sARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2); \
   GLshort z = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3sARB GL_ENTRYPOINT(glVertexAttrib3sARB)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3svARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3svARB GL_ENTRYPOINT(glVertexAttrib3svARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4NbvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4NbvARB GL_ENTRYPOINT(glVertexAttrib4NbvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4NivARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4NivARB GL_ENTRYPOINT(glVertexAttrib4NivARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4NsvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4NsvARB GL_ENTRYPOINT(glVertexAttrib4NsvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4NubARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLubyte x = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte y = trace_packet.get_param_value<GLubyte>(2); \
   GLubyte z = trace_packet.get_param_value<GLubyte>(3); \
   GLubyte w = trace_packet.get_param_value<GLubyte>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4NubARB GL_ENTRYPOINT(glVertexAttrib4NubARB)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4NubvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4NubvARB GL_ENTRYPOINT(glVertexAttrib4NubvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4NuivARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4NuivARB GL_ENTRYPOINT(glVertexAttrib4NuivARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4NusvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4NusvARB GL_ENTRYPOINT(glVertexAttrib4NusvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4bvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4bvARB GL_ENTRYPOINT(glVertexAttrib4bvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4dARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4dARB GL_ENTRYPOINT(glVertexAttrib4dARB)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4dvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4dvARB GL_ENTRYPOINT(glVertexAttrib4dvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4fARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4fARB GL_ENTRYPOINT(glVertexAttrib4fARB)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4fvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4fvARB GL_ENTRYPOINT(glVertexAttrib4fvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4ivARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4ivARB GL_ENTRYPOINT(glVertexAttrib4ivARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4sARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2); \
   GLshort z = trace_packet.get_param_value<GLshort>(3); \
   GLshort w = trace_packet.get_param_value<GLshort>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4sARB GL_ENTRYPOINT(glVertexAttrib4sARB)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4svARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4svARB GL_ENTRYPOINT(glVertexAttrib4svARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4ubvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4ubvARB GL_ENTRYPOINT(glVertexAttrib4ubvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4uivARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4uivARB GL_ENTRYPOINT(glVertexAttrib4uivARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4usvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4usvARB GL_ENTRYPOINT(glVertexAttrib4usvARB)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribPointerARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(3); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(4); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribPointerARB GL_ENTRYPOINT(glVertexAttribPointerARB)(index, size, type, normalized, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnableVertexAttribArrayARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEnableVertexAttribArrayARB GL_ENTRYPOINT(glEnableVertexAttribArrayARB)(index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDisableVertexAttribArrayARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDisableVertexAttribArrayARB GL_ENTRYPOINT(glDisableVertexAttribArrayARB)(index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramStringARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLsizei len = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_string = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramStringARB GL_ENTRYPOINT(glProgramStringARB)(target, format, len, pTrace_string)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindProgramARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint program = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindProgramARB GL_ENTRYPOINT(glBindProgramARB)(target, program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteProgramsARB \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_programs = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteProgramsARB GL_ENTRYPOINT(glDeleteProgramsARB)(n, pTrace_programs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenProgramsARB \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_programs = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenProgramsARB GL_ENTRYPOINT(glGenProgramsARB)(n, pReplay_programs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParameter4dARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParameter4dARB GL_ENTRYPOINT(glProgramEnvParameter4dARB)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParameter4dvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParameter4dvARB GL_ENTRYPOINT(glProgramEnvParameter4dvARB)(target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParameter4fARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParameter4fARB GL_ENTRYPOINT(glProgramEnvParameter4fARB)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParameter4fvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParameter4fvARB GL_ENTRYPOINT(glProgramEnvParameter4fvARB)(target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParameter4dARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParameter4dARB GL_ENTRYPOINT(glProgramLocalParameter4dARB)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParameter4dvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParameter4dvARB GL_ENTRYPOINT(glProgramLocalParameter4dvARB)(target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParameter4fARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParameter4fARB GL_ENTRYPOINT(glProgramLocalParameter4fARB)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParameter4fvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParameter4fvARB GL_ENTRYPOINT(glProgramLocalParameter4fvARB)(target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramEnvParameterdvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramEnvParameterdvARB GL_ENTRYPOINT(glGetProgramEnvParameterdvARB)(target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramEnvParameterfvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramEnvParameterfvARB GL_ENTRYPOINT(glGetProgramEnvParameterfvARB)(target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramLocalParameterdvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramLocalParameterdvARB GL_ENTRYPOINT(glGetProgramLocalParameterdvARB)(target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramLocalParameterfvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramLocalParameterfvARB GL_ENTRYPOINT(glGetProgramLocalParameterfvARB)(target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramivARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramivARB GL_ENTRYPOINT(glGetProgramivARB)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramStringARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_string = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramStringARB GL_ENTRYPOINT(glGetProgramStringARB)(target, pname, pReplay_string)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribdvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribdvARB GL_ENTRYPOINT(glGetVertexAttribdvARB)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribfvARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribfvARB GL_ENTRYPOINT(glGetVertexAttribfvARB)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribivARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribivARB GL_ENTRYPOINT(glGetVertexAttribivARB)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribPointervARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribPointervARB GL_ENTRYPOINT(glGetVertexAttribPointervARB)(index, pname, pReplay_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsProgramARB \
   GLuint program = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsProgramARB GL_ENTRYPOINT(glIsProgramARB)(program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBufferARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBufferARB GL_ENTRYPOINT(glBindBufferARB)(target, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteBuffersARB \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_buffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteBuffersARB GL_ENTRYPOINT(glDeleteBuffersARB)(n, pTrace_buffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenBuffersARB \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_buffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenBuffersARB GL_ENTRYPOINT(glGenBuffersARB)(n, pReplay_buffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsBufferARB \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsBufferARB GL_ENTRYPOINT(glIsBufferARB)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBufferDataARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizeiptrARB size = trace_packet.get_param_value<GLsizeiptrARB>(1); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLenum usage = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBufferDataARB GL_ENTRYPOINT(glBufferDataARB)(target, size, pTrace_data, usage)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBufferSubDataARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLintptrARB offset = trace_packet.get_param_value<GLintptrARB>(1); \
   GLsizeiptrARB size = trace_packet.get_param_value<GLsizeiptrARB>(2); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glBufferSubDataARB GL_ENTRYPOINT(glBufferSubDataARB)(target, offset, size, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBufferSubDataARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLintptrARB offset = trace_packet.get_param_value<GLintptrARB>(1); \
   GLsizeiptrARB size = trace_packet.get_param_value<GLsizeiptrARB>(2); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBufferSubDataARB GL_ENTRYPOINT(glGetBufferSubDataARB)(target, offset, size, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapBufferARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum access = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapBufferARB GL_ENTRYPOINT(glMapBufferARB)(target, access)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUnmapBufferARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glUnmapBufferARB GL_ENTRYPOINT(glUnmapBufferARB)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBufferParameterivARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBufferParameterivARB GL_ENTRYPOINT(glGetBufferParameterivARB)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBufferPointervARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_params = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBufferPointervARB GL_ENTRYPOINT(glGetBufferPointervARB)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenQueriesARB \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenQueriesARB GL_ENTRYPOINT(glGenQueriesARB)(n, pReplay_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteQueriesARB \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteQueriesARB GL_ENTRYPOINT(glDeleteQueriesARB)(n, pTrace_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsQueryARB \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsQueryARB GL_ENTRYPOINT(glIsQueryARB)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginQueryARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginQueryARB GL_ENTRYPOINT(glBeginQueryARB)(target, id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndQueryARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEndQueryARB GL_ENTRYPOINT(glEndQueryARB)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryivARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryivARB GL_ENTRYPOINT(glGetQueryivARB)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryObjectivARB \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryObjectivARB GL_ENTRYPOINT(glGetQueryObjectivARB)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryObjectuivARB \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryObjectuivARB GL_ENTRYPOINT(glGetQueryObjectuivARB)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteObjectARB \
   GLhandleARB obj = trace_packet.get_param_value<GLhandleARB>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteObjectARB GL_ENTRYPOINT(glDeleteObjectARB)(obj)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetHandleARB \
   GLenum pname = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetHandleARB GL_ENTRYPOINT(glGetHandleARB)(pname)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDetachObjectARB \
   GLhandleARB containerObj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLhandleARB attachedObj = trace_packet.get_param_value<GLhandleARB>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDetachObjectARB GL_ENTRYPOINT(glDetachObjectARB)(containerObj, attachedObj)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCreateShaderObjectARB \
   GLenum shaderType = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glCreateShaderObjectARB GL_ENTRYPOINT(glCreateShaderObjectARB)(shaderType)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glShaderSourceARB \
   GLhandleARB shaderObj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLcharARB* * pTrace_string = reinterpret_cast<const GLcharARB* *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLint * pTrace_length = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glShaderSourceARB GL_ENTRYPOINT(glShaderSourceARB)(shaderObj, count, pTrace_string, pTrace_length)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompileShaderARB \
   GLhandleARB shaderObj = trace_packet.get_param_value<GLhandleARB>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glCompileShaderARB GL_ENTRYPOINT(glCompileShaderARB)(shaderObj)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCreateProgramObjectARB  

#define VOGL_REPLAY_CALL_GL_HELPER_glCreateProgramObjectARB GL_ENTRYPOINT(glCreateProgramObjectARB)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAttachObjectARB \
   GLhandleARB containerObj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLhandleARB obj = trace_packet.get_param_value<GLhandleARB>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glAttachObjectARB GL_ENTRYPOINT(glAttachObjectARB)(containerObj, obj)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLinkProgramARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glLinkProgramARB GL_ENTRYPOINT(glLinkProgramARB)(programObj)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUseProgramObjectARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glUseProgramObjectARB GL_ENTRYPOINT(glUseProgramObjectARB)(programObj)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glValidateProgramARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glValidateProgramARB GL_ENTRYPOINT(glValidateProgramARB)(programObj)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1fARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1fARB GL_ENTRYPOINT(glUniform1fARB)(location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2fARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2fARB GL_ENTRYPOINT(glUniform2fARB)(location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3fARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3fARB GL_ENTRYPOINT(glUniform3fARB)(location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4fARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat v3 = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4fARB GL_ENTRYPOINT(glUniform4fARB)(location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1iARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint v0 = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1iARB GL_ENTRYPOINT(glUniform1iARB)(location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2iARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint v0 = trace_packet.get_param_value<GLint>(1); \
   GLint v1 = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2iARB GL_ENTRYPOINT(glUniform2iARB)(location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3iARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint v0 = trace_packet.get_param_value<GLint>(1); \
   GLint v1 = trace_packet.get_param_value<GLint>(2); \
   GLint v2 = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3iARB GL_ENTRYPOINT(glUniform3iARB)(location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4iARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint v0 = trace_packet.get_param_value<GLint>(1); \
   GLint v1 = trace_packet.get_param_value<GLint>(2); \
   GLint v2 = trace_packet.get_param_value<GLint>(3); \
   GLint v3 = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4iARB GL_ENTRYPOINT(glUniform4iARB)(location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1fvARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1fvARB GL_ENTRYPOINT(glUniform1fvARB)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2fvARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2fvARB GL_ENTRYPOINT(glUniform2fvARB)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3fvARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3fvARB GL_ENTRYPOINT(glUniform3fvARB)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4fvARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4fvARB GL_ENTRYPOINT(glUniform4fvARB)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1ivARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1ivARB GL_ENTRYPOINT(glUniform1ivARB)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2ivARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2ivARB GL_ENTRYPOINT(glUniform2ivARB)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3ivARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3ivARB GL_ENTRYPOINT(glUniform3ivARB)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4ivARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4ivARB GL_ENTRYPOINT(glUniform4ivARB)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix2fvARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix2fvARB GL_ENTRYPOINT(glUniformMatrix2fvARB)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix3fvARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix3fvARB GL_ENTRYPOINT(glUniformMatrix3fvARB)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix4fvARB \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix4fvARB GL_ENTRYPOINT(glUniformMatrix4fvARB)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetObjectParameterfvARB \
   GLhandleARB obj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetObjectParameterfvARB GL_ENTRYPOINT(glGetObjectParameterfvARB)(obj, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetObjectParameterivARB \
   GLhandleARB obj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetObjectParameterivARB GL_ENTRYPOINT(glGetObjectParameterivARB)(obj, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetInfoLogARB \
   GLhandleARB obj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLsizei maxLength = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLcharARB * pTrace_infoLog = reinterpret_cast<const GLcharARB *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetInfoLogARB GL_ENTRYPOINT(glGetInfoLogARB)(obj, maxLength, pReplay_length, pReplay_infoLog)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetAttachedObjectsARB \
   GLhandleARB containerObj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLsizei maxCount = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLhandleARB * pTrace_obj = reinterpret_cast<const GLhandleARB *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetAttachedObjectsARB GL_ENTRYPOINT(glGetAttachedObjectsARB)(containerObj, maxCount, pReplay_count, pReplay_obj)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformLocationARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0); \
   const GLcharARB * pTrace_name = reinterpret_cast<const GLcharARB *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformLocationARB GL_ENTRYPOINT(glGetUniformLocationARB)(programObj, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveUniformARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei maxLength = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLint * pTrace_size = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLenum * pTrace_type = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLcharARB * pTrace_name = reinterpret_cast<const GLcharARB *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveUniformARB GL_ENTRYPOINT(glGetActiveUniformARB)(programObj, index, maxLength, pReplay_length, pReplay_size, pReplay_type, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformfvARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformfvARB GL_ENTRYPOINT(glGetUniformfvARB)(programObj, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformivARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformivARB GL_ENTRYPOINT(glGetUniformivARB)(programObj, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetShaderSourceARB \
   GLhandleARB obj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLsizei maxLength = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLcharARB * pTrace_source = reinterpret_cast<const GLcharARB *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetShaderSourceARB GL_ENTRYPOINT(glGetShaderSourceARB)(obj, maxLength, pReplay_length, pReplay_source)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindAttribLocationARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLcharARB * pTrace_name = reinterpret_cast<const GLcharARB *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glBindAttribLocationARB GL_ENTRYPOINT(glBindAttribLocationARB)(programObj, index, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveAttribARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei maxLength = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLint * pTrace_size = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLenum * pTrace_type = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLcharARB * pTrace_name = reinterpret_cast<const GLcharARB *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveAttribARB GL_ENTRYPOINT(glGetActiveAttribARB)(programObj, index, maxLength, pReplay_length, pReplay_size, pReplay_type, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetAttribLocationARB \
   GLhandleARB programObj = trace_packet.get_param_value<GLhandleARB>(0); \
   const GLcharARB * pTrace_name = reinterpret_cast<const GLcharARB *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetAttribLocationARB GL_ENTRYPOINT(glGetAttribLocationARB)(programObj, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawBuffersARB \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLenum * pTrace_bufs = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawBuffersARB GL_ENTRYPOINT(glDrawBuffersARB)(n, pTrace_bufs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClampColorARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum clamp = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glClampColorARB GL_ENTRYPOINT(glClampColorARB)(target, clamp)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawArraysInstancedARB \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint first = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawArraysInstancedARB GL_ENTRYPOINT(glDrawArraysInstancedARB)(mode, first, count, primcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementsInstancedARB \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_indices = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementsInstancedARB GL_ENTRYPOINT(glDrawElementsInstancedARB)(mode, count, type, pTrace_indices, primcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsRenderbuffer \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsRenderbuffer GL_ENTRYPOINT(glIsRenderbuffer)(renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindRenderbuffer \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindRenderbuffer GL_ENTRYPOINT(glBindRenderbuffer)(target, renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteRenderbuffers \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_renderbuffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteRenderbuffers GL_ENTRYPOINT(glDeleteRenderbuffers)(n, pTrace_renderbuffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenRenderbuffers \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_renderbuffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenRenderbuffers GL_ENTRYPOINT(glGenRenderbuffers)(n, pReplay_renderbuffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRenderbufferStorage \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRenderbufferStorage GL_ENTRYPOINT(glRenderbufferStorage)(target, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetRenderbufferParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetRenderbufferParameteriv GL_ENTRYPOINT(glGetRenderbufferParameteriv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsFramebuffer \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsFramebuffer GL_ENTRYPOINT(glIsFramebuffer)(framebuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindFramebuffer \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindFramebuffer GL_ENTRYPOINT(glBindFramebuffer)(target, framebuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteFramebuffers \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_framebuffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteFramebuffers GL_ENTRYPOINT(glDeleteFramebuffers)(n, pTrace_framebuffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenFramebuffers \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_framebuffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenFramebuffers GL_ENTRYPOINT(glGenFramebuffers)(n, pReplay_framebuffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCheckFramebufferStatus \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glCheckFramebufferStatus GL_ENTRYPOINT(glCheckFramebufferStatus)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTexture1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum textarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint texture = trace_packet.get_param_value<GLuint>(3); \
   GLint level = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTexture1D GL_ENTRYPOINT(glFramebufferTexture1D)(target, attachment, textarget, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTexture2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum textarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint texture = trace_packet.get_param_value<GLuint>(3); \
   GLint level = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTexture2D GL_ENTRYPOINT(glFramebufferTexture2D)(target, attachment, textarget, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTexture3D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum textarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint texture = trace_packet.get_param_value<GLuint>(3); \
   GLint level = trace_packet.get_param_value<GLint>(4); \
   GLint zoffset = trace_packet.get_param_value<GLint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTexture3D GL_ENTRYPOINT(glFramebufferTexture3D)(target, attachment, textarget, texture, level, zoffset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferRenderbuffer \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum renderbuffertarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferRenderbuffer GL_ENTRYPOINT(glFramebufferRenderbuffer)(target, attachment, renderbuffertarget, renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFramebufferAttachmentParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFramebufferAttachmentParameteriv GL_ENTRYPOINT(glGetFramebufferAttachmentParameteriv)(target, attachment, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenerateMipmap \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenerateMipmap GL_ENTRYPOINT(glGenerateMipmap)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlitFramebuffer \
   GLint srcX0 = trace_packet.get_param_value<GLint>(0); \
   GLint srcY0 = trace_packet.get_param_value<GLint>(1); \
   GLint srcX1 = trace_packet.get_param_value<GLint>(2); \
   GLint srcY1 = trace_packet.get_param_value<GLint>(3); \
   GLint dstX0 = trace_packet.get_param_value<GLint>(4); \
   GLint dstY0 = trace_packet.get_param_value<GLint>(5); \
   GLint dstX1 = trace_packet.get_param_value<GLint>(6); \
   GLint dstY1 = trace_packet.get_param_value<GLint>(7); \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(8); \
   GLenum filter = trace_packet.get_param_value<GLenum>(9);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlitFramebuffer GL_ENTRYPOINT(glBlitFramebuffer)(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRenderbufferStorageMultisample \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glRenderbufferStorageMultisample GL_ENTRYPOINT(glRenderbufferStorageMultisample)(target, samples, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTextureLayer \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3); \
   GLint layer = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTextureLayer GL_ENTRYPOINT(glFramebufferTextureLayer)(target, attachment, texture, level, layer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramParameteriARB \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint value = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramParameteriARB GL_ENTRYPOINT(glProgramParameteriARB)(program, pname, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTextureARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTextureARB GL_ENTRYPOINT(glFramebufferTextureARB)(target, attachment, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTextureLayerARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3); \
   GLint layer = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTextureLayerARB GL_ENTRYPOINT(glFramebufferTextureLayerARB)(target, attachment, texture, level, layer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTextureFaceARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3); \
   GLenum face = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTextureFaceARB GL_ENTRYPOINT(glFramebufferTextureFaceARB)(target, attachment, texture, level, face)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribDivisorARB \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint divisor = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribDivisorARB GL_ENTRYPOINT(glVertexAttribDivisorARB)(index, divisor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapBufferRange \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr length = trace_packet.get_param_value<GLsizeiptr>(2); \
   GLbitfield access = trace_packet.get_param_value<GLbitfield>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapBufferRange GL_ENTRYPOINT(glMapBufferRange)(target, offset, length, access)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFlushMappedBufferRange \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr length = trace_packet.get_param_value<GLsizeiptr>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glFlushMappedBufferRange GL_ENTRYPOINT(glFlushMappedBufferRange)(target, offset, length)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexBufferARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexBufferARB GL_ENTRYPOINT(glTexBufferARB)(target, internalformat, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindVertexArray \
   GLuint array = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindVertexArray GL_ENTRYPOINT(glBindVertexArray)(array)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteVertexArrays \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_arrays = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteVertexArrays GL_ENTRYPOINT(glDeleteVertexArrays)(n, pTrace_arrays)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenVertexArrays \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_arrays = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenVertexArrays GL_ENTRYPOINT(glGenVertexArrays)(n, pReplay_arrays)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsVertexArray \
   GLuint array = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsVertexArray GL_ENTRYPOINT(glIsVertexArray)(array)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformIndices \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLsizei uniformCount = trace_packet.get_param_value<GLsizei>(1); \
   const GLchar* const * pTrace_uniformNames = reinterpret_cast<const GLchar* const *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLuint * pTrace_uniformIndices = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformIndices GL_ENTRYPOINT(glGetUniformIndices)(program, uniformCount, pReplay_uniformNames, pReplay_uniformIndices)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveUniformsiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLsizei uniformCount = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_uniformIndices = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLenum pname = trace_packet.get_param_value<GLenum>(3); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveUniformsiv GL_ENTRYPOINT(glGetActiveUniformsiv)(program, uniformCount, pTrace_uniformIndices, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveUniformName \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint uniformIndex = trace_packet.get_param_value<GLuint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLchar * pTrace_uniformName = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveUniformName GL_ENTRYPOINT(glGetActiveUniformName)(program, uniformIndex, bufSize, pReplay_length, pReplay_uniformName)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformBlockIndex \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   const GLchar * pTrace_uniformBlockName = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformBlockIndex GL_ENTRYPOINT(glGetUniformBlockIndex)(program, pTrace_uniformBlockName)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveUniformBlockiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint uniformBlockIndex = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveUniformBlockiv GL_ENTRYPOINT(glGetActiveUniformBlockiv)(program, uniformBlockIndex, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveUniformBlockName \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint uniformBlockIndex = trace_packet.get_param_value<GLuint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLchar * pTrace_uniformBlockName = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveUniformBlockName GL_ENTRYPOINT(glGetActiveUniformBlockName)(program, uniformBlockIndex, bufSize, pReplay_length, pReplay_uniformBlockName)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformBlockBinding \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint uniformBlockIndex = trace_packet.get_param_value<GLuint>(1); \
   GLuint uniformBlockBinding = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformBlockBinding GL_ENTRYPOINT(glUniformBlockBinding)(program, uniformBlockIndex, uniformBlockBinding)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyBufferSubData \
   GLenum readTarget = trace_packet.get_param_value<GLenum>(0); \
   GLenum writeTarget = trace_packet.get_param_value<GLenum>(1); \
   GLintptr readOffset = trace_packet.get_param_value<GLintptr>(2); \
   GLintptr writeOffset = trace_packet.get_param_value<GLintptr>(3); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyBufferSubData GL_ENTRYPOINT(glCopyBufferSubData)(readTarget, writeTarget, readOffset, writeOffset, size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementsBaseVertex \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_indices = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLint basevertex = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementsBaseVertex GL_ENTRYPOINT(glDrawElementsBaseVertex)(mode, count, type, pTrace_indices, basevertex)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawRangeElementsBaseVertex \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint start = trace_packet.get_param_value<GLuint>(1); \
   GLuint end = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_indices = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5)); \
   GLint basevertex = trace_packet.get_param_value<GLint>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawRangeElementsBaseVertex GL_ENTRYPOINT(glDrawRangeElementsBaseVertex)(mode, start, end, count, type, pTrace_indices, basevertex)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementsInstancedBaseVertex \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_indices = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei instancecount = trace_packet.get_param_value<GLsizei>(4); \
   GLint basevertex = trace_packet.get_param_value<GLint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementsInstancedBaseVertex GL_ENTRYPOINT(glDrawElementsInstancedBaseVertex)(mode, count, type, pTrace_indices, instancecount, basevertex)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawElementsBaseVertex \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid* const * pTrace_indices = reinterpret_cast<const GLvoid* const *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei drawcount = trace_packet.get_param_value<GLsizei>(4); \
   const GLint * pTrace_basevertex = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawElementsBaseVertex GL_ENTRYPOINT(glMultiDrawElementsBaseVertex)(mode, pTrace_count, type, pReplay_indices, drawcount, pTrace_basevertex)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProvokingVertex \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glProvokingVertex GL_ENTRYPOINT(glProvokingVertex)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFenceSync \
   GLenum condition = trace_packet.get_param_value<GLenum>(0); \
   GLbitfield flags = trace_packet.get_param_value<GLbitfield>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFenceSync GL_ENTRYPOINT(glFenceSync)(condition, flags)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsSync \
   GLsync sync = trace_packet.get_param_value<GLsync>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsSync GL_ENTRYPOINT(glIsSync)(sync)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteSync \
   GLsync sync = trace_packet.get_param_value<GLsync>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteSync GL_ENTRYPOINT(glDeleteSync)(sync)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClientWaitSync \
   GLsync sync = trace_packet.get_param_value<GLsync>(0); \
   GLbitfield flags = trace_packet.get_param_value<GLbitfield>(1); \
   GLuint64 timeout = trace_packet.get_param_value<GLuint64>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glClientWaitSync GL_ENTRYPOINT(glClientWaitSync)(sync, flags, timeout)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWaitSync \
   GLsync sync = trace_packet.get_param_value<GLsync>(0); \
   GLbitfield flags = trace_packet.get_param_value<GLbitfield>(1); \
   GLuint64 timeout = trace_packet.get_param_value<GLuint64>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWaitSync GL_ENTRYPOINT(glWaitSync)(sync, flags, timeout)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetInteger64v \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint64 * pTrace_params = reinterpret_cast<const GLint64 *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetInteger64v GL_ENTRYPOINT(glGetInteger64v)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSynciv \
   GLsync sync = trace_packet.get_param_value<GLsync>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLint * pTrace_values = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSynciv GL_ENTRYPOINT(glGetSynciv)(sync, pname, bufSize, pReplay_length, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexImage2DMultisample \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(1); \
   GLint internalformat = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLboolean fixedsamplelocations = trace_packet.get_param_value<GLboolean>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexImage2DMultisample GL_ENTRYPOINT(glTexImage2DMultisample)(target, samples, internalformat, width, height, fixedsamplelocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexImage3DMultisample \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(1); \
   GLint internalformat = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(5); \
   GLboolean fixedsamplelocations = trace_packet.get_param_value<GLboolean>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexImage3DMultisample GL_ENTRYPOINT(glTexImage3DMultisample)(target, samples, internalformat, width, height, depth, fixedsamplelocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultisamplefv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_val = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultisamplefv GL_ENTRYPOINT(glGetMultisamplefv)(pname, index, pReplay_val)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSampleMaski \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSampleMaski GL_ENTRYPOINT(glSampleMaski)(index, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquationiARB \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquationiARB GL_ENTRYPOINT(glBlendEquationiARB)(buf, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquationSeparateiARB \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum modeRGB = trace_packet.get_param_value<GLenum>(1); \
   GLenum modeAlpha = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquationSeparateiARB GL_ENTRYPOINT(glBlendEquationSeparateiARB)(buf, modeRGB, modeAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFunciARB \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum src = trace_packet.get_param_value<GLenum>(1); \
   GLenum dst = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFunciARB GL_ENTRYPOINT(glBlendFunciARB)(buf, src, dst)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFuncSeparateiARB \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum srcRGB = trace_packet.get_param_value<GLenum>(1); \
   GLenum dstRGB = trace_packet.get_param_value<GLenum>(2); \
   GLenum srcAlpha = trace_packet.get_param_value<GLenum>(3); \
   GLenum dstAlpha = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFuncSeparateiARB GL_ENTRYPOINT(glBlendFuncSeparateiARB)(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMinSampleShadingARB \
   GLfloat value = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMinSampleShadingARB GL_ENTRYPOINT(glMinSampleShadingARB)(value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedStringARB \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLint namelen = trace_packet.get_param_value<GLint>(1); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLint stringlen = trace_packet.get_param_value<GLint>(3); \
   const GLchar * pTrace_string = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedStringARB GL_ENTRYPOINT(glNamedStringARB)(type, namelen, pTrace_name, stringlen, pTrace_string)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteNamedStringARB \
   GLint namelen = trace_packet.get_param_value<GLint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteNamedStringARB GL_ENTRYPOINT(glDeleteNamedStringARB)(namelen, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompileShaderIncludeARB \
   GLuint shader = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLchar* * pTrace_path = reinterpret_cast<const GLchar* *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLint * pTrace_length = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompileShaderIncludeARB GL_ENTRYPOINT(glCompileShaderIncludeARB)(shader, count, pTrace_path, pTrace_length)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsNamedStringARB \
   GLint namelen = trace_packet.get_param_value<GLint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glIsNamedStringARB GL_ENTRYPOINT(glIsNamedStringARB)(namelen, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedStringARB \
   GLint namelen = trace_packet.get_param_value<GLint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_stringlen = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLchar * pTrace_string = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedStringARB GL_ENTRYPOINT(glGetNamedStringARB)(namelen, pTrace_name, bufSize, pReplay_stringlen, pReplay_string)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedStringivARB \
   GLint namelen = trace_packet.get_param_value<GLint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedStringivARB GL_ENTRYPOINT(glGetNamedStringivARB)(namelen, pTrace_name, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindFragDataLocationIndexed \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint colorNumber = trace_packet.get_param_value<GLuint>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glBindFragDataLocationIndexed GL_ENTRYPOINT(glBindFragDataLocationIndexed)(program, colorNumber, index, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFragDataIndex \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFragDataIndex GL_ENTRYPOINT(glGetFragDataIndex)(program, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenSamplers \
   GLsizei count = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_samplers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenSamplers GL_ENTRYPOINT(glGenSamplers)(count, pReplay_samplers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteSamplers \
   GLsizei count = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_samplers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteSamplers GL_ENTRYPOINT(glDeleteSamplers)(count, pTrace_samplers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsSampler \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsSampler GL_ENTRYPOINT(glIsSampler)(sampler)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindSampler \
   GLuint unit = trace_packet.get_param_value<GLuint>(0); \
   GLuint sampler = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindSampler GL_ENTRYPOINT(glBindSampler)(unit, sampler)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSamplerParameteri \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSamplerParameteri GL_ENTRYPOINT(glSamplerParameteri)(sampler, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSamplerParameteriv \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_param = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glSamplerParameteriv GL_ENTRYPOINT(glSamplerParameteriv)(sampler, pname, pTrace_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSamplerParameterf \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSamplerParameterf GL_ENTRYPOINT(glSamplerParameterf)(sampler, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSamplerParameterfv \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_param = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glSamplerParameterfv GL_ENTRYPOINT(glSamplerParameterfv)(sampler, pname, pTrace_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSamplerParameterIiv \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_param = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glSamplerParameterIiv GL_ENTRYPOINT(glSamplerParameterIiv)(sampler, pname, pTrace_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSamplerParameterIuiv \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_param = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glSamplerParameterIuiv GL_ENTRYPOINT(glSamplerParameterIuiv)(sampler, pname, pTrace_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSamplerParameteriv \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSamplerParameteriv GL_ENTRYPOINT(glGetSamplerParameteriv)(sampler, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSamplerParameterIiv \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSamplerParameterIiv GL_ENTRYPOINT(glGetSamplerParameterIiv)(sampler, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSamplerParameterfv \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSamplerParameterfv GL_ENTRYPOINT(glGetSamplerParameterfv)(sampler, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSamplerParameterIuiv \
   GLuint sampler = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSamplerParameterIuiv GL_ENTRYPOINT(glGetSamplerParameterIuiv)(sampler, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glQueryCounter \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glQueryCounter GL_ENTRYPOINT(glQueryCounter)(id, target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryObjecti64v \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint64 * pTrace_params = reinterpret_cast<const GLint64 *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryObjecti64v GL_ENTRYPOINT(glGetQueryObjecti64v)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryObjectui64v \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint64 * pTrace_params = reinterpret_cast<const GLuint64 *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryObjectui64v GL_ENTRYPOINT(glGetQueryObjectui64v)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexP2ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint value = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexP2ui GL_ENTRYPOINT(glVertexP2ui)(type, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexP2uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexP2uiv GL_ENTRYPOINT(glVertexP2uiv)(type, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexP3ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint value = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexP3ui GL_ENTRYPOINT(glVertexP3ui)(type, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexP3uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexP3uiv GL_ENTRYPOINT(glVertexP3uiv)(type, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexP4ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint value = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexP4ui GL_ENTRYPOINT(glVertexP4ui)(type, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexP4uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexP4uiv GL_ENTRYPOINT(glVertexP4uiv)(type, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordP1ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint coords = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordP1ui GL_ENTRYPOINT(glTexCoordP1ui)(type, coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordP1uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_coords = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordP1uiv GL_ENTRYPOINT(glTexCoordP1uiv)(type, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordP2ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint coords = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordP2ui GL_ENTRYPOINT(glTexCoordP2ui)(type, coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordP2uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_coords = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordP2uiv GL_ENTRYPOINT(glTexCoordP2uiv)(type, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordP3ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint coords = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordP3ui GL_ENTRYPOINT(glTexCoordP3ui)(type, coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordP3uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_coords = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordP3uiv GL_ENTRYPOINT(glTexCoordP3uiv)(type, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordP4ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint coords = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordP4ui GL_ENTRYPOINT(glTexCoordP4ui)(type, coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordP4uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_coords = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordP4uiv GL_ENTRYPOINT(glTexCoordP4uiv)(type, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoordP1ui \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLuint coords = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoordP1ui GL_ENTRYPOINT(glMultiTexCoordP1ui)(texture, type, coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoordP1uiv \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_coords = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoordP1uiv GL_ENTRYPOINT(glMultiTexCoordP1uiv)(texture, type, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoordP2ui \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLuint coords = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoordP2ui GL_ENTRYPOINT(glMultiTexCoordP2ui)(texture, type, coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoordP2uiv \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_coords = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoordP2uiv GL_ENTRYPOINT(glMultiTexCoordP2uiv)(texture, type, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoordP3ui \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLuint coords = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoordP3ui GL_ENTRYPOINT(glMultiTexCoordP3ui)(texture, type, coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoordP3uiv \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_coords = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoordP3uiv GL_ENTRYPOINT(glMultiTexCoordP3uiv)(texture, type, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoordP4ui \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLuint coords = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoordP4ui GL_ENTRYPOINT(glMultiTexCoordP4ui)(texture, type, coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoordP4uiv \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_coords = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoordP4uiv GL_ENTRYPOINT(glMultiTexCoordP4uiv)(texture, type, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalP3ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint coords = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalP3ui GL_ENTRYPOINT(glNormalP3ui)(type, coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalP3uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_coords = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalP3uiv GL_ENTRYPOINT(glNormalP3uiv)(type, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorP3ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint color = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorP3ui GL_ENTRYPOINT(glColorP3ui)(type, color)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorP3uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_color = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorP3uiv GL_ENTRYPOINT(glColorP3uiv)(type, pTrace_color)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorP4ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint color = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorP4ui GL_ENTRYPOINT(glColorP4ui)(type, color)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorP4uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_color = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorP4uiv GL_ENTRYPOINT(glColorP4uiv)(type, pTrace_color)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColorP3ui \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint color = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColorP3ui GL_ENTRYPOINT(glSecondaryColorP3ui)(type, color)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColorP3uiv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLuint * pTrace_color = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColorP3uiv GL_ENTRYPOINT(glSecondaryColorP3uiv)(type, pTrace_color)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribP1ui \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(2); \
   GLuint value = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribP1ui GL_ENTRYPOINT(glVertexAttribP1ui)(index, type, normalized, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribP1uiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribP1uiv GL_ENTRYPOINT(glVertexAttribP1uiv)(index, type, normalized, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribP2ui \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(2); \
   GLuint value = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribP2ui GL_ENTRYPOINT(glVertexAttribP2ui)(index, type, normalized, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribP2uiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribP2uiv GL_ENTRYPOINT(glVertexAttribP2uiv)(index, type, normalized, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribP3ui \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(2); \
   GLuint value = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribP3ui GL_ENTRYPOINT(glVertexAttribP3ui)(index, type, normalized, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribP3uiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribP3uiv GL_ENTRYPOINT(glVertexAttribP3uiv)(index, type, normalized, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribP4ui \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(2); \
   GLuint value = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribP4ui GL_ENTRYPOINT(glVertexAttribP4ui)(index, type, normalized, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribP4uiv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribP4uiv GL_ENTRYPOINT(glVertexAttribP4uiv)(index, type, normalized, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawArraysIndirect \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLvoid * pTrace_indirect = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawArraysIndirect GL_ENTRYPOINT(glDrawArraysIndirect)(mode, pTrace_indirect)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementsIndirect \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_indirect = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementsIndirect GL_ENTRYPOINT(glDrawElementsIndirect)(mode, type, pTrace_indirect)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1d \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1d GL_ENTRYPOINT(glUniform1d)(location, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2d \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2d GL_ENTRYPOINT(glUniform2d)(location, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3d \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3d GL_ENTRYPOINT(glUniform3d)(location, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4d \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4d GL_ENTRYPOINT(glUniform4d)(location, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1dv GL_ENTRYPOINT(glUniform1dv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2dv GL_ENTRYPOINT(glUniform2dv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3dv GL_ENTRYPOINT(glUniform3dv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4dv GL_ENTRYPOINT(glUniform4dv)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix2dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix2dv GL_ENTRYPOINT(glUniformMatrix2dv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix3dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix3dv GL_ENTRYPOINT(glUniformMatrix3dv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix4dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix4dv GL_ENTRYPOINT(glUniformMatrix4dv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix2x3dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix2x3dv GL_ENTRYPOINT(glUniformMatrix2x3dv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix2x4dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix2x4dv GL_ENTRYPOINT(glUniformMatrix2x4dv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix3x2dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix3x2dv GL_ENTRYPOINT(glUniformMatrix3x2dv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix3x4dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix3x4dv GL_ENTRYPOINT(glUniformMatrix3x4dv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix4x2dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix4x2dv GL_ENTRYPOINT(glUniformMatrix4x2dv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformMatrix4x3dv \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformMatrix4x3dv GL_ENTRYPOINT(glUniformMatrix4x3dv)(location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformdv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformdv GL_ENTRYPOINT(glGetUniformdv)(program, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSubroutineUniformLocation \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum shadertype = trace_packet.get_param_value<GLenum>(1); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSubroutineUniformLocation GL_ENTRYPOINT(glGetSubroutineUniformLocation)(program, shadertype, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSubroutineIndex \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum shadertype = trace_packet.get_param_value<GLenum>(1); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSubroutineIndex GL_ENTRYPOINT(glGetSubroutineIndex)(program, shadertype, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveSubroutineUniformiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum shadertype = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLenum pname = trace_packet.get_param_value<GLenum>(3); \
   const GLint * pTrace_values = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveSubroutineUniformiv GL_ENTRYPOINT(glGetActiveSubroutineUniformiv)(program, shadertype, index, pname, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveSubroutineUniformName \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum shadertype = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLsizei bufsize = trace_packet.get_param_value<GLsizei>(3); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveSubroutineUniformName GL_ENTRYPOINT(glGetActiveSubroutineUniformName)(program, shadertype, index, bufsize, pReplay_length, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveSubroutineName \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum shadertype = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLsizei bufsize = trace_packet.get_param_value<GLsizei>(3); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveSubroutineName GL_ENTRYPOINT(glGetActiveSubroutineName)(program, shadertype, index, bufsize, pReplay_length, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformSubroutinesuiv \
   GLenum shadertype = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_indices = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformSubroutinesuiv GL_ENTRYPOINT(glUniformSubroutinesuiv)(shadertype, count, pTrace_indices)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformSubroutineuiv \
   GLenum shadertype = trace_packet.get_param_value<GLenum>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformSubroutineuiv GL_ENTRYPOINT(glGetUniformSubroutineuiv)(shadertype, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramStageiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum shadertype = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_values = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramStageiv GL_ENTRYPOINT(glGetProgramStageiv)(program, shadertype, pname, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPatchParameteri \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint value = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPatchParameteri GL_ENTRYPOINT(glPatchParameteri)(pname, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPatchParameterfv \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_values = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPatchParameterfv GL_ENTRYPOINT(glPatchParameterfv)(pname, pTrace_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindTransformFeedback \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindTransformFeedback GL_ENTRYPOINT(glBindTransformFeedback)(target, id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteTransformFeedbacks \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteTransformFeedbacks GL_ENTRYPOINT(glDeleteTransformFeedbacks)(n, pTrace_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenTransformFeedbacks \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenTransformFeedbacks GL_ENTRYPOINT(glGenTransformFeedbacks)(n, pReplay_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsTransformFeedback \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsTransformFeedback GL_ENTRYPOINT(glIsTransformFeedback)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPauseTransformFeedback  

#define VOGL_REPLAY_CALL_GL_HELPER_glPauseTransformFeedback GL_ENTRYPOINT(glPauseTransformFeedback)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glResumeTransformFeedback  

#define VOGL_REPLAY_CALL_GL_HELPER_glResumeTransformFeedback GL_ENTRYPOINT(glResumeTransformFeedback)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawTransformFeedback \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawTransformFeedback GL_ENTRYPOINT(glDrawTransformFeedback)(mode, id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawTransformFeedbackStream \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1); \
   GLuint stream = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawTransformFeedbackStream GL_ENTRYPOINT(glDrawTransformFeedbackStream)(mode, id, stream)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginQueryIndexed \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint id = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginQueryIndexed GL_ENTRYPOINT(glBeginQueryIndexed)(target, index, id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndQueryIndexed \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEndQueryIndexed GL_ENTRYPOINT(glEndQueryIndexed)(target, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryIndexediv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryIndexediv GL_ENTRYPOINT(glGetQueryIndexediv)(target, index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReleaseShaderCompiler  

#define VOGL_REPLAY_CALL_GL_HELPER_glReleaseShaderCompiler GL_ENTRYPOINT(glReleaseShaderCompiler)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glShaderBinary \
   GLsizei count = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_shaders = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLenum binaryformat = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_binary = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glShaderBinary GL_ENTRYPOINT(glShaderBinary)(count, pTrace_shaders, binaryformat, pTrace_binary, length)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetShaderPrecisionFormat \
   GLenum shadertype = trace_packet.get_param_value<GLenum>(0); \
   GLenum precisiontype = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_range = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLint * pTrace_precision = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetShaderPrecisionFormat GL_ENTRYPOINT(glGetShaderPrecisionFormat)(shadertype, precisiontype, pReplay_range, pReplay_precision)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthRangef \
   GLfloat n = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat f = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthRangef GL_ENTRYPOINT(glDepthRangef)(n, f)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearDepthf \
   GLfloat d = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearDepthf GL_ENTRYPOINT(glClearDepthf)(d)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramBinary \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLenum * pTrace_binaryFormat = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLvoid * pTrace_binary = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramBinary GL_ENTRYPOINT(glGetProgramBinary)(program, bufSize, pReplay_length, pReplay_binaryFormat, pReplay_binary)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramBinary \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum binaryFormat = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_binary = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramBinary GL_ENTRYPOINT(glProgramBinary)(program, binaryFormat, pTrace_binary, length)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramParameteri \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint value = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramParameteri GL_ENTRYPOINT(glProgramParameteri)(program, pname, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUseProgramStages \
   GLuint pipeline = trace_packet.get_param_value<GLuint>(0); \
   GLbitfield stages = trace_packet.get_param_value<GLbitfield>(1); \
   GLuint program = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUseProgramStages GL_ENTRYPOINT(glUseProgramStages)(pipeline, stages, program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glActiveShaderProgram \
   GLuint pipeline = trace_packet.get_param_value<GLuint>(0); \
   GLuint program = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glActiveShaderProgram GL_ENTRYPOINT(glActiveShaderProgram)(pipeline, program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCreateShaderProgramv \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLchar* const * pTrace_strings = reinterpret_cast<const GLchar* const *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glCreateShaderProgramv GL_ENTRYPOINT(glCreateShaderProgramv)(type, count, pReplay_strings)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindProgramPipeline \
   GLuint pipeline = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindProgramPipeline GL_ENTRYPOINT(glBindProgramPipeline)(pipeline)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteProgramPipelines \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_pipelines = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteProgramPipelines GL_ENTRYPOINT(glDeleteProgramPipelines)(n, pTrace_pipelines)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenProgramPipelines \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_pipelines = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenProgramPipelines GL_ENTRYPOINT(glGenProgramPipelines)(n, pReplay_pipelines)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsProgramPipeline \
   GLuint pipeline = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsProgramPipeline GL_ENTRYPOINT(glIsProgramPipeline)(pipeline)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramPipelineiv \
   GLuint pipeline = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramPipelineiv GL_ENTRYPOINT(glGetProgramPipelineiv)(pipeline, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1i \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint v0 = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1i GL_ENTRYPOINT(glProgramUniform1i)(program, location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1iv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1iv GL_ENTRYPOINT(glProgramUniform1iv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1f \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1f GL_ENTRYPOINT(glProgramUniform1f)(program, location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1fv GL_ENTRYPOINT(glProgramUniform1fv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1d \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLdouble v0 = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1d GL_ENTRYPOINT(glProgramUniform1d)(program, location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1dv GL_ENTRYPOINT(glProgramUniform1dv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1ui \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1ui GL_ENTRYPOINT(glProgramUniform1ui)(program, location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1uiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1uiv GL_ENTRYPOINT(glProgramUniform1uiv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2i \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint v0 = trace_packet.get_param_value<GLint>(2); \
   GLint v1 = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2i GL_ENTRYPOINT(glProgramUniform2i)(program, location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2iv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2iv GL_ENTRYPOINT(glProgramUniform2iv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2f \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2f GL_ENTRYPOINT(glProgramUniform2f)(program, location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2fv GL_ENTRYPOINT(glProgramUniform2fv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2d \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLdouble v0 = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble v1 = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2d GL_ENTRYPOINT(glProgramUniform2d)(program, location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2dv GL_ENTRYPOINT(glProgramUniform2dv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2ui \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2ui GL_ENTRYPOINT(glProgramUniform2ui)(program, location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2uiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2uiv GL_ENTRYPOINT(glProgramUniform2uiv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3i \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint v0 = trace_packet.get_param_value<GLint>(2); \
   GLint v1 = trace_packet.get_param_value<GLint>(3); \
   GLint v2 = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3i GL_ENTRYPOINT(glProgramUniform3i)(program, location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3iv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3iv GL_ENTRYPOINT(glProgramUniform3iv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3f \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3f GL_ENTRYPOINT(glProgramUniform3f)(program, location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3fv GL_ENTRYPOINT(glProgramUniform3fv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3d \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLdouble v0 = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble v1 = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble v2 = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3d GL_ENTRYPOINT(glProgramUniform3d)(program, location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3dv GL_ENTRYPOINT(glProgramUniform3dv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3ui \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(3); \
   GLuint v2 = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3ui GL_ENTRYPOINT(glProgramUniform3ui)(program, location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3uiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3uiv GL_ENTRYPOINT(glProgramUniform3uiv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4i \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint v0 = trace_packet.get_param_value<GLint>(2); \
   GLint v1 = trace_packet.get_param_value<GLint>(3); \
   GLint v2 = trace_packet.get_param_value<GLint>(4); \
   GLint v3 = trace_packet.get_param_value<GLint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4i GL_ENTRYPOINT(glProgramUniform4i)(program, location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4iv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4iv GL_ENTRYPOINT(glProgramUniform4iv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4f \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat v3 = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4f GL_ENTRYPOINT(glProgramUniform4f)(program, location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4fv GL_ENTRYPOINT(glProgramUniform4fv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4d \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLdouble v0 = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble v1 = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble v2 = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble v3 = trace_packet.get_param_value<GLdouble>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4d GL_ENTRYPOINT(glProgramUniform4d)(program, location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4dv GL_ENTRYPOINT(glProgramUniform4dv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4ui \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(3); \
   GLuint v2 = trace_packet.get_param_value<GLuint>(4); \
   GLuint v3 = trace_packet.get_param_value<GLuint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4ui GL_ENTRYPOINT(glProgramUniform4ui)(program, location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4uiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4uiv GL_ENTRYPOINT(glProgramUniform4uiv)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2fv GL_ENTRYPOINT(glProgramUniformMatrix2fv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3fv GL_ENTRYPOINT(glProgramUniformMatrix3fv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4fv GL_ENTRYPOINT(glProgramUniformMatrix4fv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2dv GL_ENTRYPOINT(glProgramUniformMatrix2dv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3dv GL_ENTRYPOINT(glProgramUniformMatrix3dv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4dv GL_ENTRYPOINT(glProgramUniformMatrix4dv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2x3fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2x3fv GL_ENTRYPOINT(glProgramUniformMatrix2x3fv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3x2fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3x2fv GL_ENTRYPOINT(glProgramUniformMatrix3x2fv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2x4fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2x4fv GL_ENTRYPOINT(glProgramUniformMatrix2x4fv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4x2fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4x2fv GL_ENTRYPOINT(glProgramUniformMatrix4x2fv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3x4fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3x4fv GL_ENTRYPOINT(glProgramUniformMatrix3x4fv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4x3fv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4x3fv GL_ENTRYPOINT(glProgramUniformMatrix4x3fv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2x3dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2x3dv GL_ENTRYPOINT(glProgramUniformMatrix2x3dv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3x2dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3x2dv GL_ENTRYPOINT(glProgramUniformMatrix3x2dv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2x4dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2x4dv GL_ENTRYPOINT(glProgramUniformMatrix2x4dv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4x2dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4x2dv GL_ENTRYPOINT(glProgramUniformMatrix4x2dv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3x4dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3x4dv GL_ENTRYPOINT(glProgramUniformMatrix3x4dv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4x3dv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4x3dv GL_ENTRYPOINT(glProgramUniformMatrix4x3dv)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glValidateProgramPipeline \
   GLuint pipeline = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glValidateProgramPipeline GL_ENTRYPOINT(glValidateProgramPipeline)(pipeline)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramPipelineInfoLog \
   GLuint pipeline = trace_packet.get_param_value<GLuint>(0); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLchar * pTrace_infoLog = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramPipelineInfoLog GL_ENTRYPOINT(glGetProgramPipelineInfoLog)(pipeline, bufSize, pReplay_length, pReplay_infoLog)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL1d \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL1d GL_ENTRYPOINT(glVertexAttribL1d)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL2d \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL2d GL_ENTRYPOINT(glVertexAttribL2d)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL3d \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL3d GL_ENTRYPOINT(glVertexAttribL3d)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL4d \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL4d GL_ENTRYPOINT(glVertexAttribL4d)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL1dv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL1dv GL_ENTRYPOINT(glVertexAttribL1dv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL2dv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL2dv GL_ENTRYPOINT(glVertexAttribL2dv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL3dv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL3dv GL_ENTRYPOINT(glVertexAttribL3dv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL4dv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL4dv GL_ENTRYPOINT(glVertexAttribL4dv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribLPointer \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribLPointer GL_ENTRYPOINT(glVertexAttribLPointer)(index, size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribLdv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribLdv GL_ENTRYPOINT(glGetVertexAttribLdv)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glViewportArrayv \
   GLuint first = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glViewportArrayv GL_ENTRYPOINT(glViewportArrayv)(first, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glViewportIndexedf \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat h = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glViewportIndexedf GL_ENTRYPOINT(glViewportIndexedf)(index, x, y, w, h)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glViewportIndexedfv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glViewportIndexedfv GL_ENTRYPOINT(glViewportIndexedfv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glScissorArrayv \
   GLuint first = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glScissorArrayv GL_ENTRYPOINT(glScissorArrayv)(first, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glScissorIndexed \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint left = trace_packet.get_param_value<GLint>(1); \
   GLint bottom = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glScissorIndexed GL_ENTRYPOINT(glScissorIndexed)(index, left, bottom, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glScissorIndexedv \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glScissorIndexedv GL_ENTRYPOINT(glScissorIndexedv)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthRangeArrayv \
   GLuint first = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthRangeArrayv GL_ENTRYPOINT(glDepthRangeArrayv)(first, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthRangeIndexed \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble n = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble f = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthRangeIndexed GL_ENTRYPOINT(glDepthRangeIndexed)(index, n, f)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFloati_v \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_data = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFloati_v GL_ENTRYPOINT(glGetFloati_v)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetDoublei_v \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLdouble * pTrace_data = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetDoublei_v GL_ENTRYPOINT(glGetDoublei_v)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCreateSyncFromCLeventARB \
   const struct _cl_context * pTrace_context = reinterpret_cast<const struct _cl_context *>(trace_packet.get_param_client_memory_ptr(0)); \
   const struct _cl_event * pTrace_event = reinterpret_cast<const struct _cl_event *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLbitfield flags = trace_packet.get_param_value<GLbitfield>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glCreateSyncFromCLeventARB GL_ENTRYPOINT(glCreateSyncFromCLeventARB)(pReplay_context, pReplay_event, flags)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDebugMessageControlARB \
   GLenum source = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLenum severity = trace_packet.get_param_value<GLenum>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(4)); \
   GLboolean enabled = trace_packet.get_param_value<GLboolean>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glDebugMessageControlARB GL_ENTRYPOINT(glDebugMessageControlARB)(source, type, severity, count, pTrace_ids, enabled)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDebugMessageInsertARB \
   GLenum source = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLuint id = trace_packet.get_param_value<GLuint>(2); \
   GLenum severity = trace_packet.get_param_value<GLenum>(3); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(4); \
   const GLchar * pTrace_buf = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glDebugMessageInsertARB GL_ENTRYPOINT(glDebugMessageInsertARB)(source, type, id, severity, length, pTrace_buf)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDebugMessageCallbackARB \
   GLDEBUGPROCARB callback = trace_packet.get_param_value<GLDEBUGPROCARB>(0); \
   const GLvoid * pTrace_userParam = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDebugMessageCallbackARB GL_ENTRYPOINT(glDebugMessageCallbackARB)(callback, pTrace_userParam)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetDebugMessageLogARB \
   GLuint count = trace_packet.get_param_value<GLuint>(0); \
   GLsizei bufsize = trace_packet.get_param_value<GLsizei>(1); \
   const GLenum * pTrace_sources = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLenum * pTrace_types = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLenum * pTrace_severities = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLsizei * pTrace_lengths = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(6)); \
   const GLchar * pTrace_messageLog = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetDebugMessageLogARB GL_ENTRYPOINT(glGetDebugMessageLogARB)(count, bufsize, pReplay_sources, pReplay_types, pReplay_ids, pReplay_severities, pReplay_lengths, pReplay_messageLog)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetGraphicsResetStatusARB  

#define VOGL_REPLAY_CALL_GL_HELPER_glGetGraphicsResetStatusARB GL_ENTRYPOINT(glGetGraphicsResetStatusARB)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnMapdvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum query = trace_packet.get_param_value<GLenum>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnMapdvARB GL_ENTRYPOINT(glGetnMapdvARB)(target, query, bufSize, pReplay_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnMapfvARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum query = trace_packet.get_param_value<GLenum>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnMapfvARB GL_ENTRYPOINT(glGetnMapfvARB)(target, query, bufSize, pReplay_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnMapivARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum query = trace_packet.get_param_value<GLenum>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnMapivARB GL_ENTRYPOINT(glGetnMapivARB)(target, query, bufSize, pReplay_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnPixelMapfvARB \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_values = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnPixelMapfvARB GL_ENTRYPOINT(glGetnPixelMapfvARB)(map, bufSize, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnPixelMapuivARB \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_values = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnPixelMapuivARB GL_ENTRYPOINT(glGetnPixelMapuivARB)(map, bufSize, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnPixelMapusvARB \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLushort * pTrace_values = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnPixelMapusvARB GL_ENTRYPOINT(glGetnPixelMapusvARB)(map, bufSize, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnPolygonStippleARB \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(0); \
   const GLubyte * pTrace_pattern = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnPolygonStippleARB GL_ENTRYPOINT(glGetnPolygonStippleARB)(bufSize, pReplay_pattern)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnColorTableARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_table = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnColorTableARB GL_ENTRYPOINT(glGetnColorTableARB)(target, format, type, bufSize, pReplay_table)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnConvolutionFilterARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_image = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnConvolutionFilterARB GL_ENTRYPOINT(glGetnConvolutionFilterARB)(target, format, type, bufSize, pReplay_image)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnSeparableFilterARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei rowBufSize = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_row = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4)); \
   GLsizei columnBufSize = trace_packet.get_param_value<GLsizei>(5); \
   const GLvoid * pTrace_column = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6)); \
   const GLvoid * pTrace_span = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnSeparableFilterARB GL_ENTRYPOINT(glGetnSeparableFilterARB)(target, format, type, rowBufSize, pReplay_row, columnBufSize, pReplay_column, pReplay_span)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnHistogramARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLboolean reset = trace_packet.get_param_value<GLboolean>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(4); \
   const GLvoid * pTrace_values = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnHistogramARB GL_ENTRYPOINT(glGetnHistogramARB)(target, reset, format, type, bufSize, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnMinmaxARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLboolean reset = trace_packet.get_param_value<GLboolean>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(4); \
   const GLvoid * pTrace_values = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnMinmaxARB GL_ENTRYPOINT(glGetnMinmaxARB)(target, reset, format, type, bufSize, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnTexImageARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(4); \
   const GLvoid * pTrace_img = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnTexImageARB GL_ENTRYPOINT(glGetnTexImageARB)(target, level, format, type, bufSize, pReplay_img)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReadnPixelsARB \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(6); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glReadnPixelsARB GL_ENTRYPOINT(glReadnPixelsARB)(x, y, width, height, format, type, bufSize, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnCompressedTexImageARB \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint lod = trace_packet.get_param_value<GLint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_img = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnCompressedTexImageARB GL_ENTRYPOINT(glGetnCompressedTexImageARB)(target, lod, bufSize, pReplay_img)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnUniformfvARB \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnUniformfvARB GL_ENTRYPOINT(glGetnUniformfvARB)(program, location, bufSize, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnUniformivARB \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnUniformivARB GL_ENTRYPOINT(glGetnUniformivARB)(program, location, bufSize, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnUniformuivARB \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnUniformuivARB GL_ENTRYPOINT(glGetnUniformuivARB)(program, location, bufSize, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetnUniformdvARB \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetnUniformdvARB GL_ENTRYPOINT(glGetnUniformdvARB)(program, location, bufSize, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawArraysInstancedBaseInstance \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint first = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei instancecount = trace_packet.get_param_value<GLsizei>(3); \
   GLuint baseinstance = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawArraysInstancedBaseInstance GL_ENTRYPOINT(glDrawArraysInstancedBaseInstance)(mode, first, count, instancecount, baseinstance)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementsInstancedBaseInstance \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const void * pTrace_indices = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei instancecount = trace_packet.get_param_value<GLsizei>(4); \
   GLuint baseinstance = trace_packet.get_param_value<GLuint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementsInstancedBaseInstance GL_ENTRYPOINT(glDrawElementsInstancedBaseInstance)(mode, count, type, pTrace_indices, instancecount, baseinstance)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementsInstancedBaseVertexBaseInstance \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const void * pTrace_indices = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei instancecount = trace_packet.get_param_value<GLsizei>(4); \
   GLint basevertex = trace_packet.get_param_value<GLint>(5); \
   GLuint baseinstance = trace_packet.get_param_value<GLuint>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementsInstancedBaseVertexBaseInstance GL_ENTRYPOINT(glDrawElementsInstancedBaseVertexBaseInstance)(mode, count, type, pTrace_indices, instancecount, basevertex, baseinstance)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawTransformFeedbackInstanced \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1); \
   GLsizei instancecount = trace_packet.get_param_value<GLsizei>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawTransformFeedbackInstanced GL_ENTRYPOINT(glDrawTransformFeedbackInstanced)(mode, id, instancecount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawTransformFeedbackStreamInstanced \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1); \
   GLuint stream = trace_packet.get_param_value<GLuint>(2); \
   GLsizei instancecount = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawTransformFeedbackStreamInstanced GL_ENTRYPOINT(glDrawTransformFeedbackStreamInstanced)(mode, id, stream, instancecount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetInternalformativ \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(3); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetInternalformativ GL_ENTRYPOINT(glGetInternalformativ)(target, internalformat, pname, bufSize, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveAtomicCounterBufferiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint bufferIndex = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveAtomicCounterBufferiv GL_ENTRYPOINT(glGetActiveAtomicCounterBufferiv)(program, bufferIndex, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindImageTexture \
   GLuint unit = trace_packet.get_param_value<GLuint>(0); \
   GLuint texture = trace_packet.get_param_value<GLuint>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLboolean layered = trace_packet.get_param_value<GLboolean>(3); \
   GLint layer = trace_packet.get_param_value<GLint>(4); \
   GLenum access = trace_packet.get_param_value<GLenum>(5); \
   GLenum format = trace_packet.get_param_value<GLenum>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindImageTexture GL_ENTRYPOINT(glBindImageTexture)(unit, texture, level, layered, layer, access, format)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMemoryBarrier \
   GLbitfield barriers = trace_packet.get_param_value<GLbitfield>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMemoryBarrier GL_ENTRYPOINT(glMemoryBarrier)(barriers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexStorage1D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei levels = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexStorage1D GL_ENTRYPOINT(glTexStorage1D)(target, levels, internalformat, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexStorage2D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei levels = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexStorage2D GL_ENTRYPOINT(glTexStorage2D)(target, levels, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexStorage3D \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei levels = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexStorage3D GL_ENTRYPOINT(glTexStorage3D)(target, levels, internalformat, width, height, depth)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureStorage1DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei levels = trace_packet.get_param_value<GLsizei>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureStorage1DEXT GL_ENTRYPOINT(glTextureStorage1DEXT)(texture, target, levels, internalformat, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureStorage2DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei levels = trace_packet.get_param_value<GLsizei>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureStorage2DEXT GL_ENTRYPOINT(glTextureStorage2DEXT)(texture, target, levels, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureStorage3DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei levels = trace_packet.get_param_value<GLsizei>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureStorage3DEXT GL_ENTRYPOINT(glTextureStorage3DEXT)(texture, target, levels, internalformat, width, height, depth)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDebugMessageControl \
   GLenum source = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLenum severity = trace_packet.get_param_value<GLenum>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(4)); \
   GLboolean enabled = trace_packet.get_param_value<GLboolean>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glDebugMessageControl GL_ENTRYPOINT(glDebugMessageControl)(source, type, severity, count, pTrace_ids, enabled)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDebugMessageInsert \
   GLenum source = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLuint id = trace_packet.get_param_value<GLuint>(2); \
   GLenum severity = trace_packet.get_param_value<GLenum>(3); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(4); \
   const GLchar * pTrace_buf = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glDebugMessageInsert GL_ENTRYPOINT(glDebugMessageInsert)(source, type, id, severity, length, pTrace_buf)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDebugMessageCallback \
   GLDEBUGPROC callback = trace_packet.get_param_value<GLDEBUGPROC>(0); \
   const void * pTrace_userParam = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDebugMessageCallback GL_ENTRYPOINT(glDebugMessageCallback)(callback, pTrace_userParam)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetDebugMessageLog \
   GLuint count = trace_packet.get_param_value<GLuint>(0); \
   GLsizei bufsize = trace_packet.get_param_value<GLsizei>(1); \
   const GLenum * pTrace_sources = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLenum * pTrace_types = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLenum * pTrace_severities = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLsizei * pTrace_lengths = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(6)); \
   const GLchar * pTrace_messageLog = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetDebugMessageLog GL_ENTRYPOINT(glGetDebugMessageLog)(count, bufsize, pReplay_sources, pReplay_types, pReplay_ids, pReplay_severities, pReplay_lengths, pReplay_messageLog)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPushDebugGroup \
   GLenum source = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(2); \
   const GLchar * pTrace_message = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glPushDebugGroup GL_ENTRYPOINT(glPushDebugGroup)(source, id, length, pTrace_message)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPopDebugGroup  

#define VOGL_REPLAY_CALL_GL_HELPER_glPopDebugGroup GL_ENTRYPOINT(glPopDebugGroup)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glObjectLabel \
   GLenum identifier = trace_packet.get_param_value<GLenum>(0); \
   GLuint name = trace_packet.get_param_value<GLuint>(1); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(2); \
   const GLchar * pTrace_label = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glObjectLabel GL_ENTRYPOINT(glObjectLabel)(identifier, name, length, pTrace_label)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetObjectLabel \
   GLenum identifier = trace_packet.get_param_value<GLenum>(0); \
   GLuint name = trace_packet.get_param_value<GLuint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLchar * pTrace_label = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetObjectLabel GL_ENTRYPOINT(glGetObjectLabel)(identifier, name, bufSize, pReplay_length, pReplay_label)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glObjectPtrLabel \
   const void * pTrace_ptr = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(1); \
   const GLchar * pTrace_label = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glObjectPtrLabel GL_ENTRYPOINT(glObjectPtrLabel)(pTrace_ptr, length, pTrace_label)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetObjectPtrLabel \
   const void * pTrace_ptr = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLchar * pTrace_label = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetObjectPtrLabel GL_ENTRYPOINT(glGetObjectPtrLabel)(pTrace_ptr, bufSize, pReplay_length, pReplay_label)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearBufferData \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   const void * pTrace_data = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glClearBufferData GL_ENTRYPOINT(glClearBufferData)(target, internalformat, format, type, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearBufferSubData \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(2); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const void * pTrace_data = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glClearBufferSubData GL_ENTRYPOINT(glClearBufferSubData)(target, internalformat, offset, size, format, type, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearNamedBufferDataEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   const void * pTrace_data = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glClearNamedBufferDataEXT GL_ENTRYPOINT(glClearNamedBufferDataEXT)(buffer, internalformat, format, type, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearNamedBufferSubDataEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizeiptr offset = trace_packet.get_param_value<GLsizeiptr>(2); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const void * pTrace_data = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glClearNamedBufferSubDataEXT GL_ENTRYPOINT(glClearNamedBufferSubDataEXT)(buffer, internalformat, offset, size, format, type, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDispatchCompute \
   GLuint num_groups_x = trace_packet.get_param_value<GLuint>(0); \
   GLuint num_groups_y = trace_packet.get_param_value<GLuint>(1); \
   GLuint num_groups_z = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glDispatchCompute GL_ENTRYPOINT(glDispatchCompute)(num_groups_x, num_groups_y, num_groups_z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDispatchComputeIndirect \
   GLintptr indirect = trace_packet.get_param_value<GLintptr>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDispatchComputeIndirect GL_ENTRYPOINT(glDispatchComputeIndirect)(indirect)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyImageSubData \
   GLuint srcName = trace_packet.get_param_value<GLuint>(0); \
   GLenum srcTarget = trace_packet.get_param_value<GLenum>(1); \
   GLint srcLevel = trace_packet.get_param_value<GLint>(2); \
   GLint srcX = trace_packet.get_param_value<GLint>(3); \
   GLint srcY = trace_packet.get_param_value<GLint>(4); \
   GLint srcZ = trace_packet.get_param_value<GLint>(5); \
   GLuint dstName = trace_packet.get_param_value<GLuint>(6); \
   GLenum dstTarget = trace_packet.get_param_value<GLenum>(7); \
   GLint dstLevel = trace_packet.get_param_value<GLint>(8); \
   GLint dstX = trace_packet.get_param_value<GLint>(9); \
   GLint dstY = trace_packet.get_param_value<GLint>(10); \
   GLint dstZ = trace_packet.get_param_value<GLint>(11); \
   GLsizei srcWidth = trace_packet.get_param_value<GLsizei>(12); \
   GLsizei srcHeight = trace_packet.get_param_value<GLsizei>(13); \
   GLsizei srcDepth = trace_packet.get_param_value<GLsizei>(14);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyImageSubData GL_ENTRYPOINT(glCopyImageSubData)(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureView \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint origtexture = trace_packet.get_param_value<GLuint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLuint minlevel = trace_packet.get_param_value<GLuint>(4); \
   GLuint numlevels = trace_packet.get_param_value<GLuint>(5); \
   GLuint minlayer = trace_packet.get_param_value<GLuint>(6); \
   GLuint numlayers = trace_packet.get_param_value<GLuint>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureView GL_ENTRYPOINT(glTextureView)(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindVertexBuffer \
   GLuint bindingindex = trace_packet.get_param_value<GLuint>(0); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(1); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindVertexBuffer GL_ENTRYPOINT(glBindVertexBuffer)(bindingindex, buffer, offset, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribFormat \
   GLuint attribindex = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(3); \
   GLuint relativeoffset = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribFormat GL_ENTRYPOINT(glVertexAttribFormat)(attribindex, size, type, normalized, relativeoffset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribIFormat \
   GLuint attribindex = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLuint relativeoffset = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribIFormat GL_ENTRYPOINT(glVertexAttribIFormat)(attribindex, size, type, relativeoffset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribLFormat \
   GLuint attribindex = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLuint relativeoffset = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribLFormat GL_ENTRYPOINT(glVertexAttribLFormat)(attribindex, size, type, relativeoffset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribBinding \
   GLuint attribindex = trace_packet.get_param_value<GLuint>(0); \
   GLuint bindingindex = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribBinding GL_ENTRYPOINT(glVertexAttribBinding)(attribindex, bindingindex)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexBindingDivisor \
   GLuint bindingindex = trace_packet.get_param_value<GLuint>(0); \
   GLuint divisor = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexBindingDivisor GL_ENTRYPOINT(glVertexBindingDivisor)(bindingindex, divisor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayBindVertexBufferEXT \
   GLuint vaobj = trace_packet.get_param_value<GLuint>(0); \
   GLuint bindingindex = trace_packet.get_param_value<GLuint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(3); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayBindVertexBufferEXT GL_ENTRYPOINT(glVertexArrayBindVertexBufferEXT)(vaobj, bindingindex, buffer, offset, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayVertexAttribFormatEXT \
   GLuint vaobj = trace_packet.get_param_value<GLuint>(0); \
   GLuint attribindex = trace_packet.get_param_value<GLuint>(1); \
   GLint size = trace_packet.get_param_value<GLint>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(4); \
   GLuint relativeoffset = trace_packet.get_param_value<GLuint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayVertexAttribFormatEXT GL_ENTRYPOINT(glVertexArrayVertexAttribFormatEXT)(vaobj, attribindex, size, type, normalized, relativeoffset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayVertexAttribIFormatEXT \
   GLuint vaobj = trace_packet.get_param_value<GLuint>(0); \
   GLuint attribindex = trace_packet.get_param_value<GLuint>(1); \
   GLint size = trace_packet.get_param_value<GLint>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   GLuint relativeoffset = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayVertexAttribIFormatEXT GL_ENTRYPOINT(glVertexArrayVertexAttribIFormatEXT)(vaobj, attribindex, size, type, relativeoffset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayVertexAttribLFormatEXT \
   GLuint vaobj = trace_packet.get_param_value<GLuint>(0); \
   GLuint attribindex = trace_packet.get_param_value<GLuint>(1); \
   GLint size = trace_packet.get_param_value<GLint>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   GLuint relativeoffset = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayVertexAttribLFormatEXT GL_ENTRYPOINT(glVertexArrayVertexAttribLFormatEXT)(vaobj, attribindex, size, type, relativeoffset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayVertexAttribBindingEXT \
   GLuint vaobj = trace_packet.get_param_value<GLuint>(0); \
   GLuint attribindex = trace_packet.get_param_value<GLuint>(1); \
   GLuint bindingindex = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayVertexAttribBindingEXT GL_ENTRYPOINT(glVertexArrayVertexAttribBindingEXT)(vaobj, attribindex, bindingindex)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayVertexBindingDivisorEXT \
   GLuint vaobj = trace_packet.get_param_value<GLuint>(0); \
   GLuint bindingindex = trace_packet.get_param_value<GLuint>(1); \
   GLuint divisor = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayVertexBindingDivisorEXT GL_ENTRYPOINT(glVertexArrayVertexBindingDivisorEXT)(vaobj, bindingindex, divisor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferParameteri \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferParameteri GL_ENTRYPOINT(glFramebufferParameteri)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFramebufferParameteriv \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFramebufferParameteriv GL_ENTRYPOINT(glGetFramebufferParameteriv)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedFramebufferParameteriEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedFramebufferParameteriEXT GL_ENTRYPOINT(glNamedFramebufferParameteriEXT)(framebuffer, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedFramebufferParameterivEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedFramebufferParameterivEXT GL_ENTRYPOINT(glGetNamedFramebufferParameterivEXT)(framebuffer, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetInternalformati64v \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(3); \
   const GLint64 * pTrace_params = reinterpret_cast<const GLint64 *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetInternalformati64v GL_ENTRYPOINT(glGetInternalformati64v)(target, internalformat, pname, bufSize, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInvalidateTexSubImage \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint zoffset = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glInvalidateTexSubImage GL_ENTRYPOINT(glInvalidateTexSubImage)(texture, level, xoffset, yoffset, zoffset, width, height, depth)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInvalidateTexImage \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glInvalidateTexImage GL_ENTRYPOINT(glInvalidateTexImage)(texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInvalidateBufferSubData \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr length = trace_packet.get_param_value<GLsizeiptr>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glInvalidateBufferSubData GL_ENTRYPOINT(glInvalidateBufferSubData)(buffer, offset, length)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInvalidateBufferData \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glInvalidateBufferData GL_ENTRYPOINT(glInvalidateBufferData)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInvalidateFramebuffer \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei numAttachments = trace_packet.get_param_value<GLsizei>(1); \
   const GLenum * pTrace_attachments = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glInvalidateFramebuffer GL_ENTRYPOINT(glInvalidateFramebuffer)(target, numAttachments, pTrace_attachments)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInvalidateSubFramebuffer \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei numAttachments = trace_packet.get_param_value<GLsizei>(1); \
   const GLenum * pTrace_attachments = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLint x = trace_packet.get_param_value<GLint>(3); \
   GLint y = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glInvalidateSubFramebuffer GL_ENTRYPOINT(glInvalidateSubFramebuffer)(target, numAttachments, pTrace_attachments, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawArraysIndirect \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const void * pTrace_indirect = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLsizei drawcount = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawArraysIndirect GL_ENTRYPOINT(glMultiDrawArraysIndirect)(mode, pTrace_indirect, drawcount, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawElementsIndirect \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const void * pTrace_indirect = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLsizei drawcount = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawElementsIndirect GL_ENTRYPOINT(glMultiDrawElementsIndirect)(mode, type, pTrace_indirect, drawcount, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramInterfaceiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum programInterface = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramInterfaceiv GL_ENTRYPOINT(glGetProgramInterfaceiv)(program, programInterface, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramResourceIndex \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum programInterface = trace_packet.get_param_value<GLenum>(1); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramResourceIndex GL_ENTRYPOINT(glGetProgramResourceIndex)(program, programInterface, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramResourceName \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum programInterface = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(3); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramResourceName GL_ENTRYPOINT(glGetProgramResourceName)(program, programInterface, index, bufSize, pReplay_length, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramResourceiv \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum programInterface = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLsizei propCount = trace_packet.get_param_value<GLsizei>(3); \
   const GLenum * pTrace_props = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(4)); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(5); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(6)); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramResourceiv GL_ENTRYPOINT(glGetProgramResourceiv)(program, programInterface, index, propCount, pTrace_props, bufSize, pReplay_length, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramResourceLocation \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum programInterface = trace_packet.get_param_value<GLenum>(1); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramResourceLocation GL_ENTRYPOINT(glGetProgramResourceLocation)(program, programInterface, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramResourceLocationIndex \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum programInterface = trace_packet.get_param_value<GLenum>(1); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramResourceLocationIndex GL_ENTRYPOINT(glGetProgramResourceLocationIndex)(program, programInterface, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glShaderStorageBlockBinding \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint storageBlockIndex = trace_packet.get_param_value<GLuint>(1); \
   GLuint storageBlockBinding = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glShaderStorageBlockBinding GL_ENTRYPOINT(glShaderStorageBlockBinding)(program, storageBlockIndex, storageBlockBinding)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexBufferRange \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(3); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexBufferRange GL_ENTRYPOINT(glTexBufferRange)(target, internalformat, buffer, offset, size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureBufferRangeEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(3); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(4); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureBufferRangeEXT GL_ENTRYPOINT(glTextureBufferRangeEXT)(texture, target, internalformat, buffer, offset, size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexStorage2DMultisample \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLboolean fixedsamplelocations = trace_packet.get_param_value<GLboolean>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexStorage2DMultisample GL_ENTRYPOINT(glTexStorage2DMultisample)(target, samples, internalformat, width, height, fixedsamplelocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexStorage3DMultisample \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(5); \
   GLboolean fixedsamplelocations = trace_packet.get_param_value<GLboolean>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexStorage3DMultisample GL_ENTRYPOINT(glTexStorage3DMultisample)(target, samples, internalformat, width, height, depth, fixedsamplelocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureStorage2DMultisampleEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLboolean fixedsamplelocations = trace_packet.get_param_value<GLboolean>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureStorage2DMultisampleEXT GL_ENTRYPOINT(glTextureStorage2DMultisampleEXT)(texture, target, samples, internalformat, width, height, fixedsamplelocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureStorage3DMultisampleEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(6); \
   GLboolean fixedsamplelocations = trace_packet.get_param_value<GLboolean>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureStorage3DMultisampleEXT GL_ENTRYPOINT(glTextureStorage3DMultisampleEXT)(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendColorEXT \
   GLfloat red = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat green = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat blue = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat alpha = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendColorEXT GL_ENTRYPOINT(glBlendColorEXT)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPolygonOffsetEXT \
   GLfloat factor = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat bias = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPolygonOffsetEXT GL_ENTRYPOINT(glPolygonOffsetEXT)(factor, bias)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexImage3DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6); \
   GLenum format = trace_packet.get_param_value<GLenum>(7); \
   GLenum type = trace_packet.get_param_value<GLenum>(8); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexImage3DEXT GL_ENTRYPOINT(glTexImage3DEXT)(target, level, internalformat, width, height, depth, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexSubImage3DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint zoffset = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(7); \
   GLenum format = trace_packet.get_param_value<GLenum>(8); \
   GLenum type = trace_packet.get_param_value<GLenum>(9); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(10));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexSubImage3DEXT GL_ENTRYPOINT(glTexSubImage3DEXT)(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexFilterFuncSGIS \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum filter = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_weights = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexFilterFuncSGIS GL_ENTRYPOINT(glGetTexFilterFuncSGIS)(target, filter, pReplay_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexFilterFuncSGIS \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum filter = trace_packet.get_param_value<GLenum>(1); \
   GLsizei n = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_weights = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexFilterFuncSGIS GL_ENTRYPOINT(glTexFilterFuncSGIS)(target, filter, n, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexSubImage1DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexSubImage1DEXT GL_ENTRYPOINT(glTexSubImage1DEXT)(target, level, xoffset, width, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexSubImage2DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLenum format = trace_packet.get_param_value<GLenum>(6); \
   GLenum type = trace_packet.get_param_value<GLenum>(7); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexSubImage2DEXT GL_ENTRYPOINT(glTexSubImage2DEXT)(target, level, xoffset, yoffset, width, height, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexImage1DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLint x = trace_packet.get_param_value<GLint>(3); \
   GLint y = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexImage1DEXT GL_ENTRYPOINT(glCopyTexImage1DEXT)(target, level, internalformat, x, y, width, border)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexImage2DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLint x = trace_packet.get_param_value<GLint>(3); \
   GLint y = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLint border = trace_packet.get_param_value<GLint>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexImage2DEXT GL_ENTRYPOINT(glCopyTexImage2DEXT)(target, level, internalformat, x, y, width, height, border)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexSubImage1DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint x = trace_packet.get_param_value<GLint>(3); \
   GLint y = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexSubImage1DEXT GL_ENTRYPOINT(glCopyTexSubImage1DEXT)(target, level, xoffset, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexSubImage2DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint x = trace_packet.get_param_value<GLint>(4); \
   GLint y = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexSubImage2DEXT GL_ENTRYPOINT(glCopyTexSubImage2DEXT)(target, level, xoffset, yoffset, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTexSubImage3DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint zoffset = trace_packet.get_param_value<GLint>(4); \
   GLint x = trace_packet.get_param_value<GLint>(5); \
   GLint y = trace_packet.get_param_value<GLint>(6); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(7); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTexSubImage3DEXT GL_ENTRYPOINT(glCopyTexSubImage3DEXT)(target, level, xoffset, yoffset, zoffset, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetHistogramEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLboolean reset = trace_packet.get_param_value<GLboolean>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   const GLvoid * pTrace_values = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetHistogramEXT GL_ENTRYPOINT(glGetHistogramEXT)(target, reset, format, type, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetHistogramParameterfvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetHistogramParameterfvEXT GL_ENTRYPOINT(glGetHistogramParameterfvEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetHistogramParameterivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetHistogramParameterivEXT GL_ENTRYPOINT(glGetHistogramParameterivEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMinmaxEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLboolean reset = trace_packet.get_param_value<GLboolean>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   const GLvoid * pTrace_values = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMinmaxEXT GL_ENTRYPOINT(glGetMinmaxEXT)(target, reset, format, type, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMinmaxParameterfvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMinmaxParameterfvEXT GL_ENTRYPOINT(glGetMinmaxParameterfvEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMinmaxParameterivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMinmaxParameterivEXT GL_ENTRYPOINT(glGetMinmaxParameterivEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glHistogramEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLboolean sink = trace_packet.get_param_value<GLboolean>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glHistogramEXT GL_ENTRYPOINT(glHistogramEXT)(target, width, internalformat, sink)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMinmaxEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLboolean sink = trace_packet.get_param_value<GLboolean>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMinmaxEXT GL_ENTRYPOINT(glMinmaxEXT)(target, internalformat, sink)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glResetHistogramEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glResetHistogramEXT GL_ENTRYPOINT(glResetHistogramEXT)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glResetMinmaxEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glResetMinmaxEXT GL_ENTRYPOINT(glResetMinmaxEXT)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionFilter1DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLenum format = trace_packet.get_param_value<GLenum>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_image = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionFilter1DEXT GL_ENTRYPOINT(glConvolutionFilter1DEXT)(target, internalformat, width, format, type, pTrace_image)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionFilter2DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const GLvoid * pTrace_image = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionFilter2DEXT GL_ENTRYPOINT(glConvolutionFilter2DEXT)(target, internalformat, width, height, format, type, pTrace_image)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameterfEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat params = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameterfEXT GL_ENTRYPOINT(glConvolutionParameterfEXT)(target, pname, params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameterfvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameterfvEXT GL_ENTRYPOINT(glConvolutionParameterfvEXT)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameteriEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint params = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameteriEXT GL_ENTRYPOINT(glConvolutionParameteriEXT)(target, pname, params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameterivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameterivEXT GL_ENTRYPOINT(glConvolutionParameterivEXT)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyConvolutionFilter1DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyConvolutionFilter1DEXT GL_ENTRYPOINT(glCopyConvolutionFilter1DEXT)(target, internalformat, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyConvolutionFilter2DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyConvolutionFilter2DEXT GL_ENTRYPOINT(glCopyConvolutionFilter2DEXT)(target, internalformat, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetConvolutionFilterEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_image = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetConvolutionFilterEXT GL_ENTRYPOINT(glGetConvolutionFilterEXT)(target, format, type, pReplay_image)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetConvolutionParameterfvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetConvolutionParameterfvEXT GL_ENTRYPOINT(glGetConvolutionParameterfvEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetConvolutionParameterivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetConvolutionParameterivEXT GL_ENTRYPOINT(glGetConvolutionParameterivEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSeparableFilterEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_row = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLvoid * pTrace_column = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLvoid * pTrace_span = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSeparableFilterEXT GL_ENTRYPOINT(glGetSeparableFilterEXT)(target, format, type, pReplay_row, pReplay_column, pReplay_span)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSeparableFilter2DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const GLvoid * pTrace_row = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6)); \
   const GLvoid * pTrace_column = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glSeparableFilter2DEXT GL_ENTRYPOINT(glSeparableFilter2DEXT)(target, internalformat, width, height, format, type, pTrace_row, pTrace_column)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorTableSGI \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLenum format = trace_packet.get_param_value<GLenum>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_table = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorTableSGI GL_ENTRYPOINT(glColorTableSGI)(target, internalformat, width, format, type, pTrace_table)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorTableParameterfvSGI \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorTableParameterfvSGI GL_ENTRYPOINT(glColorTableParameterfvSGI)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorTableParameterivSGI \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorTableParameterivSGI GL_ENTRYPOINT(glColorTableParameterivSGI)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyColorTableSGI \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyColorTableSGI GL_ENTRYPOINT(glCopyColorTableSGI)(target, internalformat, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetColorTableSGI \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_table = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetColorTableSGI GL_ENTRYPOINT(glGetColorTableSGI)(target, format, type, pReplay_table)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetColorTableParameterfvSGI \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetColorTableParameterfvSGI GL_ENTRYPOINT(glGetColorTableParameterfvSGI)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetColorTableParameterivSGI \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetColorTableParameterivSGI GL_ENTRYPOINT(glGetColorTableParameterivSGI)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTexGenSGIX \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTexGenSGIX GL_ENTRYPOINT(glPixelTexGenSGIX)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTexGenParameteriSGIS \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTexGenParameteriSGIS GL_ENTRYPOINT(glPixelTexGenParameteriSGIS)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTexGenParameterivSGIS \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTexGenParameterivSGIS GL_ENTRYPOINT(glPixelTexGenParameterivSGIS)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTexGenParameterfSGIS \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTexGenParameterfSGIS GL_ENTRYPOINT(glPixelTexGenParameterfSGIS)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTexGenParameterfvSGIS \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTexGenParameterfvSGIS GL_ENTRYPOINT(glPixelTexGenParameterfvSGIS)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPixelTexGenParameterivSGIS \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPixelTexGenParameterivSGIS GL_ENTRYPOINT(glGetPixelTexGenParameterivSGIS)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPixelTexGenParameterfvSGIS \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPixelTexGenParameterfvSGIS GL_ENTRYPOINT(glGetPixelTexGenParameterfvSGIS)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexImage4DSGIS \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei size4d = trace_packet.get_param_value<GLsizei>(6); \
   GLint border = trace_packet.get_param_value<GLint>(7); \
   GLenum format = trace_packet.get_param_value<GLenum>(8); \
   GLenum type = trace_packet.get_param_value<GLenum>(9); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(10));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexImage4DSGIS GL_ENTRYPOINT(glTexImage4DSGIS)(target, level, internalformat, width, height, depth, size4d, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexSubImage4DSGIS \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLint xoffset = trace_packet.get_param_value<GLint>(2); \
   GLint yoffset = trace_packet.get_param_value<GLint>(3); \
   GLint zoffset = trace_packet.get_param_value<GLint>(4); \
   GLint woffset = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(7); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(8); \
   GLsizei size4d = trace_packet.get_param_value<GLsizei>(9); \
   GLenum format = trace_packet.get_param_value<GLenum>(10); \
   GLenum type = trace_packet.get_param_value<GLenum>(11); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(12));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexSubImage4DSGIS GL_ENTRYPOINT(glTexSubImage4DSGIS)(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAreTexturesResidentEXT \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_textures = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLboolean * pTrace_residences = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glAreTexturesResidentEXT GL_ENTRYPOINT(glAreTexturesResidentEXT)(n, pTrace_textures, pReplay_residences)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindTextureEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint texture = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindTextureEXT GL_ENTRYPOINT(glBindTextureEXT)(target, texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteTexturesEXT \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_textures = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteTexturesEXT GL_ENTRYPOINT(glDeleteTexturesEXT)(n, pTrace_textures)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenTexturesEXT \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_textures = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenTexturesEXT GL_ENTRYPOINT(glGenTexturesEXT)(n, pReplay_textures)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsTextureEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsTextureEXT GL_ENTRYPOINT(glIsTextureEXT)(texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPrioritizeTexturesEXT \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_textures = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLclampf * pTrace_priorities = reinterpret_cast<const GLclampf *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPrioritizeTexturesEXT GL_ENTRYPOINT(glPrioritizeTexturesEXT)(n, pTrace_textures, pTrace_priorities)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDetailTexFuncSGIS \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei n = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glDetailTexFuncSGIS GL_ENTRYPOINT(glDetailTexFuncSGIS)(target, n, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetDetailTexFuncSGIS \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetDetailTexFuncSGIS GL_ENTRYPOINT(glGetDetailTexFuncSGIS)(target, pReplay_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSharpenTexFuncSGIS \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei n = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glSharpenTexFuncSGIS GL_ENTRYPOINT(glSharpenTexFuncSGIS)(target, n, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetSharpenTexFuncSGIS \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetSharpenTexFuncSGIS GL_ENTRYPOINT(glGetSharpenTexFuncSGIS)(target, pReplay_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSampleMaskSGIS \
   GLclampf value = trace_packet.get_param_value<GLclampf>(0); \
   GLboolean invert = trace_packet.get_param_value<GLboolean>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSampleMaskSGIS GL_ENTRYPOINT(glSampleMaskSGIS)(value, invert)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSamplePatternSGIS \
   GLenum pattern = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glSamplePatternSGIS GL_ENTRYPOINT(glSamplePatternSGIS)(pattern)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glArrayElementEXT \
   GLint i = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glArrayElementEXT GL_ENTRYPOINT(glArrayElementEXT)(i)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorPointerEXT \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorPointerEXT GL_ENTRYPOINT(glColorPointerEXT)(size, type, stride, count, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawArraysEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint first = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawArraysEXT GL_ENTRYPOINT(glDrawArraysEXT)(mode, first, count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEdgeFlagPointerEXT \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLboolean * pTrace_pointer = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glEdgeFlagPointerEXT GL_ENTRYPOINT(glEdgeFlagPointerEXT)(stride, count, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPointervEXT \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLvoid* * pTrace_params = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPointervEXT GL_ENTRYPOINT(glGetPointervEXT)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexPointerEXT \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexPointerEXT GL_ENTRYPOINT(glIndexPointerEXT)(type, stride, count, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalPointerEXT \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalPointerEXT GL_ENTRYPOINT(glNormalPointerEXT)(type, stride, count, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordPointerEXT \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordPointerEXT GL_ENTRYPOINT(glTexCoordPointerEXT)(size, type, stride, count, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexPointerEXT \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexPointerEXT GL_ENTRYPOINT(glVertexPointerEXT)(size, type, stride, count, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquationEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquationEXT GL_ENTRYPOINT(glBlendEquationEXT)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSpriteParameterfSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSpriteParameterfSGIX GL_ENTRYPOINT(glSpriteParameterfSGIX)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSpriteParameterfvSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glSpriteParameterfvSGIX GL_ENTRYPOINT(glSpriteParameterfvSGIX)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSpriteParameteriSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSpriteParameteriSGIX GL_ENTRYPOINT(glSpriteParameteriSGIX)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSpriteParameterivSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glSpriteParameterivSGIX GL_ENTRYPOINT(glSpriteParameterivSGIX)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterfEXT \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterfEXT GL_ENTRYPOINT(glPointParameterfEXT)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterfvEXT \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterfvEXT GL_ENTRYPOINT(glPointParameterfvEXT)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterfSGIS \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterfSGIS GL_ENTRYPOINT(glPointParameterfSGIS)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterfvSGIS \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterfvSGIS GL_ENTRYPOINT(glPointParameterfvSGIS)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetInstrumentsSGIX  

#define VOGL_REPLAY_CALL_GL_HELPER_glGetInstrumentsSGIX GL_ENTRYPOINT(glGetInstrumentsSGIX)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInstrumentsBufferSGIX \
   GLsizei size = trace_packet.get_param_value<GLsizei>(0); \
   const GLint * pTrace_buffer = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glInstrumentsBufferSGIX GL_ENTRYPOINT(glInstrumentsBufferSGIX)(size, pReplay_buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPollInstrumentsSGIX \
   const GLint * pTrace_marker_p = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glPollInstrumentsSGIX GL_ENTRYPOINT(glPollInstrumentsSGIX)(pReplay_marker_p)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReadInstrumentsSGIX \
   GLint marker = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glReadInstrumentsSGIX GL_ENTRYPOINT(glReadInstrumentsSGIX)(marker)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStartInstrumentsSGIX  

#define VOGL_REPLAY_CALL_GL_HELPER_glStartInstrumentsSGIX GL_ENTRYPOINT(glStartInstrumentsSGIX)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStopInstrumentsSGIX \
   GLint marker = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glStopInstrumentsSGIX GL_ENTRYPOINT(glStopInstrumentsSGIX)(marker)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFrameZoomSGIX \
   GLint factor = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFrameZoomSGIX GL_ENTRYPOINT(glFrameZoomSGIX)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTagSampleBufferSGIX  

#define VOGL_REPLAY_CALL_GL_HELPER_glTagSampleBufferSGIX GL_ENTRYPOINT(glTagSampleBufferSGIX)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeformationMap3dSGIX \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLdouble u1 = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble u2 = trace_packet.get_param_value<GLdouble>(2); \
   GLint ustride = trace_packet.get_param_value<GLint>(3); \
   GLint uorder = trace_packet.get_param_value<GLint>(4); \
   GLdouble v1 = trace_packet.get_param_value<GLdouble>(5); \
   GLdouble v2 = trace_packet.get_param_value<GLdouble>(6); \
   GLint vstride = trace_packet.get_param_value<GLint>(7); \
   GLint vorder = trace_packet.get_param_value<GLint>(8); \
   GLdouble w1 = trace_packet.get_param_value<GLdouble>(9); \
   GLdouble w2 = trace_packet.get_param_value<GLdouble>(10); \
   GLint wstride = trace_packet.get_param_value<GLint>(11); \
   GLint worder = trace_packet.get_param_value<GLint>(12); \
   const GLdouble * pTrace_points = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(13));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeformationMap3dSGIX GL_ENTRYPOINT(glDeformationMap3dSGIX)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeformationMap3fSGIX \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfloat u1 = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat u2 = trace_packet.get_param_value<GLfloat>(2); \
   GLint ustride = trace_packet.get_param_value<GLint>(3); \
   GLint uorder = trace_packet.get_param_value<GLint>(4); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(6); \
   GLint vstride = trace_packet.get_param_value<GLint>(7); \
   GLint vorder = trace_packet.get_param_value<GLint>(8); \
   GLfloat w1 = trace_packet.get_param_value<GLfloat>(9); \
   GLfloat w2 = trace_packet.get_param_value<GLfloat>(10); \
   GLint wstride = trace_packet.get_param_value<GLint>(11); \
   GLint worder = trace_packet.get_param_value<GLint>(12); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(13));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeformationMap3fSGIX GL_ENTRYPOINT(glDeformationMap3fSGIX)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeformSGIX \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeformSGIX GL_ENTRYPOINT(glDeformSGIX)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadIdentityDeformationMapSGIX \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadIdentityDeformationMapSGIX GL_ENTRYPOINT(glLoadIdentityDeformationMapSGIX)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReferencePlaneSGIX \
   const GLdouble * pTrace_equation = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glReferencePlaneSGIX GL_ENTRYPOINT(glReferencePlaneSGIX)(pTrace_equation)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFlushRasterSGIX  

#define VOGL_REPLAY_CALL_GL_HELPER_glFlushRasterSGIX GL_ENTRYPOINT(glFlushRasterSGIX)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogFuncSGIS \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogFuncSGIS GL_ENTRYPOINT(glFogFuncSGIS)(n, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFogFuncSGIS \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFogFuncSGIS GL_ENTRYPOINT(glGetFogFuncSGIS)(pReplay_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glImageTransformParameteriHP \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glImageTransformParameteriHP GL_ENTRYPOINT(glImageTransformParameteriHP)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glImageTransformParameterfHP \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glImageTransformParameterfHP GL_ENTRYPOINT(glImageTransformParameterfHP)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glImageTransformParameterivHP \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glImageTransformParameterivHP GL_ENTRYPOINT(glImageTransformParameterivHP)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glImageTransformParameterfvHP \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glImageTransformParameterfvHP GL_ENTRYPOINT(glImageTransformParameterfvHP)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetImageTransformParameterivHP \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetImageTransformParameterivHP GL_ENTRYPOINT(glGetImageTransformParameterivHP)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetImageTransformParameterfvHP \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetImageTransformParameterfvHP GL_ENTRYPOINT(glGetImageTransformParameterfvHP)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorSubTableEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei start = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLenum format = trace_packet.get_param_value<GLenum>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorSubTableEXT GL_ENTRYPOINT(glColorSubTableEXT)(target, start, count, format, type, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyColorSubTableEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei start = trace_packet.get_param_value<GLsizei>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyColorSubTableEXT GL_ENTRYPOINT(glCopyColorSubTableEXT)(target, start, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glHintPGI \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint mode = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glHintPGI GL_ENTRYPOINT(glHintPGI)(target, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorTableEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalFormat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLenum format = trace_packet.get_param_value<GLenum>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_table = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorTableEXT GL_ENTRYPOINT(glColorTableEXT)(target, internalFormat, width, format, type, pTrace_table)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetColorTableEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetColorTableEXT GL_ENTRYPOINT(glGetColorTableEXT)(target, format, type, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetColorTableParameterivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetColorTableParameterivEXT GL_ENTRYPOINT(glGetColorTableParameterivEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetColorTableParameterfvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetColorTableParameterfvEXT GL_ENTRYPOINT(glGetColorTableParameterfvEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetListParameterfvSGIX \
   GLuint list = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetListParameterfvSGIX GL_ENTRYPOINT(glGetListParameterfvSGIX)(list, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetListParameterivSGIX \
   GLuint list = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetListParameterivSGIX GL_ENTRYPOINT(glGetListParameterivSGIX)(list, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glListParameterfSGIX \
   GLuint list = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glListParameterfSGIX GL_ENTRYPOINT(glListParameterfSGIX)(list, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glListParameterfvSGIX \
   GLuint list = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glListParameterfvSGIX GL_ENTRYPOINT(glListParameterfvSGIX)(list, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glListParameteriSGIX \
   GLuint list = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glListParameteriSGIX GL_ENTRYPOINT(glListParameteriSGIX)(list, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glListParameterivSGIX \
   GLuint list = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glListParameterivSGIX GL_ENTRYPOINT(glListParameterivSGIX)(list, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexMaterialEXT \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexMaterialEXT GL_ENTRYPOINT(glIndexMaterialEXT)(face, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexFuncEXT \
   GLenum func = trace_packet.get_param_value<GLenum>(0); \
   GLclampf ref = trace_packet.get_param_value<GLclampf>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexFuncEXT GL_ENTRYPOINT(glIndexFuncEXT)(func, ref)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLockArraysEXT \
   GLint first = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glLockArraysEXT GL_ENTRYPOINT(glLockArraysEXT)(first, count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUnlockArraysEXT  

#define VOGL_REPLAY_CALL_GL_HELPER_glUnlockArraysEXT GL_ENTRYPOINT(glUnlockArraysEXT)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCullParameterdvEXT \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glCullParameterdvEXT GL_ENTRYPOINT(glCullParameterdvEXT)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCullParameterfvEXT \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glCullParameterfvEXT GL_ENTRYPOINT(glCullParameterfvEXT)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentColorMaterialSGIX \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentColorMaterialSGIX GL_ENTRYPOINT(glFragmentColorMaterialSGIX)(face, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentLightfSGIX \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentLightfSGIX GL_ENTRYPOINT(glFragmentLightfSGIX)(light, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentLightfvSGIX \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentLightfvSGIX GL_ENTRYPOINT(glFragmentLightfvSGIX)(light, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentLightiSGIX \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentLightiSGIX GL_ENTRYPOINT(glFragmentLightiSGIX)(light, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentLightivSGIX \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentLightivSGIX GL_ENTRYPOINT(glFragmentLightivSGIX)(light, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentLightModelfSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentLightModelfSGIX GL_ENTRYPOINT(glFragmentLightModelfSGIX)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentLightModelfvSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentLightModelfvSGIX GL_ENTRYPOINT(glFragmentLightModelfvSGIX)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentLightModeliSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentLightModeliSGIX GL_ENTRYPOINT(glFragmentLightModeliSGIX)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentLightModelivSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentLightModelivSGIX GL_ENTRYPOINT(glFragmentLightModelivSGIX)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentMaterialfSGIX \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentMaterialfSGIX GL_ENTRYPOINT(glFragmentMaterialfSGIX)(face, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentMaterialfvSGIX \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentMaterialfvSGIX GL_ENTRYPOINT(glFragmentMaterialfvSGIX)(face, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentMaterialiSGIX \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentMaterialiSGIX GL_ENTRYPOINT(glFragmentMaterialiSGIX)(face, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFragmentMaterialivSGIX \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glFragmentMaterialivSGIX GL_ENTRYPOINT(glFragmentMaterialivSGIX)(face, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFragmentLightfvSGIX \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFragmentLightfvSGIX GL_ENTRYPOINT(glGetFragmentLightfvSGIX)(light, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFragmentLightivSGIX \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFragmentLightivSGIX GL_ENTRYPOINT(glGetFragmentLightivSGIX)(light, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFragmentMaterialfvSGIX \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFragmentMaterialfvSGIX GL_ENTRYPOINT(glGetFragmentMaterialfvSGIX)(face, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFragmentMaterialivSGIX \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFragmentMaterialivSGIX GL_ENTRYPOINT(glGetFragmentMaterialivSGIX)(face, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightEnviSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glLightEnviSGIX GL_ENTRYPOINT(glLightEnviSGIX)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawRangeElementsEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint start = trace_packet.get_param_value<GLuint>(1); \
   GLuint end = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_indices = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawRangeElementsEXT GL_ENTRYPOINT(glDrawRangeElementsEXT)(mode, start, end, count, type, pTrace_indices)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glApplyTextureEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glApplyTextureEXT GL_ENTRYPOINT(glApplyTextureEXT)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureLightEXT \
   GLenum pname = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureLightEXT GL_ENTRYPOINT(glTextureLightEXT)(pname)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureMaterialEXT \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureMaterialEXT GL_ENTRYPOINT(glTextureMaterialEXT)(face, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAsyncMarkerSGIX \
   GLuint marker = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glAsyncMarkerSGIX GL_ENTRYPOINT(glAsyncMarkerSGIX)(marker)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFinishAsyncSGIX \
   const GLuint * pTrace_markerp = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glFinishAsyncSGIX GL_ENTRYPOINT(glFinishAsyncSGIX)(pReplay_markerp)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPollAsyncSGIX \
   const GLuint * pTrace_markerp = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glPollAsyncSGIX GL_ENTRYPOINT(glPollAsyncSGIX)(pReplay_markerp)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenAsyncMarkersSGIX \
   GLsizei range = trace_packet.get_param_value<GLsizei>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenAsyncMarkersSGIX GL_ENTRYPOINT(glGenAsyncMarkersSGIX)(range)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteAsyncMarkersSGIX \
   GLuint marker = trace_packet.get_param_value<GLuint>(0); \
   GLsizei range = trace_packet.get_param_value<GLsizei>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteAsyncMarkersSGIX GL_ENTRYPOINT(glDeleteAsyncMarkersSGIX)(marker, range)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsAsyncMarkerSGIX \
   GLuint marker = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsAsyncMarkerSGIX GL_ENTRYPOINT(glIsAsyncMarkerSGIX)(marker)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexPointervINTEL \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexPointervINTEL GL_ENTRYPOINT(glVertexPointervINTEL)(size, type, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalPointervINTEL \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalPointervINTEL GL_ENTRYPOINT(glNormalPointervINTEL)(type, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorPointervINTEL \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glColorPointervINTEL GL_ENTRYPOINT(glColorPointervINTEL)(size, type, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordPointervINTEL \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordPointervINTEL GL_ENTRYPOINT(glTexCoordPointervINTEL)(size, type, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTransformParameteriEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTransformParameteriEXT GL_ENTRYPOINT(glPixelTransformParameteriEXT)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTransformParameterfEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTransformParameterfEXT GL_ENTRYPOINT(glPixelTransformParameterfEXT)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTransformParameterivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTransformParameterivEXT GL_ENTRYPOINT(glPixelTransformParameterivEXT)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTransformParameterfvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTransformParameterfvEXT GL_ENTRYPOINT(glPixelTransformParameterfvEXT)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPixelTransformParameterivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPixelTransformParameterivEXT GL_ENTRYPOINT(glGetPixelTransformParameterivEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPixelTransformParameterfvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPixelTransformParameterfvEXT GL_ENTRYPOINT(glGetPixelTransformParameterfvEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3bEXT \
   GLbyte red = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte green = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte blue = trace_packet.get_param_value<GLbyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3bEXT GL_ENTRYPOINT(glSecondaryColor3bEXT)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3bvEXT \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3bvEXT GL_ENTRYPOINT(glSecondaryColor3bvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3dEXT \
   GLdouble red = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble green = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble blue = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3dEXT GL_ENTRYPOINT(glSecondaryColor3dEXT)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3dvEXT \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3dvEXT GL_ENTRYPOINT(glSecondaryColor3dvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3fEXT \
   GLfloat red = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat green = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat blue = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3fEXT GL_ENTRYPOINT(glSecondaryColor3fEXT)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3fvEXT \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3fvEXT GL_ENTRYPOINT(glSecondaryColor3fvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3iEXT \
   GLint red = trace_packet.get_param_value<GLint>(0); \
   GLint green = trace_packet.get_param_value<GLint>(1); \
   GLint blue = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3iEXT GL_ENTRYPOINT(glSecondaryColor3iEXT)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3ivEXT \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3ivEXT GL_ENTRYPOINT(glSecondaryColor3ivEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3sEXT \
   GLshort red = trace_packet.get_param_value<GLshort>(0); \
   GLshort green = trace_packet.get_param_value<GLshort>(1); \
   GLshort blue = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3sEXT GL_ENTRYPOINT(glSecondaryColor3sEXT)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3svEXT \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3svEXT GL_ENTRYPOINT(glSecondaryColor3svEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3ubEXT \
   GLubyte red = trace_packet.get_param_value<GLubyte>(0); \
   GLubyte green = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte blue = trace_packet.get_param_value<GLubyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3ubEXT GL_ENTRYPOINT(glSecondaryColor3ubEXT)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3ubvEXT \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3ubvEXT GL_ENTRYPOINT(glSecondaryColor3ubvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3uiEXT \
   GLuint red = trace_packet.get_param_value<GLuint>(0); \
   GLuint green = trace_packet.get_param_value<GLuint>(1); \
   GLuint blue = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3uiEXT GL_ENTRYPOINT(glSecondaryColor3uiEXT)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3uivEXT \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3uivEXT GL_ENTRYPOINT(glSecondaryColor3uivEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3usEXT \
   GLushort red = trace_packet.get_param_value<GLushort>(0); \
   GLushort green = trace_packet.get_param_value<GLushort>(1); \
   GLushort blue = trace_packet.get_param_value<GLushort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3usEXT GL_ENTRYPOINT(glSecondaryColor3usEXT)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3usvEXT \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3usvEXT GL_ENTRYPOINT(glSecondaryColor3usvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColorPointerEXT \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColorPointerEXT GL_ENTRYPOINT(glSecondaryColorPointerEXT)(size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureNormalEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureNormalEXT GL_ENTRYPOINT(glTextureNormalEXT)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawArraysEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_first = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawArraysEXT GL_ENTRYPOINT(glMultiDrawArraysEXT)(mode, pTrace_first, pTrace_count, primcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawElementsEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid* * pTrace_indices = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawElementsEXT GL_ENTRYPOINT(glMultiDrawElementsEXT)(mode, pTrace_count, type, pTrace_indices, primcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordfEXT \
   GLfloat coord = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordfEXT GL_ENTRYPOINT(glFogCoordfEXT)(coord)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordfvEXT \
   const GLfloat * pTrace_coord = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordfvEXT GL_ENTRYPOINT(glFogCoordfvEXT)(pTrace_coord)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoorddEXT \
   GLdouble coord = trace_packet.get_param_value<GLdouble>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoorddEXT GL_ENTRYPOINT(glFogCoorddEXT)(coord)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoorddvEXT \
   const GLdouble * pTrace_coord = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoorddvEXT GL_ENTRYPOINT(glFogCoorddvEXT)(pTrace_coord)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordPointerEXT \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordPointerEXT GL_ENTRYPOINT(glFogCoordPointerEXT)(type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3bEXT \
   GLbyte tx = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte ty = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte tz = trace_packet.get_param_value<GLbyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3bEXT GL_ENTRYPOINT(glTangent3bEXT)(tx, ty, tz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3bvEXT \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3bvEXT GL_ENTRYPOINT(glTangent3bvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3dEXT \
   GLdouble tx = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble ty = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble tz = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3dEXT GL_ENTRYPOINT(glTangent3dEXT)(tx, ty, tz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3dvEXT \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3dvEXT GL_ENTRYPOINT(glTangent3dvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3fEXT \
   GLfloat tx = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat ty = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat tz = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3fEXT GL_ENTRYPOINT(glTangent3fEXT)(tx, ty, tz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3fvEXT \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3fvEXT GL_ENTRYPOINT(glTangent3fvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3iEXT \
   GLint tx = trace_packet.get_param_value<GLint>(0); \
   GLint ty = trace_packet.get_param_value<GLint>(1); \
   GLint tz = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3iEXT GL_ENTRYPOINT(glTangent3iEXT)(tx, ty, tz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3ivEXT \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3ivEXT GL_ENTRYPOINT(glTangent3ivEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3sEXT \
   GLshort tx = trace_packet.get_param_value<GLshort>(0); \
   GLshort ty = trace_packet.get_param_value<GLshort>(1); \
   GLshort tz = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3sEXT GL_ENTRYPOINT(glTangent3sEXT)(tx, ty, tz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangent3svEXT \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTangent3svEXT GL_ENTRYPOINT(glTangent3svEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3bEXT \
   GLbyte bx = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte by = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte bz = trace_packet.get_param_value<GLbyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3bEXT GL_ENTRYPOINT(glBinormal3bEXT)(bx, by, bz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3bvEXT \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3bvEXT GL_ENTRYPOINT(glBinormal3bvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3dEXT \
   GLdouble bx = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble by = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble bz = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3dEXT GL_ENTRYPOINT(glBinormal3dEXT)(bx, by, bz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3dvEXT \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3dvEXT GL_ENTRYPOINT(glBinormal3dvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3fEXT \
   GLfloat bx = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat by = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat bz = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3fEXT GL_ENTRYPOINT(glBinormal3fEXT)(bx, by, bz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3fvEXT \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3fvEXT GL_ENTRYPOINT(glBinormal3fvEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3iEXT \
   GLint bx = trace_packet.get_param_value<GLint>(0); \
   GLint by = trace_packet.get_param_value<GLint>(1); \
   GLint bz = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3iEXT GL_ENTRYPOINT(glBinormal3iEXT)(bx, by, bz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3ivEXT \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3ivEXT GL_ENTRYPOINT(glBinormal3ivEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3sEXT \
   GLshort bx = trace_packet.get_param_value<GLshort>(0); \
   GLshort by = trace_packet.get_param_value<GLshort>(1); \
   GLshort bz = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3sEXT GL_ENTRYPOINT(glBinormal3sEXT)(bx, by, bz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormal3svEXT \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormal3svEXT GL_ENTRYPOINT(glBinormal3svEXT)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTangentPointerEXT \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTangentPointerEXT GL_ENTRYPOINT(glTangentPointerEXT)(type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBinormalPointerEXT \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glBinormalPointerEXT GL_ENTRYPOINT(glBinormalPointerEXT)(type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFinishTextureSUNX  

#define VOGL_REPLAY_CALL_GL_HELPER_glFinishTextureSUNX GL_ENTRYPOINT(glFinishTextureSUNX)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGlobalAlphaFactorbSUN \
   GLbyte factor = trace_packet.get_param_value<GLbyte>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGlobalAlphaFactorbSUN GL_ENTRYPOINT(glGlobalAlphaFactorbSUN)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGlobalAlphaFactorsSUN \
   GLshort factor = trace_packet.get_param_value<GLshort>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGlobalAlphaFactorsSUN GL_ENTRYPOINT(glGlobalAlphaFactorsSUN)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGlobalAlphaFactoriSUN \
   GLint factor = trace_packet.get_param_value<GLint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGlobalAlphaFactoriSUN GL_ENTRYPOINT(glGlobalAlphaFactoriSUN)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGlobalAlphaFactorfSUN \
   GLfloat factor = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGlobalAlphaFactorfSUN GL_ENTRYPOINT(glGlobalAlphaFactorfSUN)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGlobalAlphaFactordSUN \
   GLdouble factor = trace_packet.get_param_value<GLdouble>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGlobalAlphaFactordSUN GL_ENTRYPOINT(glGlobalAlphaFactordSUN)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGlobalAlphaFactorubSUN \
   GLubyte factor = trace_packet.get_param_value<GLubyte>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGlobalAlphaFactorubSUN GL_ENTRYPOINT(glGlobalAlphaFactorubSUN)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGlobalAlphaFactorusSUN \
   GLushort factor = trace_packet.get_param_value<GLushort>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGlobalAlphaFactorusSUN GL_ENTRYPOINT(glGlobalAlphaFactorusSUN)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGlobalAlphaFactoruiSUN \
   GLuint factor = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGlobalAlphaFactoruiSUN GL_ENTRYPOINT(glGlobalAlphaFactoruiSUN)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiSUN \
   GLuint code = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiSUN GL_ENTRYPOINT(glReplacementCodeuiSUN)(code)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeusSUN \
   GLushort code = trace_packet.get_param_value<GLushort>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeusSUN GL_ENTRYPOINT(glReplacementCodeusSUN)(code)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeubSUN \
   GLubyte code = trace_packet.get_param_value<GLubyte>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeubSUN GL_ENTRYPOINT(glReplacementCodeubSUN)(code)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuivSUN \
   const GLuint * pTrace_code = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuivSUN GL_ENTRYPOINT(glReplacementCodeuivSUN)(pTrace_code)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeusvSUN \
   const GLushort * pTrace_code = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeusvSUN GL_ENTRYPOINT(glReplacementCodeusvSUN)(pTrace_code)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeubvSUN \
   const GLubyte * pTrace_code = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeubvSUN GL_ENTRYPOINT(glReplacementCodeubvSUN)(pTrace_code)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodePointerSUN \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodePointerSUN GL_ENTRYPOINT(glReplacementCodePointerSUN)(type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4ubVertex2fSUN \
   GLubyte r = trace_packet.get_param_value<GLubyte>(0); \
   GLubyte g = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte b = trace_packet.get_param_value<GLubyte>(2); \
   GLubyte a = trace_packet.get_param_value<GLubyte>(3); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4ubVertex2fSUN GL_ENTRYPOINT(glColor4ubVertex2fSUN)(r, g, b, a, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4ubVertex2fvSUN \
   const GLubyte * pTrace_c = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4ubVertex2fvSUN GL_ENTRYPOINT(glColor4ubVertex2fvSUN)(pTrace_c, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4ubVertex3fSUN \
   GLubyte r = trace_packet.get_param_value<GLubyte>(0); \
   GLubyte g = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte b = trace_packet.get_param_value<GLubyte>(2); \
   GLubyte a = trace_packet.get_param_value<GLubyte>(3); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4ubVertex3fSUN GL_ENTRYPOINT(glColor4ubVertex3fSUN)(r, g, b, a, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4ubVertex3fvSUN \
   const GLubyte * pTrace_c = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4ubVertex3fvSUN GL_ENTRYPOINT(glColor4ubVertex3fvSUN)(pTrace_c, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3fVertex3fSUN \
   GLfloat r = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat g = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3fVertex3fSUN GL_ENTRYPOINT(glColor3fVertex3fSUN)(r, g, b, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3fVertex3fvSUN \
   const GLfloat * pTrace_c = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3fVertex3fvSUN GL_ENTRYPOINT(glColor3fVertex3fvSUN)(pTrace_c, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3fVertex3fSUN \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3fVertex3fSUN GL_ENTRYPOINT(glNormal3fVertex3fSUN)(nx, ny, nz, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3fVertex3fvSUN \
   const GLfloat * pTrace_n = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3fVertex3fvSUN GL_ENTRYPOINT(glNormal3fVertex3fvSUN)(pTrace_n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4fNormal3fVertex3fSUN \
   GLfloat r = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat g = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat a = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(7); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(8); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(9);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4fNormal3fVertex3fSUN GL_ENTRYPOINT(glColor4fNormal3fVertex3fSUN)(r, g, b, a, nx, ny, nz, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4fNormal3fVertex3fvSUN \
   const GLfloat * pTrace_c = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_n = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4fNormal3fVertex3fvSUN GL_ENTRYPOINT(glColor4fNormal3fVertex3fvSUN)(pTrace_c, pTrace_n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fVertex3fSUN \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fVertex3fSUN GL_ENTRYPOINT(glTexCoord2fVertex3fSUN)(s, t, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fVertex3fvSUN \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fVertex3fvSUN GL_ENTRYPOINT(glTexCoord2fVertex3fvSUN)(pTrace_tc, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4fVertex4fSUN \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat p = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat q = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4fVertex4fSUN GL_ENTRYPOINT(glTexCoord4fVertex4fSUN)(s, t, p, q, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4fVertex4fvSUN \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4fVertex4fvSUN GL_ENTRYPOINT(glTexCoord4fVertex4fvSUN)(pTrace_tc, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fColor4ubVertex3fSUN \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1); \
   GLubyte r = trace_packet.get_param_value<GLubyte>(2); \
   GLubyte g = trace_packet.get_param_value<GLubyte>(3); \
   GLubyte b = trace_packet.get_param_value<GLubyte>(4); \
   GLubyte a = trace_packet.get_param_value<GLubyte>(5); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(7); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fColor4ubVertex3fSUN GL_ENTRYPOINT(glTexCoord2fColor4ubVertex3fSUN)(s, t, r, g, b, a, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fColor4ubVertex3fvSUN \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLubyte * pTrace_c = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fColor4ubVertex3fvSUN GL_ENTRYPOINT(glTexCoord2fColor4ubVertex3fvSUN)(pTrace_tc, pTrace_c, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fColor3fVertex3fSUN \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat g = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fColor3fVertex3fSUN GL_ENTRYPOINT(glTexCoord2fColor3fVertex3fSUN)(s, t, r, g, b, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fColor3fVertex3fvSUN \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_c = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fColor3fVertex3fvSUN GL_ENTRYPOINT(glTexCoord2fColor3fVertex3fvSUN)(pTrace_tc, pTrace_c, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fNormal3fVertex3fSUN \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fNormal3fVertex3fSUN GL_ENTRYPOINT(glTexCoord2fNormal3fVertex3fSUN)(s, t, nx, ny, nz, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fNormal3fVertex3fvSUN \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_n = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fNormal3fVertex3fvSUN GL_ENTRYPOINT(glTexCoord2fNormal3fVertex3fvSUN)(pTrace_tc, pTrace_n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fColor4fNormal3fVertex3fSUN \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat g = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat a = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(7); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(8); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(9); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(10); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(11);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fColor4fNormal3fVertex3fSUN GL_ENTRYPOINT(glTexCoord2fColor4fNormal3fVertex3fSUN)(s, t, r, g, b, a, nx, ny, nz, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2fColor4fNormal3fVertex3fvSUN \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_c = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_n = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2fColor4fNormal3fVertex3fvSUN GL_ENTRYPOINT(glTexCoord2fColor4fNormal3fVertex3fvSUN)(pTrace_tc, pTrace_c, pTrace_n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4fColor4fNormal3fVertex4fSUN \
   GLfloat s = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat p = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat q = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat g = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat a = trace_packet.get_param_value<GLfloat>(7); \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(8); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(9); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(10); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(11); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(12); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(13); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(14);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4fColor4fNormal3fVertex4fSUN GL_ENTRYPOINT(glTexCoord4fColor4fNormal3fVertex4fSUN)(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4fColor4fNormal3fVertex4fvSUN \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_c = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_n = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4fColor4fNormal3fVertex4fvSUN GL_ENTRYPOINT(glTexCoord4fColor4fNormal3fVertex4fvSUN)(pTrace_tc, pTrace_c, pTrace_n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiVertex3fSUN \
   GLuint rc = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiVertex3fSUN GL_ENTRYPOINT(glReplacementCodeuiVertex3fSUN)(rc, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiVertex3fvSUN \
   const GLuint * pTrace_rc = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiVertex3fvSUN GL_ENTRYPOINT(glReplacementCodeuiVertex3fvSUN)(pTrace_rc, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiColor4ubVertex3fSUN \
   GLuint rc = trace_packet.get_param_value<GLuint>(0); \
   GLubyte r = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte g = trace_packet.get_param_value<GLubyte>(2); \
   GLubyte b = trace_packet.get_param_value<GLubyte>(3); \
   GLubyte a = trace_packet.get_param_value<GLubyte>(4); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiColor4ubVertex3fSUN GL_ENTRYPOINT(glReplacementCodeuiColor4ubVertex3fSUN)(rc, r, g, b, a, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiColor4ubVertex3fvSUN \
   const GLuint * pTrace_rc = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLubyte * pTrace_c = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiColor4ubVertex3fvSUN GL_ENTRYPOINT(glReplacementCodeuiColor4ubVertex3fvSUN)(pTrace_rc, pTrace_c, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiColor3fVertex3fSUN \
   GLuint rc = trace_packet.get_param_value<GLuint>(0); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat g = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiColor3fVertex3fSUN GL_ENTRYPOINT(glReplacementCodeuiColor3fVertex3fSUN)(rc, r, g, b, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiColor3fVertex3fvSUN \
   const GLuint * pTrace_rc = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_c = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiColor3fVertex3fvSUN GL_ENTRYPOINT(glReplacementCodeuiColor3fVertex3fvSUN)(pTrace_rc, pTrace_c, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiNormal3fVertex3fSUN \
   GLuint rc = trace_packet.get_param_value<GLuint>(0); \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiNormal3fVertex3fSUN GL_ENTRYPOINT(glReplacementCodeuiNormal3fVertex3fSUN)(rc, nx, ny, nz, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiNormal3fVertex3fvSUN \
   const GLuint * pTrace_rc = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_n = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiNormal3fVertex3fvSUN GL_ENTRYPOINT(glReplacementCodeuiNormal3fVertex3fvSUN)(pTrace_rc, pTrace_n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiColor4fNormal3fVertex3fSUN \
   GLuint rc = trace_packet.get_param_value<GLuint>(0); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat g = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat a = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(7); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(8); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(9); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(10);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiColor4fNormal3fVertex3fSUN GL_ENTRYPOINT(glReplacementCodeuiColor4fNormal3fVertex3fSUN)(rc, r, g, b, a, nx, ny, nz, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiColor4fNormal3fVertex3fvSUN \
   const GLuint * pTrace_rc = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_c = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_n = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiColor4fNormal3fVertex3fvSUN GL_ENTRYPOINT(glReplacementCodeuiColor4fNormal3fVertex3fvSUN)(pTrace_rc, pTrace_c, pTrace_n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiTexCoord2fVertex3fSUN \
   GLuint rc = trace_packet.get_param_value<GLuint>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiTexCoord2fVertex3fSUN GL_ENTRYPOINT(glReplacementCodeuiTexCoord2fVertex3fSUN)(rc, s, t, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiTexCoord2fVertex3fvSUN \
   const GLuint * pTrace_rc = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiTexCoord2fVertex3fvSUN GL_ENTRYPOINT(glReplacementCodeuiTexCoord2fVertex3fvSUN)(pTrace_rc, pTrace_tc, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN \
   GLuint rc = trace_packet.get_param_value<GLuint>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(7); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN GL_ENTRYPOINT(glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)(rc, s, t, nx, ny, nz, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN \
   const GLuint * pTrace_rc = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_n = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN GL_ENTRYPOINT(glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)(pTrace_rc, pTrace_tc, pTrace_n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN \
   GLuint rc = trace_packet.get_param_value<GLuint>(0); \
   GLfloat s = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat g = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat a = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(7); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(8); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(9); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(10); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(11); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(12);

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN GL_ENTRYPOINT(glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN \
   const GLuint * pTrace_rc = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfloat * pTrace_tc = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfloat * pTrace_c = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLfloat * pTrace_n = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN GL_ENTRYPOINT(glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)(pTrace_rc, pTrace_tc, pTrace_c, pTrace_n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFuncSeparateEXT \
   GLenum sfactorRGB = trace_packet.get_param_value<GLenum>(0); \
   GLenum dfactorRGB = trace_packet.get_param_value<GLenum>(1); \
   GLenum sfactorAlpha = trace_packet.get_param_value<GLenum>(2); \
   GLenum dfactorAlpha = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFuncSeparateEXT GL_ENTRYPOINT(glBlendFuncSeparateEXT)(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFuncSeparateINGR \
   GLenum sfactorRGB = trace_packet.get_param_value<GLenum>(0); \
   GLenum dfactorRGB = trace_packet.get_param_value<GLenum>(1); \
   GLenum sfactorAlpha = trace_packet.get_param_value<GLenum>(2); \
   GLenum dfactorAlpha = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFuncSeparateINGR GL_ENTRYPOINT(glBlendFuncSeparateINGR)(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexWeightfEXT \
   GLfloat weight = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexWeightfEXT GL_ENTRYPOINT(glVertexWeightfEXT)(weight)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexWeightfvEXT \
   const GLfloat * pTrace_weight = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexWeightfvEXT GL_ENTRYPOINT(glVertexWeightfvEXT)(pTrace_weight)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexWeightPointerEXT \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexWeightPointerEXT GL_ENTRYPOINT(glVertexWeightPointerEXT)(size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFlushVertexArrayRangeNV  

#define VOGL_REPLAY_CALL_GL_HELPER_glFlushVertexArrayRangeNV GL_ENTRYPOINT(glFlushVertexArrayRangeNV)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayRangeNV \
   GLsizei length = trace_packet.get_param_value<GLsizei>(0); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayRangeNV GL_ENTRYPOINT(glVertexArrayRangeNV)(length, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCombinerParameterfvNV \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glCombinerParameterfvNV GL_ENTRYPOINT(glCombinerParameterfvNV)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCombinerParameterfNV \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glCombinerParameterfNV GL_ENTRYPOINT(glCombinerParameterfNV)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCombinerParameterivNV \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glCombinerParameterivNV GL_ENTRYPOINT(glCombinerParameterivNV)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCombinerParameteriNV \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glCombinerParameteriNV GL_ENTRYPOINT(glCombinerParameteriNV)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCombinerInputNV \
   GLenum stage = trace_packet.get_param_value<GLenum>(0); \
   GLenum portion = trace_packet.get_param_value<GLenum>(1); \
   GLenum variable = trace_packet.get_param_value<GLenum>(2); \
   GLenum input = trace_packet.get_param_value<GLenum>(3); \
   GLenum mapping = trace_packet.get_param_value<GLenum>(4); \
   GLenum componentUsage = trace_packet.get_param_value<GLenum>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glCombinerInputNV GL_ENTRYPOINT(glCombinerInputNV)(stage, portion, variable, input, mapping, componentUsage)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCombinerOutputNV \
   GLenum stage = trace_packet.get_param_value<GLenum>(0); \
   GLenum portion = trace_packet.get_param_value<GLenum>(1); \
   GLenum abOutput = trace_packet.get_param_value<GLenum>(2); \
   GLenum cdOutput = trace_packet.get_param_value<GLenum>(3); \
   GLenum sumOutput = trace_packet.get_param_value<GLenum>(4); \
   GLenum scale = trace_packet.get_param_value<GLenum>(5); \
   GLenum bias = trace_packet.get_param_value<GLenum>(6); \
   GLboolean abDotProduct = trace_packet.get_param_value<GLboolean>(7); \
   GLboolean cdDotProduct = trace_packet.get_param_value<GLboolean>(8); \
   GLboolean muxSum = trace_packet.get_param_value<GLboolean>(9);

#define VOGL_REPLAY_CALL_GL_HELPER_glCombinerOutputNV GL_ENTRYPOINT(glCombinerOutputNV)(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFinalCombinerInputNV \
   GLenum variable = trace_packet.get_param_value<GLenum>(0); \
   GLenum input = trace_packet.get_param_value<GLenum>(1); \
   GLenum mapping = trace_packet.get_param_value<GLenum>(2); \
   GLenum componentUsage = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glFinalCombinerInputNV GL_ENTRYPOINT(glFinalCombinerInputNV)(variable, input, mapping, componentUsage)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetCombinerInputParameterfvNV \
   GLenum stage = trace_packet.get_param_value<GLenum>(0); \
   GLenum portion = trace_packet.get_param_value<GLenum>(1); \
   GLenum variable = trace_packet.get_param_value<GLenum>(2); \
   GLenum pname = trace_packet.get_param_value<GLenum>(3); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetCombinerInputParameterfvNV GL_ENTRYPOINT(glGetCombinerInputParameterfvNV)(stage, portion, variable, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetCombinerInputParameterivNV \
   GLenum stage = trace_packet.get_param_value<GLenum>(0); \
   GLenum portion = trace_packet.get_param_value<GLenum>(1); \
   GLenum variable = trace_packet.get_param_value<GLenum>(2); \
   GLenum pname = trace_packet.get_param_value<GLenum>(3); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetCombinerInputParameterivNV GL_ENTRYPOINT(glGetCombinerInputParameterivNV)(stage, portion, variable, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetCombinerOutputParameterfvNV \
   GLenum stage = trace_packet.get_param_value<GLenum>(0); \
   GLenum portion = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetCombinerOutputParameterfvNV GL_ENTRYPOINT(glGetCombinerOutputParameterfvNV)(stage, portion, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetCombinerOutputParameterivNV \
   GLenum stage = trace_packet.get_param_value<GLenum>(0); \
   GLenum portion = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetCombinerOutputParameterivNV GL_ENTRYPOINT(glGetCombinerOutputParameterivNV)(stage, portion, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFinalCombinerInputParameterfvNV \
   GLenum variable = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFinalCombinerInputParameterfvNV GL_ENTRYPOINT(glGetFinalCombinerInputParameterfvNV)(variable, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFinalCombinerInputParameterivNV \
   GLenum variable = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFinalCombinerInputParameterivNV GL_ENTRYPOINT(glGetFinalCombinerInputParameterivNV)(variable, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glResizeBuffersMESA  

#define VOGL_REPLAY_CALL_GL_HELPER_glResizeBuffersMESA GL_ENTRYPOINT(glResizeBuffersMESA)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2dMESA \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2dMESA GL_ENTRYPOINT(glWindowPos2dMESA)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2dvMESA \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2dvMESA GL_ENTRYPOINT(glWindowPos2dvMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2fMESA \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2fMESA GL_ENTRYPOINT(glWindowPos2fMESA)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2fvMESA \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2fvMESA GL_ENTRYPOINT(glWindowPos2fvMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2iMESA \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2iMESA GL_ENTRYPOINT(glWindowPos2iMESA)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2ivMESA \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2ivMESA GL_ENTRYPOINT(glWindowPos2ivMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2sMESA \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2sMESA GL_ENTRYPOINT(glWindowPos2sMESA)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos2svMESA \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos2svMESA GL_ENTRYPOINT(glWindowPos2svMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3dMESA \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3dMESA GL_ENTRYPOINT(glWindowPos3dMESA)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3dvMESA \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3dvMESA GL_ENTRYPOINT(glWindowPos3dvMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3fMESA \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3fMESA GL_ENTRYPOINT(glWindowPos3fMESA)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3fvMESA \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3fvMESA GL_ENTRYPOINT(glWindowPos3fvMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3iMESA \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLint z = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3iMESA GL_ENTRYPOINT(glWindowPos3iMESA)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3ivMESA \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3ivMESA GL_ENTRYPOINT(glWindowPos3ivMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3sMESA \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1); \
   GLshort z = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3sMESA GL_ENTRYPOINT(glWindowPos3sMESA)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos3svMESA \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos3svMESA GL_ENTRYPOINT(glWindowPos3svMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos4dMESA \
   GLdouble x = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos4dMESA GL_ENTRYPOINT(glWindowPos4dMESA)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos4dvMESA \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos4dvMESA GL_ENTRYPOINT(glWindowPos4dvMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos4fMESA \
   GLfloat x = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos4fMESA GL_ENTRYPOINT(glWindowPos4fMESA)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos4fvMESA \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos4fvMESA GL_ENTRYPOINT(glWindowPos4fvMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos4iMESA \
   GLint x = trace_packet.get_param_value<GLint>(0); \
   GLint y = trace_packet.get_param_value<GLint>(1); \
   GLint z = trace_packet.get_param_value<GLint>(2); \
   GLint w = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos4iMESA GL_ENTRYPOINT(glWindowPos4iMESA)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos4ivMESA \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos4ivMESA GL_ENTRYPOINT(glWindowPos4ivMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos4sMESA \
   GLshort x = trace_packet.get_param_value<GLshort>(0); \
   GLshort y = trace_packet.get_param_value<GLshort>(1); \
   GLshort z = trace_packet.get_param_value<GLshort>(2); \
   GLshort w = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos4sMESA GL_ENTRYPOINT(glWindowPos4sMESA)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWindowPos4svMESA \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glWindowPos4svMESA GL_ENTRYPOINT(glWindowPos4svMESA)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiModeDrawArraysIBM \
   const GLenum * pTrace_mode = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLint * pTrace_first = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(3); \
   GLint modestride = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiModeDrawArraysIBM GL_ENTRYPOINT(glMultiModeDrawArraysIBM)(pTrace_mode, pTrace_first, pTrace_count, primcount, modestride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiModeDrawElementsIBM \
   const GLenum * pTrace_mode = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid* const * pTrace_indices = reinterpret_cast<const GLvoid* const *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(4); \
   GLint modestride = trace_packet.get_param_value<GLint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiModeDrawElementsIBM GL_ENTRYPOINT(glMultiModeDrawElementsIBM)(pTrace_mode, pTrace_count, type, pReplay_indices, primcount, modestride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorPointerListIBM \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLint stride = trace_packet.get_param_value<GLint>(2); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLint ptrstride = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorPointerListIBM GL_ENTRYPOINT(glColorPointerListIBM)(size, type, stride, pTrace_pointer, ptrstride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColorPointerListIBM \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLint stride = trace_packet.get_param_value<GLint>(2); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLint ptrstride = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColorPointerListIBM GL_ENTRYPOINT(glSecondaryColorPointerListIBM)(size, type, stride, pTrace_pointer, ptrstride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEdgeFlagPointerListIBM \
   GLint stride = trace_packet.get_param_value<GLint>(0); \
   const GLboolean* * pTrace_pointer = reinterpret_cast<const GLboolean* *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLint ptrstride = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glEdgeFlagPointerListIBM GL_ENTRYPOINT(glEdgeFlagPointerListIBM)(stride, pTrace_pointer, ptrstride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordPointerListIBM \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLint stride = trace_packet.get_param_value<GLint>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLint ptrstride = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordPointerListIBM GL_ENTRYPOINT(glFogCoordPointerListIBM)(type, stride, pTrace_pointer, ptrstride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexPointerListIBM \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLint stride = trace_packet.get_param_value<GLint>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLint ptrstride = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexPointerListIBM GL_ENTRYPOINT(glIndexPointerListIBM)(type, stride, pTrace_pointer, ptrstride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalPointerListIBM \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLint stride = trace_packet.get_param_value<GLint>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLint ptrstride = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalPointerListIBM GL_ENTRYPOINT(glNormalPointerListIBM)(type, stride, pTrace_pointer, ptrstride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordPointerListIBM \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLint stride = trace_packet.get_param_value<GLint>(2); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLint ptrstride = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordPointerListIBM GL_ENTRYPOINT(glTexCoordPointerListIBM)(size, type, stride, pTrace_pointer, ptrstride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexPointerListIBM \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLint stride = trace_packet.get_param_value<GLint>(2); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLint ptrstride = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexPointerListIBM GL_ENTRYPOINT(glVertexPointerListIBM)(size, type, stride, pTrace_pointer, ptrstride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTbufferMask3DFX \
   GLuint mask = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTbufferMask3DFX GL_ENTRYPOINT(glTbufferMask3DFX)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSampleMaskEXT \
   GLclampf value = trace_packet.get_param_value<GLclampf>(0); \
   GLboolean invert = trace_packet.get_param_value<GLboolean>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSampleMaskEXT GL_ENTRYPOINT(glSampleMaskEXT)(value, invert)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSamplePatternEXT \
   GLenum pattern = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glSamplePatternEXT GL_ENTRYPOINT(glSamplePatternEXT)(pattern)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureColorMaskSGIS \
   GLboolean red = trace_packet.get_param_value<GLboolean>(0); \
   GLboolean green = trace_packet.get_param_value<GLboolean>(1); \
   GLboolean blue = trace_packet.get_param_value<GLboolean>(2); \
   GLboolean alpha = trace_packet.get_param_value<GLboolean>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureColorMaskSGIS GL_ENTRYPOINT(glTextureColorMaskSGIS)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIglooInterfaceSGIX \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLvoid * pTrace_params = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glIglooInterfaceSGIX GL_ENTRYPOINT(glIglooInterfaceSGIX)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteFencesNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_fences = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteFencesNV GL_ENTRYPOINT(glDeleteFencesNV)(n, pTrace_fences)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenFencesNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_fences = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenFencesNV GL_ENTRYPOINT(glGenFencesNV)(n, pReplay_fences)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsFenceNV \
   GLuint fence = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsFenceNV GL_ENTRYPOINT(glIsFenceNV)(fence)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTestFenceNV \
   GLuint fence = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTestFenceNV GL_ENTRYPOINT(glTestFenceNV)(fence)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFenceivNV \
   GLuint fence = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFenceivNV GL_ENTRYPOINT(glGetFenceivNV)(fence, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFinishFenceNV \
   GLuint fence = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFinishFenceNV GL_ENTRYPOINT(glFinishFenceNV)(fence)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSetFenceNV \
   GLuint fence = trace_packet.get_param_value<GLuint>(0); \
   GLenum condition = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSetFenceNV GL_ENTRYPOINT(glSetFenceNV)(fence, condition)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFlushStaticDataIBM \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFlushStaticDataIBM GL_ENTRYPOINT(glFlushStaticDataIBM)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapControlPointsNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei ustride = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei vstride = trace_packet.get_param_value<GLsizei>(4); \
   GLint uorder = trace_packet.get_param_value<GLint>(5); \
   GLint vorder = trace_packet.get_param_value<GLint>(6); \
   GLboolean packed = trace_packet.get_param_value<GLboolean>(7); \
   const GLvoid * pTrace_points = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glMapControlPointsNV GL_ENTRYPOINT(glMapControlPointsNV)(target, index, type, ustride, vstride, uorder, vorder, packed, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapParameterivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glMapParameterivNV GL_ENTRYPOINT(glMapParameterivNV)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapParameterfvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glMapParameterfvNV GL_ENTRYPOINT(glMapParameterfvNV)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMapControlPointsNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei ustride = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei vstride = trace_packet.get_param_value<GLsizei>(4); \
   GLboolean packed = trace_packet.get_param_value<GLboolean>(5); \
   const GLvoid * pTrace_points = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMapControlPointsNV GL_ENTRYPOINT(glGetMapControlPointsNV)(target, index, type, ustride, vstride, packed, pReplay_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMapParameterivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMapParameterivNV GL_ENTRYPOINT(glGetMapParameterivNV)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMapParameterfvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMapParameterfvNV GL_ENTRYPOINT(glGetMapParameterfvNV)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMapAttribParameterivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMapAttribParameterivNV GL_ENTRYPOINT(glGetMapAttribParameterivNV)(target, index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMapAttribParameterfvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMapAttribParameterfvNV GL_ENTRYPOINT(glGetMapAttribParameterfvNV)(target, index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalMapsNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalMapsNV GL_ENTRYPOINT(glEvalMapsNV)(target, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCombinerStageParameterfvNV \
   GLenum stage = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glCombinerStageParameterfvNV GL_ENTRYPOINT(glCombinerStageParameterfvNV)(stage, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetCombinerStageParameterfvNV \
   GLenum stage = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetCombinerStageParameterfvNV GL_ENTRYPOINT(glGetCombinerStageParameterfvNV)(stage, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAreProgramsResidentNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_programs = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLboolean * pTrace_residences = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glAreProgramsResidentNV GL_ENTRYPOINT(glAreProgramsResidentNV)(n, pTrace_programs, pReplay_residences)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindProgramNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindProgramNV GL_ENTRYPOINT(glBindProgramNV)(target, id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteProgramsNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_programs = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteProgramsNV GL_ENTRYPOINT(glDeleteProgramsNV)(n, pTrace_programs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glExecuteProgramNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glExecuteProgramNV GL_ENTRYPOINT(glExecuteProgramNV)(target, id, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenProgramsNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_programs = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenProgramsNV GL_ENTRYPOINT(glGenProgramsNV)(n, pReplay_programs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramParameterdvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramParameterdvNV GL_ENTRYPOINT(glGetProgramParameterdvNV)(target, index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramParameterfvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramParameterfvNV GL_ENTRYPOINT(glGetProgramParameterfvNV)(target, index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramivNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramivNV GL_ENTRYPOINT(glGetProgramivNV)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramStringNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLubyte * pTrace_program = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramStringNV GL_ENTRYPOINT(glGetProgramStringNV)(id, pname, pReplay_program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTrackMatrixivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint address = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTrackMatrixivNV GL_ENTRYPOINT(glGetTrackMatrixivNV)(target, address, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribdvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribdvNV GL_ENTRYPOINT(glGetVertexAttribdvNV)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribfvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribfvNV GL_ENTRYPOINT(glGetVertexAttribfvNV)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribivNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribivNV GL_ENTRYPOINT(glGetVertexAttribivNV)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribPointervNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_pointer = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribPointervNV GL_ENTRYPOINT(glGetVertexAttribPointervNV)(index, pname, pReplay_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsProgramNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsProgramNV GL_ENTRYPOINT(glIsProgramNV)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadProgramNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1); \
   GLsizei len = trace_packet.get_param_value<GLsizei>(2); \
   const GLubyte * pTrace_program = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadProgramNV GL_ENTRYPOINT(glLoadProgramNV)(target, id, len, pTrace_program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramParameter4dNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramParameter4dNV GL_ENTRYPOINT(glProgramParameter4dNV)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramParameter4dvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramParameter4dvNV GL_ENTRYPOINT(glProgramParameter4dvNV)(target, index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramParameter4fNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramParameter4fNV GL_ENTRYPOINT(glProgramParameter4fNV)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramParameter4fvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramParameter4fvNV GL_ENTRYPOINT(glProgramParameter4fvNV)(target, index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramParameters4dvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramParameters4dvNV GL_ENTRYPOINT(glProgramParameters4dvNV)(target, index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramParameters4fvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramParameters4fvNV GL_ENTRYPOINT(glProgramParameters4fvNV)(target, index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRequestResidentProgramsNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_programs = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glRequestResidentProgramsNV GL_ENTRYPOINT(glRequestResidentProgramsNV)(n, pTrace_programs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTrackMatrixNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint address = trace_packet.get_param_value<GLuint>(1); \
   GLenum matrix = trace_packet.get_param_value<GLenum>(2); \
   GLenum transform = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTrackMatrixNV GL_ENTRYPOINT(glTrackMatrixNV)(target, address, matrix, transform)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribPointerNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint fsize = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribPointerNV GL_ENTRYPOINT(glVertexAttribPointerNV)(index, fsize, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1dNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1dNV GL_ENTRYPOINT(glVertexAttrib1dNV)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1dvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1dvNV GL_ENTRYPOINT(glVertexAttrib1dvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1fNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1fNV GL_ENTRYPOINT(glVertexAttrib1fNV)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1fvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1fvNV GL_ENTRYPOINT(glVertexAttrib1fvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1sNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1sNV GL_ENTRYPOINT(glVertexAttrib1sNV)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1svNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1svNV GL_ENTRYPOINT(glVertexAttrib1svNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2dNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2dNV GL_ENTRYPOINT(glVertexAttrib2dNV)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2dvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2dvNV GL_ENTRYPOINT(glVertexAttrib2dvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2fNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2fNV GL_ENTRYPOINT(glVertexAttrib2fNV)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2fvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2fvNV GL_ENTRYPOINT(glVertexAttrib2fvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2sNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2sNV GL_ENTRYPOINT(glVertexAttrib2sNV)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2svNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2svNV GL_ENTRYPOINT(glVertexAttrib2svNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3dNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3dNV GL_ENTRYPOINT(glVertexAttrib3dNV)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3dvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3dvNV GL_ENTRYPOINT(glVertexAttrib3dvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3fNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3fNV GL_ENTRYPOINT(glVertexAttrib3fNV)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3fvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3fvNV GL_ENTRYPOINT(glVertexAttrib3fvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3sNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2); \
   GLshort z = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3sNV GL_ENTRYPOINT(glVertexAttrib3sNV)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3svNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3svNV GL_ENTRYPOINT(glVertexAttrib3svNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4dNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4dNV GL_ENTRYPOINT(glVertexAttrib4dNV)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4dvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4dvNV GL_ENTRYPOINT(glVertexAttrib4dvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4fNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4fNV GL_ENTRYPOINT(glVertexAttrib4fNV)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4fvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4fvNV GL_ENTRYPOINT(glVertexAttrib4fvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4sNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2); \
   GLshort z = trace_packet.get_param_value<GLshort>(3); \
   GLshort w = trace_packet.get_param_value<GLshort>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4sNV GL_ENTRYPOINT(glVertexAttrib4sNV)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4svNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4svNV GL_ENTRYPOINT(glVertexAttrib4svNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4ubNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLubyte x = trace_packet.get_param_value<GLubyte>(1); \
   GLubyte y = trace_packet.get_param_value<GLubyte>(2); \
   GLubyte z = trace_packet.get_param_value<GLubyte>(3); \
   GLubyte w = trace_packet.get_param_value<GLubyte>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4ubNV GL_ENTRYPOINT(glVertexAttrib4ubNV)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4ubvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4ubvNV GL_ENTRYPOINT(glVertexAttrib4ubvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs1dvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs1dvNV GL_ENTRYPOINT(glVertexAttribs1dvNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs1fvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs1fvNV GL_ENTRYPOINT(glVertexAttribs1fvNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs1svNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs1svNV GL_ENTRYPOINT(glVertexAttribs1svNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs2dvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs2dvNV GL_ENTRYPOINT(glVertexAttribs2dvNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs2fvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs2fvNV GL_ENTRYPOINT(glVertexAttribs2fvNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs2svNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs2svNV GL_ENTRYPOINT(glVertexAttribs2svNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs3dvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs3dvNV GL_ENTRYPOINT(glVertexAttribs3dvNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs3fvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs3fvNV GL_ENTRYPOINT(glVertexAttribs3fvNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs3svNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs3svNV GL_ENTRYPOINT(glVertexAttribs3svNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs4dvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs4dvNV GL_ENTRYPOINT(glVertexAttribs4dvNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs4fvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs4fvNV GL_ENTRYPOINT(glVertexAttribs4fvNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs4svNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs4svNV GL_ENTRYPOINT(glVertexAttribs4svNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs4ubvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs4ubvNV GL_ENTRYPOINT(glVertexAttribs4ubvNV)(index, count, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexBumpParameterivATI \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_param = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexBumpParameterivATI GL_ENTRYPOINT(glTexBumpParameterivATI)(pname, pTrace_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexBumpParameterfvATI \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_param = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexBumpParameterfvATI GL_ENTRYPOINT(glTexBumpParameterfvATI)(pname, pTrace_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexBumpParameterivATI \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_param = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexBumpParameterivATI GL_ENTRYPOINT(glGetTexBumpParameterivATI)(pname, pReplay_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexBumpParameterfvATI \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_param = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexBumpParameterfvATI GL_ENTRYPOINT(glGetTexBumpParameterfvATI)(pname, pReplay_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenFragmentShadersATI \
   GLuint range = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenFragmentShadersATI GL_ENTRYPOINT(glGenFragmentShadersATI)(range)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindFragmentShaderATI \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindFragmentShaderATI GL_ENTRYPOINT(glBindFragmentShaderATI)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteFragmentShaderATI \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteFragmentShaderATI GL_ENTRYPOINT(glDeleteFragmentShaderATI)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginFragmentShaderATI  

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginFragmentShaderATI GL_ENTRYPOINT(glBeginFragmentShaderATI)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndFragmentShaderATI  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndFragmentShaderATI GL_ENTRYPOINT(glEndFragmentShaderATI)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPassTexCoordATI \
   GLuint dst = trace_packet.get_param_value<GLuint>(0); \
   GLuint coord = trace_packet.get_param_value<GLuint>(1); \
   GLenum swizzle = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glPassTexCoordATI GL_ENTRYPOINT(glPassTexCoordATI)(dst, coord, swizzle)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSampleMapATI \
   GLuint dst = trace_packet.get_param_value<GLuint>(0); \
   GLuint interp = trace_packet.get_param_value<GLuint>(1); \
   GLenum swizzle = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSampleMapATI GL_ENTRYPOINT(glSampleMapATI)(dst, interp, swizzle)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorFragmentOp1ATI \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLuint dst = trace_packet.get_param_value<GLuint>(1); \
   GLuint dstMask = trace_packet.get_param_value<GLuint>(2); \
   GLuint dstMod = trace_packet.get_param_value<GLuint>(3); \
   GLuint arg1 = trace_packet.get_param_value<GLuint>(4); \
   GLuint arg1Rep = trace_packet.get_param_value<GLuint>(5); \
   GLuint arg1Mod = trace_packet.get_param_value<GLuint>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorFragmentOp1ATI GL_ENTRYPOINT(glColorFragmentOp1ATI)(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorFragmentOp2ATI \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLuint dst = trace_packet.get_param_value<GLuint>(1); \
   GLuint dstMask = trace_packet.get_param_value<GLuint>(2); \
   GLuint dstMod = trace_packet.get_param_value<GLuint>(3); \
   GLuint arg1 = trace_packet.get_param_value<GLuint>(4); \
   GLuint arg1Rep = trace_packet.get_param_value<GLuint>(5); \
   GLuint arg1Mod = trace_packet.get_param_value<GLuint>(6); \
   GLuint arg2 = trace_packet.get_param_value<GLuint>(7); \
   GLuint arg2Rep = trace_packet.get_param_value<GLuint>(8); \
   GLuint arg2Mod = trace_packet.get_param_value<GLuint>(9);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorFragmentOp2ATI GL_ENTRYPOINT(glColorFragmentOp2ATI)(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorFragmentOp3ATI \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLuint dst = trace_packet.get_param_value<GLuint>(1); \
   GLuint dstMask = trace_packet.get_param_value<GLuint>(2); \
   GLuint dstMod = trace_packet.get_param_value<GLuint>(3); \
   GLuint arg1 = trace_packet.get_param_value<GLuint>(4); \
   GLuint arg1Rep = trace_packet.get_param_value<GLuint>(5); \
   GLuint arg1Mod = trace_packet.get_param_value<GLuint>(6); \
   GLuint arg2 = trace_packet.get_param_value<GLuint>(7); \
   GLuint arg2Rep = trace_packet.get_param_value<GLuint>(8); \
   GLuint arg2Mod = trace_packet.get_param_value<GLuint>(9); \
   GLuint arg3 = trace_packet.get_param_value<GLuint>(10); \
   GLuint arg3Rep = trace_packet.get_param_value<GLuint>(11); \
   GLuint arg3Mod = trace_packet.get_param_value<GLuint>(12);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorFragmentOp3ATI GL_ENTRYPOINT(glColorFragmentOp3ATI)(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAlphaFragmentOp1ATI \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLuint dst = trace_packet.get_param_value<GLuint>(1); \
   GLuint dstMod = trace_packet.get_param_value<GLuint>(2); \
   GLuint arg1 = trace_packet.get_param_value<GLuint>(3); \
   GLuint arg1Rep = trace_packet.get_param_value<GLuint>(4); \
   GLuint arg1Mod = trace_packet.get_param_value<GLuint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glAlphaFragmentOp1ATI GL_ENTRYPOINT(glAlphaFragmentOp1ATI)(op, dst, dstMod, arg1, arg1Rep, arg1Mod)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAlphaFragmentOp2ATI \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLuint dst = trace_packet.get_param_value<GLuint>(1); \
   GLuint dstMod = trace_packet.get_param_value<GLuint>(2); \
   GLuint arg1 = trace_packet.get_param_value<GLuint>(3); \
   GLuint arg1Rep = trace_packet.get_param_value<GLuint>(4); \
   GLuint arg1Mod = trace_packet.get_param_value<GLuint>(5); \
   GLuint arg2 = trace_packet.get_param_value<GLuint>(6); \
   GLuint arg2Rep = trace_packet.get_param_value<GLuint>(7); \
   GLuint arg2Mod = trace_packet.get_param_value<GLuint>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glAlphaFragmentOp2ATI GL_ENTRYPOINT(glAlphaFragmentOp2ATI)(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAlphaFragmentOp3ATI \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLuint dst = trace_packet.get_param_value<GLuint>(1); \
   GLuint dstMod = trace_packet.get_param_value<GLuint>(2); \
   GLuint arg1 = trace_packet.get_param_value<GLuint>(3); \
   GLuint arg1Rep = trace_packet.get_param_value<GLuint>(4); \
   GLuint arg1Mod = trace_packet.get_param_value<GLuint>(5); \
   GLuint arg2 = trace_packet.get_param_value<GLuint>(6); \
   GLuint arg2Rep = trace_packet.get_param_value<GLuint>(7); \
   GLuint arg2Mod = trace_packet.get_param_value<GLuint>(8); \
   GLuint arg3 = trace_packet.get_param_value<GLuint>(9); \
   GLuint arg3Rep = trace_packet.get_param_value<GLuint>(10); \
   GLuint arg3Mod = trace_packet.get_param_value<GLuint>(11);

#define VOGL_REPLAY_CALL_GL_HELPER_glAlphaFragmentOp3ATI GL_ENTRYPOINT(glAlphaFragmentOp3ATI)(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSetFragmentShaderConstantATI \
   GLuint dst = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glSetFragmentShaderConstantATI GL_ENTRYPOINT(glSetFragmentShaderConstantATI)(dst, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPNTrianglesiATI \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPNTrianglesiATI GL_ENTRYPOINT(glPNTrianglesiATI)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPNTrianglesfATI \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPNTrianglesfATI GL_ENTRYPOINT(glPNTrianglesfATI)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNewObjectBufferATI \
   GLsizei size = trace_packet.get_param_value<GLsizei>(0); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLenum usage = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glNewObjectBufferATI GL_ENTRYPOINT(glNewObjectBufferATI)(size, pTrace_pointer, usage)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsObjectBufferATI \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsObjectBufferATI GL_ENTRYPOINT(glIsObjectBufferATI)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUpdateObjectBufferATI \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLuint offset = trace_packet.get_param_value<GLuint>(1); \
   GLsizei size = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLenum preserve = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUpdateObjectBufferATI GL_ENTRYPOINT(glUpdateObjectBufferATI)(buffer, offset, size, pTrace_pointer, preserve)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetObjectBufferfvATI \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetObjectBufferfvATI GL_ENTRYPOINT(glGetObjectBufferfvATI)(buffer, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetObjectBufferivATI \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetObjectBufferivATI GL_ENTRYPOINT(glGetObjectBufferivATI)(buffer, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFreeObjectBufferATI \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFreeObjectBufferATI GL_ENTRYPOINT(glFreeObjectBufferATI)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glArrayObjectATI \
   GLenum array = trace_packet.get_param_value<GLenum>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(4); \
   GLuint offset = trace_packet.get_param_value<GLuint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glArrayObjectATI GL_ENTRYPOINT(glArrayObjectATI)(array, size, type, stride, buffer, offset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetArrayObjectfvATI \
   GLenum array = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetArrayObjectfvATI GL_ENTRYPOINT(glGetArrayObjectfvATI)(array, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetArrayObjectivATI \
   GLenum array = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetArrayObjectivATI GL_ENTRYPOINT(glGetArrayObjectivATI)(array, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantArrayObjectATI \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(3); \
   GLuint offset = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantArrayObjectATI GL_ENTRYPOINT(glVariantArrayObjectATI)(id, type, stride, buffer, offset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVariantArrayObjectfvATI \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVariantArrayObjectfvATI GL_ENTRYPOINT(glGetVariantArrayObjectfvATI)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVariantArrayObjectivATI \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVariantArrayObjectivATI GL_ENTRYPOINT(glGetVariantArrayObjectivATI)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginVertexShaderEXT  

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginVertexShaderEXT GL_ENTRYPOINT(glBeginVertexShaderEXT)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndVertexShaderEXT  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndVertexShaderEXT GL_ENTRYPOINT(glEndVertexShaderEXT)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindVertexShaderEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindVertexShaderEXT GL_ENTRYPOINT(glBindVertexShaderEXT)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenVertexShadersEXT \
   GLuint range = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenVertexShadersEXT GL_ENTRYPOINT(glGenVertexShadersEXT)(range)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteVertexShaderEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteVertexShaderEXT GL_ENTRYPOINT(glDeleteVertexShaderEXT)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glShaderOp1EXT \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLuint res = trace_packet.get_param_value<GLuint>(1); \
   GLuint arg1 = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glShaderOp1EXT GL_ENTRYPOINT(glShaderOp1EXT)(op, res, arg1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glShaderOp2EXT \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLuint res = trace_packet.get_param_value<GLuint>(1); \
   GLuint arg1 = trace_packet.get_param_value<GLuint>(2); \
   GLuint arg2 = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glShaderOp2EXT GL_ENTRYPOINT(glShaderOp2EXT)(op, res, arg1, arg2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glShaderOp3EXT \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLuint res = trace_packet.get_param_value<GLuint>(1); \
   GLuint arg1 = trace_packet.get_param_value<GLuint>(2); \
   GLuint arg2 = trace_packet.get_param_value<GLuint>(3); \
   GLuint arg3 = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glShaderOp3EXT GL_ENTRYPOINT(glShaderOp3EXT)(op, res, arg1, arg2, arg3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSwizzleEXT \
   GLuint res = trace_packet.get_param_value<GLuint>(0); \
   GLuint in = trace_packet.get_param_value<GLuint>(1); \
   GLenum outX = trace_packet.get_param_value<GLenum>(2); \
   GLenum outY = trace_packet.get_param_value<GLenum>(3); \
   GLenum outZ = trace_packet.get_param_value<GLenum>(4); \
   GLenum outW = trace_packet.get_param_value<GLenum>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glSwizzleEXT GL_ENTRYPOINT(glSwizzleEXT)(res, in, outX, outY, outZ, outW)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWriteMaskEXT \
   GLuint res = trace_packet.get_param_value<GLuint>(0); \
   GLuint in = trace_packet.get_param_value<GLuint>(1); \
   GLenum outX = trace_packet.get_param_value<GLenum>(2); \
   GLenum outY = trace_packet.get_param_value<GLenum>(3); \
   GLenum outZ = trace_packet.get_param_value<GLenum>(4); \
   GLenum outW = trace_packet.get_param_value<GLenum>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glWriteMaskEXT GL_ENTRYPOINT(glWriteMaskEXT)(res, in, outX, outY, outZ, outW)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInsertComponentEXT \
   GLuint res = trace_packet.get_param_value<GLuint>(0); \
   GLuint src = trace_packet.get_param_value<GLuint>(1); \
   GLuint num = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glInsertComponentEXT GL_ENTRYPOINT(glInsertComponentEXT)(res, src, num)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glExtractComponentEXT \
   GLuint res = trace_packet.get_param_value<GLuint>(0); \
   GLuint src = trace_packet.get_param_value<GLuint>(1); \
   GLuint num = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glExtractComponentEXT GL_ENTRYPOINT(glExtractComponentEXT)(res, src, num)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenSymbolsEXT \
   GLenum datatype = trace_packet.get_param_value<GLenum>(0); \
   GLenum storagetype = trace_packet.get_param_value<GLenum>(1); \
   GLenum range = trace_packet.get_param_value<GLenum>(2); \
   GLuint components = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenSymbolsEXT GL_ENTRYPOINT(glGenSymbolsEXT)(datatype, storagetype, range, components)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSetInvariantEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_addr = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glSetInvariantEXT GL_ENTRYPOINT(glSetInvariantEXT)(id, type, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSetLocalConstantEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_addr = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glSetLocalConstantEXT GL_ENTRYPOINT(glSetLocalConstantEXT)(id, type, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantbvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   const GLbyte * pTrace_addr = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantbvEXT GL_ENTRYPOINT(glVariantbvEXT)(id, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantsvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_addr = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantsvEXT GL_ENTRYPOINT(glVariantsvEXT)(id, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantivEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_addr = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantivEXT GL_ENTRYPOINT(glVariantivEXT)(id, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantfvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_addr = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantfvEXT GL_ENTRYPOINT(glVariantfvEXT)(id, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantdvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_addr = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantdvEXT GL_ENTRYPOINT(glVariantdvEXT)(id, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantubvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   const GLubyte * pTrace_addr = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantubvEXT GL_ENTRYPOINT(glVariantubvEXT)(id, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantusvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   const GLushort * pTrace_addr = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantusvEXT GL_ENTRYPOINT(glVariantusvEXT)(id, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantuivEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_addr = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantuivEXT GL_ENTRYPOINT(glVariantuivEXT)(id, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVariantPointerEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLuint stride = trace_packet.get_param_value<GLuint>(2); \
   const GLvoid * pTrace_addr = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVariantPointerEXT GL_ENTRYPOINT(glVariantPointerEXT)(id, type, stride, pTrace_addr)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnableVariantClientStateEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEnableVariantClientStateEXT GL_ENTRYPOINT(glEnableVariantClientStateEXT)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDisableVariantClientStateEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glDisableVariantClientStateEXT GL_ENTRYPOINT(glDisableVariantClientStateEXT)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindLightParameterEXT \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindLightParameterEXT GL_ENTRYPOINT(glBindLightParameterEXT)(light, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindMaterialParameterEXT \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindMaterialParameterEXT GL_ENTRYPOINT(glBindMaterialParameterEXT)(face, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindTexGenParameterEXT \
   GLenum unit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum value = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindTexGenParameterEXT GL_ENTRYPOINT(glBindTexGenParameterEXT)(unit, coord, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindTextureUnitParameterEXT \
   GLenum unit = trace_packet.get_param_value<GLenum>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindTextureUnitParameterEXT GL_ENTRYPOINT(glBindTextureUnitParameterEXT)(unit, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindParameterEXT \
   GLenum value = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindParameterEXT GL_ENTRYPOINT(glBindParameterEXT)(value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsVariantEnabledEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum cap = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsVariantEnabledEXT GL_ENTRYPOINT(glIsVariantEnabledEXT)(id, cap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVariantBooleanvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLboolean * pTrace_data = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVariantBooleanvEXT GL_ENTRYPOINT(glGetVariantBooleanvEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVariantIntegervEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_data = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVariantIntegervEXT GL_ENTRYPOINT(glGetVariantIntegervEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVariantFloatvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_data = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVariantFloatvEXT GL_ENTRYPOINT(glGetVariantFloatvEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVariantPointervEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_data = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVariantPointervEXT GL_ENTRYPOINT(glGetVariantPointervEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetInvariantBooleanvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLboolean * pTrace_data = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetInvariantBooleanvEXT GL_ENTRYPOINT(glGetInvariantBooleanvEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetInvariantIntegervEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_data = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetInvariantIntegervEXT GL_ENTRYPOINT(glGetInvariantIntegervEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetInvariantFloatvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_data = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetInvariantFloatvEXT GL_ENTRYPOINT(glGetInvariantFloatvEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetLocalConstantBooleanvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLboolean * pTrace_data = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetLocalConstantBooleanvEXT GL_ENTRYPOINT(glGetLocalConstantBooleanvEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetLocalConstantIntegervEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_data = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetLocalConstantIntegervEXT GL_ENTRYPOINT(glGetLocalConstantIntegervEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetLocalConstantFloatvEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum value = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_data = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetLocalConstantFloatvEXT GL_ENTRYPOINT(glGetLocalConstantFloatvEXT)(id, value, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream1sATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream1sATI GL_ENTRYPOINT(glVertexStream1sATI)(stream, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream1svATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_coords = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream1svATI GL_ENTRYPOINT(glVertexStream1svATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream1iATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream1iATI GL_ENTRYPOINT(glVertexStream1iATI)(stream, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream1ivATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_coords = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream1ivATI GL_ENTRYPOINT(glVertexStream1ivATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream1fATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream1fATI GL_ENTRYPOINT(glVertexStream1fATI)(stream, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream1fvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_coords = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream1fvATI GL_ENTRYPOINT(glVertexStream1fvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream1dATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream1dATI GL_ENTRYPOINT(glVertexStream1dATI)(stream, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream1dvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_coords = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream1dvATI GL_ENTRYPOINT(glVertexStream1dvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream2sATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream2sATI GL_ENTRYPOINT(glVertexStream2sATI)(stream, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream2svATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_coords = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream2svATI GL_ENTRYPOINT(glVertexStream2svATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream2iATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1); \
   GLint y = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream2iATI GL_ENTRYPOINT(glVertexStream2iATI)(stream, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream2ivATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_coords = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream2ivATI GL_ENTRYPOINT(glVertexStream2ivATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream2fATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream2fATI GL_ENTRYPOINT(glVertexStream2fATI)(stream, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream2fvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_coords = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream2fvATI GL_ENTRYPOINT(glVertexStream2fvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream2dATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream2dATI GL_ENTRYPOINT(glVertexStream2dATI)(stream, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream2dvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_coords = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream2dvATI GL_ENTRYPOINT(glVertexStream2dvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream3sATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2); \
   GLshort z = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream3sATI GL_ENTRYPOINT(glVertexStream3sATI)(stream, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream3svATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_coords = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream3svATI GL_ENTRYPOINT(glVertexStream3svATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream3iATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1); \
   GLint y = trace_packet.get_param_value<GLint>(2); \
   GLint z = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream3iATI GL_ENTRYPOINT(glVertexStream3iATI)(stream, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream3ivATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_coords = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream3ivATI GL_ENTRYPOINT(glVertexStream3ivATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream3fATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream3fATI GL_ENTRYPOINT(glVertexStream3fATI)(stream, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream3fvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_coords = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream3fvATI GL_ENTRYPOINT(glVertexStream3fvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream3dATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream3dATI GL_ENTRYPOINT(glVertexStream3dATI)(stream, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream3dvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_coords = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream3dvATI GL_ENTRYPOINT(glVertexStream3dvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream4sATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLshort x = trace_packet.get_param_value<GLshort>(1); \
   GLshort y = trace_packet.get_param_value<GLshort>(2); \
   GLshort z = trace_packet.get_param_value<GLshort>(3); \
   GLshort w = trace_packet.get_param_value<GLshort>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream4sATI GL_ENTRYPOINT(glVertexStream4sATI)(stream, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream4svATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_coords = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream4svATI GL_ENTRYPOINT(glVertexStream4svATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream4iATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1); \
   GLint y = trace_packet.get_param_value<GLint>(2); \
   GLint z = trace_packet.get_param_value<GLint>(3); \
   GLint w = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream4iATI GL_ENTRYPOINT(glVertexStream4iATI)(stream, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream4ivATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_coords = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream4ivATI GL_ENTRYPOINT(glVertexStream4ivATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream4fATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream4fATI GL_ENTRYPOINT(glVertexStream4fATI)(stream, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream4fvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_coords = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream4fvATI GL_ENTRYPOINT(glVertexStream4fvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream4dATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream4dATI GL_ENTRYPOINT(glVertexStream4dATI)(stream, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexStream4dvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_coords = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexStream4dvATI GL_ENTRYPOINT(glVertexStream4dvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3bATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLbyte nx = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte ny = trace_packet.get_param_value<GLbyte>(2); \
   GLbyte nz = trace_packet.get_param_value<GLbyte>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3bATI GL_ENTRYPOINT(glNormalStream3bATI)(stream, nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3bvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3bvATI GL_ENTRYPOINT(glNormalStream3bvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3sATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLshort nx = trace_packet.get_param_value<GLshort>(1); \
   GLshort ny = trace_packet.get_param_value<GLshort>(2); \
   GLshort nz = trace_packet.get_param_value<GLshort>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3sATI GL_ENTRYPOINT(glNormalStream3sATI)(stream, nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3svATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLshort * pTrace_coords = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3svATI GL_ENTRYPOINT(glNormalStream3svATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3iATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLint nx = trace_packet.get_param_value<GLint>(1); \
   GLint ny = trace_packet.get_param_value<GLint>(2); \
   GLint nz = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3iATI GL_ENTRYPOINT(glNormalStream3iATI)(stream, nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3ivATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_coords = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3ivATI GL_ENTRYPOINT(glNormalStream3ivATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3fATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLfloat nx = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat ny = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat nz = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3fATI GL_ENTRYPOINT(glNormalStream3fATI)(stream, nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3fvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_coords = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3fvATI GL_ENTRYPOINT(glNormalStream3fvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3dATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   GLdouble nx = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble ny = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble nz = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3dATI GL_ENTRYPOINT(glNormalStream3dATI)(stream, nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalStream3dvATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_coords = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalStream3dvATI GL_ENTRYPOINT(glNormalStream3dvATI)(stream, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClientActiveVertexStreamATI \
   GLenum stream = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClientActiveVertexStreamATI GL_ENTRYPOINT(glClientActiveVertexStreamATI)(stream)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexBlendEnviATI \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexBlendEnviATI GL_ENTRYPOINT(glVertexBlendEnviATI)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexBlendEnvfATI \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexBlendEnvfATI GL_ENTRYPOINT(glVertexBlendEnvfATI)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glElementPointerATI \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glElementPointerATI GL_ENTRYPOINT(glElementPointerATI)(type, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementArrayATI \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementArrayATI GL_ENTRYPOINT(glDrawElementArrayATI)(mode, count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawRangeElementArrayATI \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint start = trace_packet.get_param_value<GLuint>(1); \
   GLuint end = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawRangeElementArrayATI GL_ENTRYPOINT(glDrawRangeElementArrayATI)(mode, start, end, count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawMeshArraysSUN \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint first = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawMeshArraysSUN GL_ENTRYPOINT(glDrawMeshArraysSUN)(mode, first, count, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenOcclusionQueriesNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenOcclusionQueriesNV GL_ENTRYPOINT(glGenOcclusionQueriesNV)(n, pReplay_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteOcclusionQueriesNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteOcclusionQueriesNV GL_ENTRYPOINT(glDeleteOcclusionQueriesNV)(n, pTrace_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsOcclusionQueryNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsOcclusionQueryNV GL_ENTRYPOINT(glIsOcclusionQueryNV)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginOcclusionQueryNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginOcclusionQueryNV GL_ENTRYPOINT(glBeginOcclusionQueryNV)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndOcclusionQueryNV  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndOcclusionQueryNV GL_ENTRYPOINT(glEndOcclusionQueryNV)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetOcclusionQueryivNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetOcclusionQueryivNV GL_ENTRYPOINT(glGetOcclusionQueryivNV)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetOcclusionQueryuivNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetOcclusionQueryuivNV GL_ENTRYPOINT(glGetOcclusionQueryuivNV)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameteriNV \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameteriNV GL_ENTRYPOINT(glPointParameteriNV)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterivNV \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterivNV GL_ENTRYPOINT(glPointParameterivNV)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glActiveStencilFaceEXT \
   GLenum face = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glActiveStencilFaceEXT GL_ENTRYPOINT(glActiveStencilFaceEXT)(face)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glElementPointerAPPLE \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glElementPointerAPPLE GL_ENTRYPOINT(glElementPointerAPPLE)(type, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementArrayAPPLE \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint first = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementArrayAPPLE GL_ENTRYPOINT(glDrawElementArrayAPPLE)(mode, first, count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawRangeElementArrayAPPLE \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint start = trace_packet.get_param_value<GLuint>(1); \
   GLuint end = trace_packet.get_param_value<GLuint>(2); \
   GLint first = trace_packet.get_param_value<GLint>(3); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawRangeElementArrayAPPLE GL_ENTRYPOINT(glDrawRangeElementArrayAPPLE)(mode, start, end, first, count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawElementArrayAPPLE \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLint * pTrace_first = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawElementArrayAPPLE GL_ENTRYPOINT(glMultiDrawElementArrayAPPLE)(mode, pTrace_first, pTrace_count, primcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawRangeElementArrayAPPLE \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint start = trace_packet.get_param_value<GLuint>(1); \
   GLuint end = trace_packet.get_param_value<GLuint>(2); \
   const GLint * pTrace_first = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLsizei * pTrace_count = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(4)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawRangeElementArrayAPPLE GL_ENTRYPOINT(glMultiDrawRangeElementArrayAPPLE)(mode, start, end, pTrace_first, pTrace_count, primcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenFencesAPPLE \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_fences = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenFencesAPPLE GL_ENTRYPOINT(glGenFencesAPPLE)(n, pReplay_fences)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteFencesAPPLE \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_fences = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteFencesAPPLE GL_ENTRYPOINT(glDeleteFencesAPPLE)(n, pTrace_fences)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSetFenceAPPLE \
   GLuint fence = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glSetFenceAPPLE GL_ENTRYPOINT(glSetFenceAPPLE)(fence)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsFenceAPPLE \
   GLuint fence = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsFenceAPPLE GL_ENTRYPOINT(glIsFenceAPPLE)(fence)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTestFenceAPPLE \
   GLuint fence = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTestFenceAPPLE GL_ENTRYPOINT(glTestFenceAPPLE)(fence)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFinishFenceAPPLE \
   GLuint fence = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFinishFenceAPPLE GL_ENTRYPOINT(glFinishFenceAPPLE)(fence)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTestObjectAPPLE \
   GLenum object = trace_packet.get_param_value<GLenum>(0); \
   GLuint name = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTestObjectAPPLE GL_ENTRYPOINT(glTestObjectAPPLE)(object, name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFinishObjectAPPLE \
   GLenum object = trace_packet.get_param_value<GLenum>(0); \
   GLint name = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFinishObjectAPPLE GL_ENTRYPOINT(glFinishObjectAPPLE)(object, name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindVertexArrayAPPLE \
   GLuint array = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindVertexArrayAPPLE GL_ENTRYPOINT(glBindVertexArrayAPPLE)(array)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteVertexArraysAPPLE \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_arrays = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteVertexArraysAPPLE GL_ENTRYPOINT(glDeleteVertexArraysAPPLE)(n, pTrace_arrays)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenVertexArraysAPPLE \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_arrays = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenVertexArraysAPPLE GL_ENTRYPOINT(glGenVertexArraysAPPLE)(n, pReplay_arrays)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsVertexArrayAPPLE \
   GLuint array = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsVertexArrayAPPLE GL_ENTRYPOINT(glIsVertexArrayAPPLE)(array)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayRangeAPPLE \
   GLsizei length = trace_packet.get_param_value<GLsizei>(0); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayRangeAPPLE GL_ENTRYPOINT(glVertexArrayRangeAPPLE)(length, pReplay_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFlushVertexArrayRangeAPPLE \
   GLsizei length = trace_packet.get_param_value<GLsizei>(0); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glFlushVertexArrayRangeAPPLE GL_ENTRYPOINT(glFlushVertexArrayRangeAPPLE)(length, pReplay_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayParameteriAPPLE \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLint param = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayParameteriAPPLE GL_ENTRYPOINT(glVertexArrayParameteriAPPLE)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawBuffersATI \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLenum * pTrace_bufs = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawBuffersATI GL_ENTRYPOINT(glDrawBuffersATI)(n, pTrace_bufs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramNamedParameter4fNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLsizei len = trace_packet.get_param_value<GLsizei>(1); \
   const GLubyte * pTrace_name = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramNamedParameter4fNV GL_ENTRYPOINT(glProgramNamedParameter4fNV)(id, len, pTrace_name, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramNamedParameter4fvNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLsizei len = trace_packet.get_param_value<GLsizei>(1); \
   const GLubyte * pTrace_name = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLfloat * pTrace_v = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramNamedParameter4fvNV GL_ENTRYPOINT(glProgramNamedParameter4fvNV)(id, len, pTrace_name, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramNamedParameter4dNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLsizei len = trace_packet.get_param_value<GLsizei>(1); \
   const GLubyte * pTrace_name = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(5); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramNamedParameter4dNV GL_ENTRYPOINT(glProgramNamedParameter4dNV)(id, len, pTrace_name, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramNamedParameter4dvNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLsizei len = trace_packet.get_param_value<GLsizei>(1); \
   const GLubyte * pTrace_name = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramNamedParameter4dvNV GL_ENTRYPOINT(glProgramNamedParameter4dvNV)(id, len, pTrace_name, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramNamedParameterfvNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLsizei len = trace_packet.get_param_value<GLsizei>(1); \
   const GLubyte * pTrace_name = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramNamedParameterfvNV GL_ENTRYPOINT(glGetProgramNamedParameterfvNV)(id, len, pTrace_name, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramNamedParameterdvNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLsizei len = trace_packet.get_param_value<GLsizei>(1); \
   const GLubyte * pTrace_name = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramNamedParameterdvNV GL_ENTRYPOINT(glGetProgramNamedParameterdvNV)(id, len, pTrace_name, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2hNV \
   GLhalfNV x = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV y = trace_packet.get_param_value<GLhalfNV>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2hNV GL_ENTRYPOINT(glVertex2hNV)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2hvNV GL_ENTRYPOINT(glVertex2hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3hNV \
   GLhalfNV x = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV y = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV z = trace_packet.get_param_value<GLhalfNV>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3hNV GL_ENTRYPOINT(glVertex3hNV)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3hvNV GL_ENTRYPOINT(glVertex3hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4hNV \
   GLhalfNV x = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV y = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV z = trace_packet.get_param_value<GLhalfNV>(2); \
   GLhalfNV w = trace_packet.get_param_value<GLhalfNV>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4hNV GL_ENTRYPOINT(glVertex4hNV)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4hvNV GL_ENTRYPOINT(glVertex4hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3hNV \
   GLhalfNV nx = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV ny = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV nz = trace_packet.get_param_value<GLhalfNV>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3hNV GL_ENTRYPOINT(glNormal3hNV)(nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3hvNV GL_ENTRYPOINT(glNormal3hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3hNV \
   GLhalfNV red = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV green = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV blue = trace_packet.get_param_value<GLhalfNV>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3hNV GL_ENTRYPOINT(glColor3hNV)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3hvNV GL_ENTRYPOINT(glColor3hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4hNV \
   GLhalfNV red = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV green = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV blue = trace_packet.get_param_value<GLhalfNV>(2); \
   GLhalfNV alpha = trace_packet.get_param_value<GLhalfNV>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4hNV GL_ENTRYPOINT(glColor4hNV)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4hvNV GL_ENTRYPOINT(glColor4hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1hNV \
   GLhalfNV s = trace_packet.get_param_value<GLhalfNV>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1hNV GL_ENTRYPOINT(glTexCoord1hNV)(s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1hvNV GL_ENTRYPOINT(glTexCoord1hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2hNV \
   GLhalfNV s = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV t = trace_packet.get_param_value<GLhalfNV>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2hNV GL_ENTRYPOINT(glTexCoord2hNV)(s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2hvNV GL_ENTRYPOINT(glTexCoord2hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3hNV \
   GLhalfNV s = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV t = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV r = trace_packet.get_param_value<GLhalfNV>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3hNV GL_ENTRYPOINT(glTexCoord3hNV)(s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3hvNV GL_ENTRYPOINT(glTexCoord3hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4hNV \
   GLhalfNV s = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV t = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV r = trace_packet.get_param_value<GLhalfNV>(2); \
   GLhalfNV q = trace_packet.get_param_value<GLhalfNV>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4hNV GL_ENTRYPOINT(glTexCoord4hNV)(s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4hvNV GL_ENTRYPOINT(glTexCoord4hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1hNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLhalfNV s = trace_packet.get_param_value<GLhalfNV>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1hNV GL_ENTRYPOINT(glMultiTexCoord1hNV)(target, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1hvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1hvNV GL_ENTRYPOINT(glMultiTexCoord1hvNV)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2hNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLhalfNV s = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV t = trace_packet.get_param_value<GLhalfNV>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2hNV GL_ENTRYPOINT(glMultiTexCoord2hNV)(target, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2hvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2hvNV GL_ENTRYPOINT(glMultiTexCoord2hvNV)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3hNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLhalfNV s = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV t = trace_packet.get_param_value<GLhalfNV>(2); \
   GLhalfNV r = trace_packet.get_param_value<GLhalfNV>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3hNV GL_ENTRYPOINT(glMultiTexCoord3hNV)(target, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3hvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3hvNV GL_ENTRYPOINT(glMultiTexCoord3hvNV)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4hNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLhalfNV s = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV t = trace_packet.get_param_value<GLhalfNV>(2); \
   GLhalfNV r = trace_packet.get_param_value<GLhalfNV>(3); \
   GLhalfNV q = trace_packet.get_param_value<GLhalfNV>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4hNV GL_ENTRYPOINT(glMultiTexCoord4hNV)(target, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4hvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4hvNV GL_ENTRYPOINT(glMultiTexCoord4hvNV)(target, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordhNV \
   GLhalfNV fog = trace_packet.get_param_value<GLhalfNV>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordhNV GL_ENTRYPOINT(glFogCoordhNV)(fog)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordhvNV \
   const GLhalfNV * pTrace_fog = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordhvNV GL_ENTRYPOINT(glFogCoordhvNV)(pTrace_fog)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3hNV \
   GLhalfNV red = trace_packet.get_param_value<GLhalfNV>(0); \
   GLhalfNV green = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV blue = trace_packet.get_param_value<GLhalfNV>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3hNV GL_ENTRYPOINT(glSecondaryColor3hNV)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColor3hvNV \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColor3hvNV GL_ENTRYPOINT(glSecondaryColor3hvNV)(pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexWeighthNV \
   GLhalfNV weight = trace_packet.get_param_value<GLhalfNV>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexWeighthNV GL_ENTRYPOINT(glVertexWeighthNV)(weight)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexWeighthvNV \
   const GLhalfNV * pTrace_weight = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexWeighthvNV GL_ENTRYPOINT(glVertexWeighthvNV)(pTrace_weight)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1hNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLhalfNV x = trace_packet.get_param_value<GLhalfNV>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1hNV GL_ENTRYPOINT(glVertexAttrib1hNV)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib1hvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib1hvNV GL_ENTRYPOINT(glVertexAttrib1hvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2hNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLhalfNV x = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV y = trace_packet.get_param_value<GLhalfNV>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2hNV GL_ENTRYPOINT(glVertexAttrib2hNV)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib2hvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib2hvNV GL_ENTRYPOINT(glVertexAttrib2hvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3hNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLhalfNV x = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV y = trace_packet.get_param_value<GLhalfNV>(2); \
   GLhalfNV z = trace_packet.get_param_value<GLhalfNV>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3hNV GL_ENTRYPOINT(glVertexAttrib3hNV)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib3hvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib3hvNV GL_ENTRYPOINT(glVertexAttrib3hvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4hNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLhalfNV x = trace_packet.get_param_value<GLhalfNV>(1); \
   GLhalfNV y = trace_packet.get_param_value<GLhalfNV>(2); \
   GLhalfNV z = trace_packet.get_param_value<GLhalfNV>(3); \
   GLhalfNV w = trace_packet.get_param_value<GLhalfNV>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4hNV GL_ENTRYPOINT(glVertexAttrib4hNV)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttrib4hvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttrib4hvNV GL_ENTRYPOINT(glVertexAttrib4hvNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs1hvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei n = trace_packet.get_param_value<GLsizei>(1); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs1hvNV GL_ENTRYPOINT(glVertexAttribs1hvNV)(index, n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs2hvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei n = trace_packet.get_param_value<GLsizei>(1); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs2hvNV GL_ENTRYPOINT(glVertexAttribs2hvNV)(index, n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs3hvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei n = trace_packet.get_param_value<GLsizei>(1); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs3hvNV GL_ENTRYPOINT(glVertexAttribs3hvNV)(index, n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribs4hvNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLsizei n = trace_packet.get_param_value<GLsizei>(1); \
   const GLhalfNV * pTrace_v = reinterpret_cast<const GLhalfNV *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribs4hvNV GL_ENTRYPOINT(glVertexAttribs4hvNV)(index, n, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelDataRangeNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelDataRangeNV GL_ENTRYPOINT(glPixelDataRangeNV)(target, length, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFlushPixelDataRangeNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glFlushPixelDataRangeNV GL_ENTRYPOINT(glFlushPixelDataRangeNV)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPrimitiveRestartNV  

#define VOGL_REPLAY_CALL_GL_HELPER_glPrimitiveRestartNV GL_ENTRYPOINT(glPrimitiveRestartNV)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPrimitiveRestartIndexNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPrimitiveRestartIndexNV GL_ENTRYPOINT(glPrimitiveRestartIndexNV)(index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapObjectBufferATI \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapObjectBufferATI GL_ENTRYPOINT(glMapObjectBufferATI)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUnmapObjectBufferATI \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glUnmapObjectBufferATI GL_ENTRYPOINT(glUnmapObjectBufferATI)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilOpSeparateATI \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum sfail = trace_packet.get_param_value<GLenum>(1); \
   GLenum dpfail = trace_packet.get_param_value<GLenum>(2); \
   GLenum dppass = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilOpSeparateATI GL_ENTRYPOINT(glStencilOpSeparateATI)(face, sfail, dpfail, dppass)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilFuncSeparateATI \
   GLenum frontfunc = trace_packet.get_param_value<GLenum>(0); \
   GLenum backfunc = trace_packet.get_param_value<GLenum>(1); \
   GLint ref = trace_packet.get_param_value<GLint>(2); \
   GLuint mask = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilFuncSeparateATI GL_ENTRYPOINT(glStencilFuncSeparateATI)(frontfunc, backfunc, ref, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribArrayObjectATI \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(3); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(4); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(5); \
   GLuint offset = trace_packet.get_param_value<GLuint>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribArrayObjectATI GL_ENTRYPOINT(glVertexAttribArrayObjectATI)(index, size, type, normalized, stride, buffer, offset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribArrayObjectfvATI \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribArrayObjectfvATI GL_ENTRYPOINT(glGetVertexAttribArrayObjectfvATI)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribArrayObjectivATI \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribArrayObjectivATI GL_ENTRYPOINT(glGetVertexAttribArrayObjectivATI)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1bOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLbyte s = trace_packet.get_param_value<GLbyte>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1bOES GL_ENTRYPOINT(glMultiTexCoord1bOES)(texture, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1bvOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1bvOES GL_ENTRYPOINT(glMultiTexCoord1bvOES)(texture, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2bOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLbyte s = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte t = trace_packet.get_param_value<GLbyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2bOES GL_ENTRYPOINT(glMultiTexCoord2bOES)(texture, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2bvOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2bvOES GL_ENTRYPOINT(glMultiTexCoord2bvOES)(texture, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3bOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLbyte s = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte t = trace_packet.get_param_value<GLbyte>(2); \
   GLbyte r = trace_packet.get_param_value<GLbyte>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3bOES GL_ENTRYPOINT(glMultiTexCoord3bOES)(texture, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3bvOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3bvOES GL_ENTRYPOINT(glMultiTexCoord3bvOES)(texture, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4bOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLbyte s = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte t = trace_packet.get_param_value<GLbyte>(2); \
   GLbyte r = trace_packet.get_param_value<GLbyte>(3); \
   GLbyte q = trace_packet.get_param_value<GLbyte>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4bOES GL_ENTRYPOINT(glMultiTexCoord4bOES)(texture, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4bvOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4bvOES GL_ENTRYPOINT(glMultiTexCoord4bvOES)(texture, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1bOES \
   GLbyte s = trace_packet.get_param_value<GLbyte>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1bOES GL_ENTRYPOINT(glTexCoord1bOES)(s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1bvOES \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1bvOES GL_ENTRYPOINT(glTexCoord1bvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2bOES \
   GLbyte s = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte t = trace_packet.get_param_value<GLbyte>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2bOES GL_ENTRYPOINT(glTexCoord2bOES)(s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2bvOES \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2bvOES GL_ENTRYPOINT(glTexCoord2bvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3bOES \
   GLbyte s = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte t = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte r = trace_packet.get_param_value<GLbyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3bOES GL_ENTRYPOINT(glTexCoord3bOES)(s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3bvOES \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3bvOES GL_ENTRYPOINT(glTexCoord3bvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4bOES \
   GLbyte s = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte t = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte r = trace_packet.get_param_value<GLbyte>(2); \
   GLbyte q = trace_packet.get_param_value<GLbyte>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4bOES GL_ENTRYPOINT(glTexCoord4bOES)(s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4bvOES \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4bvOES GL_ENTRYPOINT(glTexCoord4bvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2bOES \
   GLbyte x = trace_packet.get_param_value<GLbyte>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2bOES GL_ENTRYPOINT(glVertex2bOES)(x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2bvOES \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2bvOES GL_ENTRYPOINT(glVertex2bvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3bOES \
   GLbyte x = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte y = trace_packet.get_param_value<GLbyte>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3bOES GL_ENTRYPOINT(glVertex3bOES)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3bvOES \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3bvOES GL_ENTRYPOINT(glVertex3bvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4bOES \
   GLbyte x = trace_packet.get_param_value<GLbyte>(0); \
   GLbyte y = trace_packet.get_param_value<GLbyte>(1); \
   GLbyte z = trace_packet.get_param_value<GLbyte>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4bOES GL_ENTRYPOINT(glVertex4bOES)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4bvOES \
   const GLbyte * pTrace_coords = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4bvOES GL_ENTRYPOINT(glVertex4bvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAccumxOES \
   GLenum op = trace_packet.get_param_value<GLenum>(0); \
   GLfixed value = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glAccumxOES GL_ENTRYPOINT(glAccumxOES)(op, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glAlphaFuncxOES \
   GLenum func = trace_packet.get_param_value<GLenum>(0); \
   GLfixed ref = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glAlphaFuncxOES GL_ENTRYPOINT(glAlphaFuncxOES)(func, ref)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBitmapxOES \
   GLsizei width = trace_packet.get_param_value<GLsizei>(0); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(1); \
   GLfixed xorig = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed yorig = trace_packet.get_param_value<GLfixed>(3); \
   GLfixed xmove = trace_packet.get_param_value<GLfixed>(4); \
   GLfixed ymove = trace_packet.get_param_value<GLfixed>(5); \
   const GLubyte * pTrace_bitmap = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glBitmapxOES GL_ENTRYPOINT(glBitmapxOES)(width, height, xorig, yorig, xmove, ymove, pTrace_bitmap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendColorxOES \
   GLfixed red = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed green = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed blue = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed alpha = trace_packet.get_param_value<GLfixed>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendColorxOES GL_ENTRYPOINT(glBlendColorxOES)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearAccumxOES \
   GLfixed red = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed green = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed blue = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed alpha = trace_packet.get_param_value<GLfixed>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearAccumxOES GL_ENTRYPOINT(glClearAccumxOES)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearColorxOES \
   GLfixed red = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed green = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed blue = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed alpha = trace_packet.get_param_value<GLfixed>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearColorxOES GL_ENTRYPOINT(glClearColorxOES)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearDepthxOES \
   GLfixed depth = trace_packet.get_param_value<GLfixed>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearDepthxOES GL_ENTRYPOINT(glClearDepthxOES)(depth)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClipPlanexOES \
   GLenum plane = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_equation = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glClipPlanexOES GL_ENTRYPOINT(glClipPlanexOES)(plane, pTrace_equation)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3xOES \
   GLfixed red = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed green = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed blue = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3xOES GL_ENTRYPOINT(glColor3xOES)(red, green, blue)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4xOES \
   GLfixed red = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed green = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed blue = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed alpha = trace_packet.get_param_value<GLfixed>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4xOES GL_ENTRYPOINT(glColor4xOES)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor3xvOES \
   const GLfixed * pTrace_components = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor3xvOES GL_ENTRYPOINT(glColor3xvOES)(pTrace_components)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColor4xvOES \
   const GLfixed * pTrace_components = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glColor4xvOES GL_ENTRYPOINT(glColor4xvOES)(pTrace_components)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameterxOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameterxOES GL_ENTRYPOINT(glConvolutionParameterxOES)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glConvolutionParameterxvOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glConvolutionParameterxvOES GL_ENTRYPOINT(glConvolutionParameterxvOES)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthRangexOES \
   GLfixed n = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed f = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthRangexOES GL_ENTRYPOINT(glDepthRangexOES)(n, f)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord1xOES \
   GLfixed u = trace_packet.get_param_value<GLfixed>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord1xOES GL_ENTRYPOINT(glEvalCoord1xOES)(u)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord2xOES \
   GLfixed u = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed v = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord2xOES GL_ENTRYPOINT(glEvalCoord2xOES)(u, v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord1xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord1xvOES GL_ENTRYPOINT(glEvalCoord1xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEvalCoord2xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glEvalCoord2xvOES GL_ENTRYPOINT(glEvalCoord2xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFeedbackBufferxOES \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_buffer = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glFeedbackBufferxOES GL_ENTRYPOINT(glFeedbackBufferxOES)(n, type, pTrace_buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogxOES \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogxOES GL_ENTRYPOINT(glFogxOES)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogxvOES \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_param = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glFogxvOES GL_ENTRYPOINT(glFogxvOES)(pname, pTrace_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFrustumxOES \
   GLfixed l = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed r = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed b = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed t = trace_packet.get_param_value<GLfixed>(3); \
   GLfixed n = trace_packet.get_param_value<GLfixed>(4); \
   GLfixed f = trace_packet.get_param_value<GLfixed>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glFrustumxOES GL_ENTRYPOINT(glFrustumxOES)(l, r, b, t, n, f)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetClipPlanexOES \
   GLenum plane = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_equation = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetClipPlanexOES GL_ENTRYPOINT(glGetClipPlanexOES)(plane, pReplay_equation)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetConvolutionParameterxvOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetConvolutionParameterxvOES GL_ENTRYPOINT(glGetConvolutionParameterxvOES)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFixedvOES \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFixedvOES GL_ENTRYPOINT(glGetFixedvOES)(pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetHistogramParameterxvOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetHistogramParameterxvOES GL_ENTRYPOINT(glGetHistogramParameterxvOES)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetLightxOES \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetLightxOES GL_ENTRYPOINT(glGetLightxOES)(light, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMapxvOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum query = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_v = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMapxvOES GL_ENTRYPOINT(glGetMapxvOES)(target, query, pReplay_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMaterialxOES \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMaterialxOES GL_ENTRYPOINT(glGetMaterialxOES)(face, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPixelMapxv \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   const GLfixed * pTrace_values = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPixelMapxv GL_ENTRYPOINT(glGetPixelMapxv)(map, size, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexEnvxvOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexEnvxvOES GL_ENTRYPOINT(glGetTexEnvxvOES)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexGenxvOES \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexGenxvOES GL_ENTRYPOINT(glGetTexGenxvOES)(coord, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexLevelParameterxvOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexLevelParameterxvOES GL_ENTRYPOINT(glGetTexLevelParameterxvOES)(target, level, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexParameterxvOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexParameterxvOES GL_ENTRYPOINT(glGetTexParameterxvOES)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexxOES \
   GLfixed component = trace_packet.get_param_value<GLfixed>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexxOES GL_ENTRYPOINT(glIndexxOES)(component)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexxvOES \
   const GLfixed * pTrace_component = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexxvOES GL_ENTRYPOINT(glIndexxvOES)(pTrace_component)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightModelxOES \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glLightModelxOES GL_ENTRYPOINT(glLightModelxOES)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightModelxvOES \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_param = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glLightModelxvOES GL_ENTRYPOINT(glLightModelxvOES)(pname, pTrace_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightxOES \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glLightxOES GL_ENTRYPOINT(glLightxOES)(light, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLightxvOES \
   GLenum light = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glLightxvOES GL_ENTRYPOINT(glLightxvOES)(light, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLineWidthxOES \
   GLfixed width = trace_packet.get_param_value<GLfixed>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glLineWidthxOES GL_ENTRYPOINT(glLineWidthxOES)(width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadMatrixxOES \
   const GLfixed * pTrace_m = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadMatrixxOES GL_ENTRYPOINT(glLoadMatrixxOES)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glLoadTransposeMatrixxOES \
   const GLfixed * pTrace_m = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glLoadTransposeMatrixxOES GL_ENTRYPOINT(glLoadTransposeMatrixxOES)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMap1xOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfixed u1 = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed u2 = trace_packet.get_param_value<GLfixed>(2); \
   GLint stride = trace_packet.get_param_value<GLint>(3); \
   GLint order = trace_packet.get_param_value<GLint>(4); \
   GLfixed points = trace_packet.get_param_value<GLfixed>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glMap1xOES GL_ENTRYPOINT(glMap1xOES)(target, u1, u2, stride, order, points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMap2xOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLfixed u1 = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed u2 = trace_packet.get_param_value<GLfixed>(2); \
   GLint ustride = trace_packet.get_param_value<GLint>(3); \
   GLint uorder = trace_packet.get_param_value<GLint>(4); \
   GLfixed v1 = trace_packet.get_param_value<GLfixed>(5); \
   GLfixed v2 = trace_packet.get_param_value<GLfixed>(6); \
   GLint vstride = trace_packet.get_param_value<GLint>(7); \
   GLint vorder = trace_packet.get_param_value<GLint>(8); \
   GLfixed points = trace_packet.get_param_value<GLfixed>(9);

#define VOGL_REPLAY_CALL_GL_HELPER_glMap2xOES GL_ENTRYPOINT(glMap2xOES)(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapGrid1xOES \
   GLint n = trace_packet.get_param_value<GLint>(0); \
   GLfixed u1 = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed u2 = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapGrid1xOES GL_ENTRYPOINT(glMapGrid1xOES)(n, u1, u2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapGrid2xOES \
   GLint n = trace_packet.get_param_value<GLint>(0); \
   GLfixed u1 = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed u2 = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed v1 = trace_packet.get_param_value<GLfixed>(3); \
   GLfixed v2 = trace_packet.get_param_value<GLfixed>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapGrid2xOES GL_ENTRYPOINT(glMapGrid2xOES)(n, u1, u2, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMaterialxOES \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMaterialxOES GL_ENTRYPOINT(glMaterialxOES)(face, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMaterialxvOES \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_param = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glMaterialxvOES GL_ENTRYPOINT(glMaterialxvOES)(face, pname, pTrace_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultMatrixxOES \
   const GLfixed * pTrace_m = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultMatrixxOES GL_ENTRYPOINT(glMultMatrixxOES)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultTransposeMatrixxOES \
   const GLfixed * pTrace_m = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultTransposeMatrixxOES GL_ENTRYPOINT(glMultTransposeMatrixxOES)(pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1xOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLfixed s = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1xOES GL_ENTRYPOINT(glMultiTexCoord1xOES)(texture, s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2xOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLfixed s = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed t = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2xOES GL_ENTRYPOINT(glMultiTexCoord2xOES)(texture, s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3xOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLfixed s = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed t = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed r = trace_packet.get_param_value<GLfixed>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3xOES GL_ENTRYPOINT(glMultiTexCoord3xOES)(texture, s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4xOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   GLfixed s = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed t = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed r = trace_packet.get_param_value<GLfixed>(3); \
   GLfixed q = trace_packet.get_param_value<GLfixed>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4xOES GL_ENTRYPOINT(glMultiTexCoord4xOES)(texture, s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord1xvOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord1xvOES GL_ENTRYPOINT(glMultiTexCoord1xvOES)(texture, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord2xvOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord2xvOES GL_ENTRYPOINT(glMultiTexCoord2xvOES)(texture, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord3xvOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord3xvOES GL_ENTRYPOINT(glMultiTexCoord3xvOES)(texture, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoord4xvOES \
   GLenum texture = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoord4xvOES GL_ENTRYPOINT(glMultiTexCoord4xvOES)(texture, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3xOES \
   GLfixed nx = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed ny = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed nz = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3xOES GL_ENTRYPOINT(glNormal3xOES)(nx, ny, nz)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormal3xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glNormal3xvOES GL_ENTRYPOINT(glNormal3xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glOrthoxOES \
   GLfixed l = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed r = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed b = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed t = trace_packet.get_param_value<GLfixed>(3); \
   GLfixed n = trace_packet.get_param_value<GLfixed>(4); \
   GLfixed f = trace_packet.get_param_value<GLfixed>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glOrthoxOES GL_ENTRYPOINT(glOrthoxOES)(l, r, b, t, n, f)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPassThroughxOES \
   GLfixed token = trace_packet.get_param_value<GLfixed>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPassThroughxOES GL_ENTRYPOINT(glPassThroughxOES)(token)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelMapx \
   GLenum map = trace_packet.get_param_value<GLenum>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   const GLfixed * pTrace_values = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelMapx GL_ENTRYPOINT(glPixelMapx)(map, size, pTrace_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelStorex \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelStorex GL_ENTRYPOINT(glPixelStorex)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelTransferxOES \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelTransferxOES GL_ENTRYPOINT(glPixelTransferxOES)(pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPixelZoomxOES \
   GLfixed xfactor = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed yfactor = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPixelZoomxOES GL_ENTRYPOINT(glPixelZoomxOES)(xfactor, yfactor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointParameterxvOES \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glPointParameterxvOES GL_ENTRYPOINT(glPointParameterxvOES)(pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointSizexOES \
   GLfixed size = trace_packet.get_param_value<GLfixed>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPointSizexOES GL_ENTRYPOINT(glPointSizexOES)(size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPolygonOffsetxOES \
   GLfixed factor = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed units = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPolygonOffsetxOES GL_ENTRYPOINT(glPolygonOffsetxOES)(factor, units)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPrioritizeTexturesxOES \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_textures = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLfixed * pTrace_priorities = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPrioritizeTexturesxOES GL_ENTRYPOINT(glPrioritizeTexturesxOES)(n, pTrace_textures, pTrace_priorities)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2xOES \
   GLfixed x = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed y = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2xOES GL_ENTRYPOINT(glRasterPos2xOES)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3xOES \
   GLfixed x = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed y = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed z = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3xOES GL_ENTRYPOINT(glRasterPos3xOES)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4xOES \
   GLfixed x = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed y = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed z = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed w = trace_packet.get_param_value<GLfixed>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4xOES GL_ENTRYPOINT(glRasterPos4xOES)(x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos2xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos2xvOES GL_ENTRYPOINT(glRasterPos2xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos3xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos3xvOES GL_ENTRYPOINT(glRasterPos3xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRasterPos4xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glRasterPos4xvOES GL_ENTRYPOINT(glRasterPos4xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRectxOES \
   GLfixed x1 = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed y1 = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed x2 = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed y2 = trace_packet.get_param_value<GLfixed>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRectxOES GL_ENTRYPOINT(glRectxOES)(x1, y1, x2, y2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRectxvOES \
   const GLfixed * pTrace_v1 = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLfixed * pTrace_v2 = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glRectxvOES GL_ENTRYPOINT(glRectxvOES)(pTrace_v1, pTrace_v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRotatexOES \
   GLfixed angle = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed x = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed y = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed z = trace_packet.get_param_value<GLfixed>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRotatexOES GL_ENTRYPOINT(glRotatexOES)(angle, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSampleCoverageOES \
   GLfixed value = trace_packet.get_param_value<GLfixed>(0); \
   GLboolean invert = trace_packet.get_param_value<GLboolean>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSampleCoverageOES GL_ENTRYPOINT(glSampleCoverageOES)(value, invert)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glScalexOES \
   GLfixed x = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed y = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed z = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glScalexOES GL_ENTRYPOINT(glScalexOES)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1xOES \
   GLfixed s = trace_packet.get_param_value<GLfixed>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1xOES GL_ENTRYPOINT(glTexCoord1xOES)(s)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2xOES \
   GLfixed s = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed t = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2xOES GL_ENTRYPOINT(glTexCoord2xOES)(s, t)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3xOES \
   GLfixed s = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed t = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed r = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3xOES GL_ENTRYPOINT(glTexCoord3xOES)(s, t, r)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4xOES \
   GLfixed s = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed t = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed r = trace_packet.get_param_value<GLfixed>(2); \
   GLfixed q = trace_packet.get_param_value<GLfixed>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4xOES GL_ENTRYPOINT(glTexCoord4xOES)(s, t, r, q)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord1xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord1xvOES GL_ENTRYPOINT(glTexCoord1xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord2xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord2xvOES GL_ENTRYPOINT(glTexCoord2xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord3xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord3xvOES GL_ENTRYPOINT(glTexCoord3xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoord4xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoord4xvOES GL_ENTRYPOINT(glTexCoord4xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexEnvxOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexEnvxOES GL_ENTRYPOINT(glTexEnvxOES)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexEnvxvOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexEnvxvOES GL_ENTRYPOINT(glTexEnvxvOES)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexGenxOES \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexGenxOES GL_ENTRYPOINT(glTexGenxOES)(coord, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexGenxvOES \
   GLenum coord = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexGenxvOES GL_ENTRYPOINT(glTexGenxvOES)(coord, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameterxOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfixed param = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameterxOES GL_ENTRYPOINT(glTexParameterxOES)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameterxvOES \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfixed * pTrace_params = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameterxvOES GL_ENTRYPOINT(glTexParameterxvOES)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTranslatexOES \
   GLfixed x = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed y = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed z = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTranslatexOES GL_ENTRYPOINT(glTranslatexOES)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2xOES \
   GLfixed x = trace_packet.get_param_value<GLfixed>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2xOES GL_ENTRYPOINT(glVertex2xOES)(x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3xOES \
   GLfixed x = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed y = trace_packet.get_param_value<GLfixed>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3xOES GL_ENTRYPOINT(glVertex3xOES)(x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4xOES \
   GLfixed x = trace_packet.get_param_value<GLfixed>(0); \
   GLfixed y = trace_packet.get_param_value<GLfixed>(1); \
   GLfixed z = trace_packet.get_param_value<GLfixed>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4xOES GL_ENTRYPOINT(glVertex4xOES)(x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex2xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex2xvOES GL_ENTRYPOINT(glVertex2xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex3xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex3xvOES GL_ENTRYPOINT(glVertex3xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertex4xvOES \
   const GLfixed * pTrace_coords = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertex4xvOES GL_ENTRYPOINT(glVertex4xvOES)(pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthRangefOES \
   GLclampf n = trace_packet.get_param_value<GLclampf>(0); \
   GLclampf f = trace_packet.get_param_value<GLclampf>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthRangefOES GL_ENTRYPOINT(glDepthRangefOES)(n, f)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFrustumfOES \
   GLfloat l = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat n = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat f = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glFrustumfOES GL_ENTRYPOINT(glFrustumfOES)(l, r, b, t, n, f)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glOrthofOES \
   GLfloat l = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat r = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat b = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat t = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat n = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat f = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glOrthofOES GL_ENTRYPOINT(glOrthofOES)(l, r, b, t, n, f)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClipPlanefOES \
   GLenum plane = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_equation = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glClipPlanefOES GL_ENTRYPOINT(glClipPlanefOES)(plane, pTrace_equation)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearDepthfOES \
   GLclampf depth = trace_packet.get_param_value<GLclampf>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearDepthfOES GL_ENTRYPOINT(glClearDepthfOES)(depth)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetClipPlanefOES \
   GLenum plane = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_equation = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetClipPlanefOES GL_ENTRYPOINT(glGetClipPlanefOES)(plane, pReplay_equation)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glQueryMatrixxOES \
   const GLfixed * pTrace_mantissa = reinterpret_cast<const GLfixed *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLint * pTrace_exponent = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glQueryMatrixxOES GL_ENTRYPOINT(glQueryMatrixxOES)(pReplay_mantissa, pReplay_exponent)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthBoundsEXT \
   GLclampd zmin = trace_packet.get_param_value<GLclampd>(0); \
   GLclampd zmax = trace_packet.get_param_value<GLclampd>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthBoundsEXT GL_ENTRYPOINT(glDepthBoundsEXT)(zmin, zmax)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquationSeparateEXT \
   GLenum modeRGB = trace_packet.get_param_value<GLenum>(0); \
   GLenum modeAlpha = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquationSeparateEXT GL_ENTRYPOINT(glBlendEquationSeparateEXT)(modeRGB, modeAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsRenderbufferEXT \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsRenderbufferEXT GL_ENTRYPOINT(glIsRenderbufferEXT)(renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindRenderbufferEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindRenderbufferEXT GL_ENTRYPOINT(glBindRenderbufferEXT)(target, renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteRenderbuffersEXT \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_renderbuffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteRenderbuffersEXT GL_ENTRYPOINT(glDeleteRenderbuffersEXT)(n, pTrace_renderbuffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenRenderbuffersEXT \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_renderbuffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenRenderbuffersEXT GL_ENTRYPOINT(glGenRenderbuffersEXT)(n, pReplay_renderbuffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRenderbufferStorageEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glRenderbufferStorageEXT GL_ENTRYPOINT(glRenderbufferStorageEXT)(target, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetRenderbufferParameterivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetRenderbufferParameterivEXT GL_ENTRYPOINT(glGetRenderbufferParameterivEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsFramebufferEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsFramebufferEXT GL_ENTRYPOINT(glIsFramebufferEXT)(framebuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindFramebufferEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindFramebufferEXT GL_ENTRYPOINT(glBindFramebufferEXT)(target, framebuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteFramebuffersEXT \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_framebuffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteFramebuffersEXT GL_ENTRYPOINT(glDeleteFramebuffersEXT)(n, pTrace_framebuffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenFramebuffersEXT \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_framebuffers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenFramebuffersEXT GL_ENTRYPOINT(glGenFramebuffersEXT)(n, pReplay_framebuffers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCheckFramebufferStatusEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glCheckFramebufferStatusEXT GL_ENTRYPOINT(glCheckFramebufferStatusEXT)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTexture1DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum textarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint texture = trace_packet.get_param_value<GLuint>(3); \
   GLint level = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTexture1DEXT GL_ENTRYPOINT(glFramebufferTexture1DEXT)(target, attachment, textarget, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTexture2DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum textarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint texture = trace_packet.get_param_value<GLuint>(3); \
   GLint level = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTexture2DEXT GL_ENTRYPOINT(glFramebufferTexture2DEXT)(target, attachment, textarget, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTexture3DEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum textarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint texture = trace_packet.get_param_value<GLuint>(3); \
   GLint level = trace_packet.get_param_value<GLint>(4); \
   GLint zoffset = trace_packet.get_param_value<GLint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTexture3DEXT GL_ENTRYPOINT(glFramebufferTexture3DEXT)(target, attachment, textarget, texture, level, zoffset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferRenderbufferEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum renderbuffertarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferRenderbufferEXT GL_ENTRYPOINT(glFramebufferRenderbufferEXT)(target, attachment, renderbuffertarget, renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFramebufferAttachmentParameterivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFramebufferAttachmentParameterivEXT GL_ENTRYPOINT(glGetFramebufferAttachmentParameterivEXT)(target, attachment, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenerateMipmapEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenerateMipmapEXT GL_ENTRYPOINT(glGenerateMipmapEXT)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStringMarkerGREMEDY \
   GLsizei len = trace_packet.get_param_value<GLsizei>(0); \
   const GLvoid * pTrace_string = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glStringMarkerGREMEDY GL_ENTRYPOINT(glStringMarkerGREMEDY)(len, pTrace_string)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilClearTagEXT \
   GLsizei stencilTagBits = trace_packet.get_param_value<GLsizei>(0); \
   GLuint stencilClearTag = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilClearTagEXT GL_ENTRYPOINT(glStencilClearTagEXT)(stencilTagBits, stencilClearTag)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlitFramebufferEXT \
   GLint srcX0 = trace_packet.get_param_value<GLint>(0); \
   GLint srcY0 = trace_packet.get_param_value<GLint>(1); \
   GLint srcX1 = trace_packet.get_param_value<GLint>(2); \
   GLint srcY1 = trace_packet.get_param_value<GLint>(3); \
   GLint dstX0 = trace_packet.get_param_value<GLint>(4); \
   GLint dstY0 = trace_packet.get_param_value<GLint>(5); \
   GLint dstX1 = trace_packet.get_param_value<GLint>(6); \
   GLint dstY1 = trace_packet.get_param_value<GLint>(7); \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(8); \
   GLenum filter = trace_packet.get_param_value<GLenum>(9);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlitFramebufferEXT GL_ENTRYPOINT(glBlitFramebufferEXT)(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRenderbufferStorageMultisampleEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glRenderbufferStorageMultisampleEXT GL_ENTRYPOINT(glRenderbufferStorageMultisampleEXT)(target, samples, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryObjecti64vEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint64EXT * pTrace_params = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryObjecti64vEXT GL_ENTRYPOINT(glGetQueryObjecti64vEXT)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetQueryObjectui64vEXT \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint64EXT * pTrace_params = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetQueryObjectui64vEXT GL_ENTRYPOINT(glGetQueryObjectui64vEXT)(id, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParameters4fvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParameters4fvEXT GL_ENTRYPOINT(glProgramEnvParameters4fvEXT)(target, index, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParameters4fvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParameters4fvEXT GL_ENTRYPOINT(glProgramLocalParameters4fvEXT)(target, index, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBufferParameteriAPPLE \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint param = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBufferParameteriAPPLE GL_ENTRYPOINT(glBufferParameteriAPPLE)(target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFlushMappedBufferRangeAPPLE \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glFlushMappedBufferRangeAPPLE GL_ENTRYPOINT(glFlushMappedBufferRangeAPPLE)(target, offset, size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParameterI4iNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLint z = trace_packet.get_param_value<GLint>(4); \
   GLint w = trace_packet.get_param_value<GLint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParameterI4iNV GL_ENTRYPOINT(glProgramLocalParameterI4iNV)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParameterI4ivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParameterI4ivNV GL_ENTRYPOINT(glProgramLocalParameterI4ivNV)(target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParametersI4ivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParametersI4ivNV GL_ENTRYPOINT(glProgramLocalParametersI4ivNV)(target, index, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParameterI4uiNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint x = trace_packet.get_param_value<GLuint>(2); \
   GLuint y = trace_packet.get_param_value<GLuint>(3); \
   GLuint z = trace_packet.get_param_value<GLuint>(4); \
   GLuint w = trace_packet.get_param_value<GLuint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParameterI4uiNV GL_ENTRYPOINT(glProgramLocalParameterI4uiNV)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParameterI4uivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParameterI4uivNV GL_ENTRYPOINT(glProgramLocalParameterI4uivNV)(target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramLocalParametersI4uivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramLocalParametersI4uivNV GL_ENTRYPOINT(glProgramLocalParametersI4uivNV)(target, index, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParameterI4iNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLint x = trace_packet.get_param_value<GLint>(2); \
   GLint y = trace_packet.get_param_value<GLint>(3); \
   GLint z = trace_packet.get_param_value<GLint>(4); \
   GLint w = trace_packet.get_param_value<GLint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParameterI4iNV GL_ENTRYPOINT(glProgramEnvParameterI4iNV)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParameterI4ivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParameterI4ivNV GL_ENTRYPOINT(glProgramEnvParameterI4ivNV)(target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParametersI4ivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParametersI4ivNV GL_ENTRYPOINT(glProgramEnvParametersI4ivNV)(target, index, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParameterI4uiNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint x = trace_packet.get_param_value<GLuint>(2); \
   GLuint y = trace_packet.get_param_value<GLuint>(3); \
   GLuint z = trace_packet.get_param_value<GLuint>(4); \
   GLuint w = trace_packet.get_param_value<GLuint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParameterI4uiNV GL_ENTRYPOINT(glProgramEnvParameterI4uiNV)(target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParameterI4uivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParameterI4uivNV GL_ENTRYPOINT(glProgramEnvParameterI4uivNV)(target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramEnvParametersI4uivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramEnvParametersI4uivNV GL_ENTRYPOINT(glProgramEnvParametersI4uivNV)(target, index, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramLocalParameterIivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramLocalParameterIivNV GL_ENTRYPOINT(glGetProgramLocalParameterIivNV)(target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramLocalParameterIuivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramLocalParameterIuivNV GL_ENTRYPOINT(glGetProgramLocalParameterIuivNV)(target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramEnvParameterIivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramEnvParameterIivNV GL_ENTRYPOINT(glGetProgramEnvParameterIivNV)(target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramEnvParameterIuivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramEnvParameterIuivNV GL_ENTRYPOINT(glGetProgramEnvParameterIuivNV)(target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramVertexLimitNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLint limit = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramVertexLimitNV GL_ENTRYPOINT(glProgramVertexLimitNV)(target, limit)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTextureEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTextureEXT GL_ENTRYPOINT(glFramebufferTextureEXT)(target, attachment, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTextureLayerEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3); \
   GLint layer = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTextureLayerEXT GL_ENTRYPOINT(glFramebufferTextureLayerEXT)(target, attachment, texture, level, layer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferTextureFaceEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3); \
   GLenum face = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferTextureFaceEXT GL_ENTRYPOINT(glFramebufferTextureFaceEXT)(target, attachment, texture, level, face)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramParameteriEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint value = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramParameteriEXT GL_ENTRYPOINT(glProgramParameteriEXT)(program, pname, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI1iEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI1iEXT GL_ENTRYPOINT(glVertexAttribI1iEXT)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI2iEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1); \
   GLint y = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI2iEXT GL_ENTRYPOINT(glVertexAttribI2iEXT)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI3iEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1); \
   GLint y = trace_packet.get_param_value<GLint>(2); \
   GLint z = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI3iEXT GL_ENTRYPOINT(glVertexAttribI3iEXT)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4iEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint x = trace_packet.get_param_value<GLint>(1); \
   GLint y = trace_packet.get_param_value<GLint>(2); \
   GLint z = trace_packet.get_param_value<GLint>(3); \
   GLint w = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4iEXT GL_ENTRYPOINT(glVertexAttribI4iEXT)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI1uiEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint x = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI1uiEXT GL_ENTRYPOINT(glVertexAttribI1uiEXT)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI2uiEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint x = trace_packet.get_param_value<GLuint>(1); \
   GLuint y = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI2uiEXT GL_ENTRYPOINT(glVertexAttribI2uiEXT)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI3uiEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint x = trace_packet.get_param_value<GLuint>(1); \
   GLuint y = trace_packet.get_param_value<GLuint>(2); \
   GLuint z = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI3uiEXT GL_ENTRYPOINT(glVertexAttribI3uiEXT)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4uiEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint x = trace_packet.get_param_value<GLuint>(1); \
   GLuint y = trace_packet.get_param_value<GLuint>(2); \
   GLuint z = trace_packet.get_param_value<GLuint>(3); \
   GLuint w = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4uiEXT GL_ENTRYPOINT(glVertexAttribI4uiEXT)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI1ivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI1ivEXT GL_ENTRYPOINT(glVertexAttribI1ivEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI2ivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI2ivEXT GL_ENTRYPOINT(glVertexAttribI2ivEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI3ivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI3ivEXT GL_ENTRYPOINT(glVertexAttribI3ivEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4ivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_v = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4ivEXT GL_ENTRYPOINT(glVertexAttribI4ivEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI1uivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI1uivEXT GL_ENTRYPOINT(glVertexAttribI1uivEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI2uivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI2uivEXT GL_ENTRYPOINT(glVertexAttribI2uivEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI3uivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI3uivEXT GL_ENTRYPOINT(glVertexAttribI3uivEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4uivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_v = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4uivEXT GL_ENTRYPOINT(glVertexAttribI4uivEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4bvEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLbyte * pTrace_v = reinterpret_cast<const GLbyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4bvEXT GL_ENTRYPOINT(glVertexAttribI4bvEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4svEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLshort * pTrace_v = reinterpret_cast<const GLshort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4svEXT GL_ENTRYPOINT(glVertexAttribI4svEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4ubvEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLubyte * pTrace_v = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4ubvEXT GL_ENTRYPOINT(glVertexAttribI4ubvEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribI4usvEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLushort * pTrace_v = reinterpret_cast<const GLushort *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribI4usvEXT GL_ENTRYPOINT(glVertexAttribI4usvEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribIPointerEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribIPointerEXT GL_ENTRYPOINT(glVertexAttribIPointerEXT)(index, size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribIivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribIivEXT GL_ENTRYPOINT(glGetVertexAttribIivEXT)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribIuivEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribIuivEXT GL_ENTRYPOINT(glGetVertexAttribIuivEXT)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformuivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformuivEXT GL_ENTRYPOINT(glGetUniformuivEXT)(program, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindFragDataLocationEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint color = trace_packet.get_param_value<GLuint>(1); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glBindFragDataLocationEXT GL_ENTRYPOINT(glBindFragDataLocationEXT)(program, color, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFragDataLocationEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFragDataLocationEXT GL_ENTRYPOINT(glGetFragDataLocationEXT)(program, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1uiEXT \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1uiEXT GL_ENTRYPOINT(glUniform1uiEXT)(location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2uiEXT \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(1); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2uiEXT GL_ENTRYPOINT(glUniform2uiEXT)(location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3uiEXT \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(1); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v2 = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3uiEXT GL_ENTRYPOINT(glUniform3uiEXT)(location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4uiEXT \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(1); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v2 = trace_packet.get_param_value<GLuint>(3); \
   GLuint v3 = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4uiEXT GL_ENTRYPOINT(glUniform4uiEXT)(location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1uivEXT \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1uivEXT GL_ENTRYPOINT(glUniform1uivEXT)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2uivEXT \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2uivEXT GL_ENTRYPOINT(glUniform2uivEXT)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3uivEXT \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3uivEXT GL_ENTRYPOINT(glUniform3uivEXT)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4uivEXT \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4uivEXT GL_ENTRYPOINT(glUniform4uivEXT)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawArraysInstancedEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLint start = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawArraysInstancedEXT GL_ENTRYPOINT(glDrawArraysInstancedEXT)(mode, start, count, primcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawElementsInstancedEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_indices = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawElementsInstancedEXT GL_ENTRYPOINT(glDrawElementsInstancedEXT)(mode, count, type, pTrace_indices, primcount)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexBufferEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexBufferEXT GL_ENTRYPOINT(glTexBufferEXT)(target, internalformat, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthRangedNV \
   GLdouble zNear = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble zFar = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthRangedNV GL_ENTRYPOINT(glDepthRangedNV)(zNear, zFar)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearDepthdNV \
   GLdouble depth = trace_packet.get_param_value<GLdouble>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearDepthdNV GL_ENTRYPOINT(glClearDepthdNV)(depth)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDepthBoundsdNV \
   GLdouble zmin = trace_packet.get_param_value<GLdouble>(0); \
   GLdouble zmax = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDepthBoundsdNV GL_ENTRYPOINT(glDepthBoundsdNV)(zmin, zmax)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glRenderbufferStorageMultisampleCoverageNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei coverageSamples = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei colorSamples = trace_packet.get_param_value<GLsizei>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glRenderbufferStorageMultisampleCoverageNV GL_ENTRYPOINT(glRenderbufferStorageMultisampleCoverageNV)(target, coverageSamples, colorSamples, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramBufferParametersfvNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint bindingIndex = trace_packet.get_param_value<GLuint>(1); \
   GLuint wordIndex = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramBufferParametersfvNV GL_ENTRYPOINT(glProgramBufferParametersfvNV)(target, bindingIndex, wordIndex, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramBufferParametersIivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint bindingIndex = trace_packet.get_param_value<GLuint>(1); \
   GLuint wordIndex = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramBufferParametersIivNV GL_ENTRYPOINT(glProgramBufferParametersIivNV)(target, bindingIndex, wordIndex, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramBufferParametersIuivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint bindingIndex = trace_packet.get_param_value<GLuint>(1); \
   GLuint wordIndex = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramBufferParametersIuivNV GL_ENTRYPOINT(glProgramBufferParametersIuivNV)(target, bindingIndex, wordIndex, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorMaskIndexedEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLboolean r = trace_packet.get_param_value<GLboolean>(1); \
   GLboolean g = trace_packet.get_param_value<GLboolean>(2); \
   GLboolean b = trace_packet.get_param_value<GLboolean>(3); \
   GLboolean a = trace_packet.get_param_value<GLboolean>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorMaskIndexedEXT GL_ENTRYPOINT(glColorMaskIndexedEXT)(index, r, g, b, a)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBooleanIndexedvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLboolean * pTrace_data = reinterpret_cast<const GLboolean *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBooleanIndexedvEXT GL_ENTRYPOINT(glGetBooleanIndexedvEXT)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetIntegerIndexedvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLint * pTrace_data = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetIntegerIndexedvEXT GL_ENTRYPOINT(glGetIntegerIndexedvEXT)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnableIndexedEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEnableIndexedEXT GL_ENTRYPOINT(glEnableIndexedEXT)(target, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDisableIndexedEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDisableIndexedEXT GL_ENTRYPOINT(glDisableIndexedEXT)(target, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsEnabledIndexedEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsEnabledIndexedEXT GL_ENTRYPOINT(glIsEnabledIndexedEXT)(target, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginTransformFeedbackNV \
   GLenum primitiveMode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginTransformFeedbackNV GL_ENTRYPOINT(glBeginTransformFeedbackNV)(primitiveMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndTransformFeedbackNV  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndTransformFeedbackNV GL_ENTRYPOINT(glEndTransformFeedbackNV)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTransformFeedbackAttribsNV \
   GLsizei count = trace_packet.get_param_value<GLsizei>(0); \
   const GLint * pTrace_attribs = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLenum bufferMode = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTransformFeedbackAttribsNV GL_ENTRYPOINT(glTransformFeedbackAttribsNV)(count, pTrace_attribs, bufferMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBufferRangeNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(3); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBufferRangeNV GL_ENTRYPOINT(glBindBufferRangeNV)(target, index, buffer, offset, size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBufferOffsetNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBufferOffsetNV GL_ENTRYPOINT(glBindBufferOffsetNV)(target, index, buffer, offset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBufferBaseNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBufferBaseNV GL_ENTRYPOINT(glBindBufferBaseNV)(target, index, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTransformFeedbackVaryingsNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint * pTrace_locations = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLenum bufferMode = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTransformFeedbackVaryingsNV GL_ENTRYPOINT(glTransformFeedbackVaryingsNV)(program, count, pTrace_locations, bufferMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glActiveVaryingNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glActiveVaryingNV GL_ENTRYPOINT(glActiveVaryingNV)(program, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVaryingLocationNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVaryingLocationNV GL_ENTRYPOINT(glGetVaryingLocationNV)(program, pTrace_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetActiveVaryingNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLsizei * pTrace_size = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLenum * pTrace_type = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetActiveVaryingNV GL_ENTRYPOINT(glGetActiveVaryingNV)(program, index, bufSize, pReplay_length, pReplay_size, pReplay_type, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTransformFeedbackVaryingNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLint * pTrace_location = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTransformFeedbackVaryingNV GL_ENTRYPOINT(glGetTransformFeedbackVaryingNV)(program, index, pReplay_location)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTransformFeedbackStreamAttribsNV \
   GLsizei count = trace_packet.get_param_value<GLsizei>(0); \
   const GLint * pTrace_attribs = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLsizei nbuffers = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_bufstreams = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLenum bufferMode = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glTransformFeedbackStreamAttribsNV GL_ENTRYPOINT(glTransformFeedbackStreamAttribsNV)(count, pTrace_attribs, nbuffers, pTrace_bufstreams, bufferMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformBufferEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformBufferEXT GL_ENTRYPOINT(glUniformBufferEXT)(program, location, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformBufferSizeEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformBufferSizeEXT GL_ENTRYPOINT(glGetUniformBufferSizeEXT)(program, location)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformOffsetEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformOffsetEXT GL_ENTRYPOINT(glGetUniformOffsetEXT)(program, location)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameterIivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameterIivEXT GL_ENTRYPOINT(glTexParameterIivEXT)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexParameterIuivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTexParameterIuivEXT GL_ENTRYPOINT(glTexParameterIuivEXT)(target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexParameterIivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexParameterIivEXT GL_ENTRYPOINT(glGetTexParameterIivEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexParameterIuivEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexParameterIuivEXT GL_ENTRYPOINT(glGetTexParameterIuivEXT)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearColorIiEXT \
   GLint red = trace_packet.get_param_value<GLint>(0); \
   GLint green = trace_packet.get_param_value<GLint>(1); \
   GLint blue = trace_packet.get_param_value<GLint>(2); \
   GLint alpha = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearColorIiEXT GL_ENTRYPOINT(glClearColorIiEXT)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearColorIuiEXT \
   GLuint red = trace_packet.get_param_value<GLuint>(0); \
   GLuint green = trace_packet.get_param_value<GLuint>(1); \
   GLuint blue = trace_packet.get_param_value<GLuint>(2); \
   GLuint alpha = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glClearColorIuiEXT GL_ENTRYPOINT(glClearColorIuiEXT)(red, green, blue, alpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFrameTerminatorGREMEDY  

#define VOGL_REPLAY_CALL_GL_HELPER_glFrameTerminatorGREMEDY GL_ENTRYPOINT(glFrameTerminatorGREMEDY)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginConditionalRenderNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginConditionalRenderNV GL_ENTRYPOINT(glBeginConditionalRenderNV)(id, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndConditionalRenderNV  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndConditionalRenderNV GL_ENTRYPOINT(glEndConditionalRenderNV)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPresentFrameKeyedNV \
   GLuint video_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint64EXT minPresentTime = trace_packet.get_param_value<GLuint64EXT>(1); \
   GLuint beginPresentTimeId = trace_packet.get_param_value<GLuint>(2); \
   GLuint presentDurationId = trace_packet.get_param_value<GLuint>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   GLenum target0 = trace_packet.get_param_value<GLenum>(5); \
   GLuint fill0 = trace_packet.get_param_value<GLuint>(6); \
   GLuint key0 = trace_packet.get_param_value<GLuint>(7); \
   GLenum target1 = trace_packet.get_param_value<GLenum>(8); \
   GLuint fill1 = trace_packet.get_param_value<GLuint>(9); \
   GLuint key1 = trace_packet.get_param_value<GLuint>(10);

#define VOGL_REPLAY_CALL_GL_HELPER_glPresentFrameKeyedNV GL_ENTRYPOINT(glPresentFrameKeyedNV)(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPresentFrameDualFillNV \
   GLuint video_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint64EXT minPresentTime = trace_packet.get_param_value<GLuint64EXT>(1); \
   GLuint beginPresentTimeId = trace_packet.get_param_value<GLuint>(2); \
   GLuint presentDurationId = trace_packet.get_param_value<GLuint>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   GLenum target0 = trace_packet.get_param_value<GLenum>(5); \
   GLuint fill0 = trace_packet.get_param_value<GLuint>(6); \
   GLenum target1 = trace_packet.get_param_value<GLenum>(7); \
   GLuint fill1 = trace_packet.get_param_value<GLuint>(8); \
   GLenum target2 = trace_packet.get_param_value<GLenum>(9); \
   GLuint fill2 = trace_packet.get_param_value<GLuint>(10); \
   GLenum target3 = trace_packet.get_param_value<GLenum>(11); \
   GLuint fill3 = trace_packet.get_param_value<GLuint>(12);

#define VOGL_REPLAY_CALL_GL_HELPER_glPresentFrameDualFillNV GL_ENTRYPOINT(glPresentFrameDualFillNV)(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVideoivNV \
   GLuint video_slot = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVideoivNV GL_ENTRYPOINT(glGetVideoivNV)(video_slot, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVideouivNV \
   GLuint video_slot = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVideouivNV GL_ENTRYPOINT(glGetVideouivNV)(video_slot, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVideoi64vNV \
   GLuint video_slot = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint64EXT * pTrace_params = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVideoi64vNV GL_ENTRYPOINT(glGetVideoi64vNV)(video_slot, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVideoui64vNV \
   GLuint video_slot = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint64EXT * pTrace_params = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVideoui64vNV GL_ENTRYPOINT(glGetVideoui64vNV)(video_slot, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginTransformFeedbackEXT \
   GLenum primitiveMode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginTransformFeedbackEXT GL_ENTRYPOINT(glBeginTransformFeedbackEXT)(primitiveMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndTransformFeedbackEXT  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndTransformFeedbackEXT GL_ENTRYPOINT(glEndTransformFeedbackEXT)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBufferRangeEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(3); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBufferRangeEXT GL_ENTRYPOINT(glBindBufferRangeEXT)(target, index, buffer, offset, size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBufferOffsetEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBufferOffsetEXT GL_ENTRYPOINT(glBindBufferOffsetEXT)(target, index, buffer, offset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindBufferBaseEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindBufferBaseEXT GL_ENTRYPOINT(glBindBufferBaseEXT)(target, index, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTransformFeedbackVaryingsEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLchar* * pTrace_varyings = reinterpret_cast<const GLchar* *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLenum bufferMode = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTransformFeedbackVaryingsEXT GL_ENTRYPOINT(glTransformFeedbackVaryingsEXT)(program, count, pTrace_varyings, bufferMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTransformFeedbackVaryingEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLsizei * pTrace_size = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLenum * pTrace_type = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLchar * pTrace_name = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTransformFeedbackVaryingEXT GL_ENTRYPOINT(glGetTransformFeedbackVaryingEXT)(program, index, bufSize, pReplay_length, pReplay_size, pReplay_type, pReplay_name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClientAttribDefaultEXT \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glClientAttribDefaultEXT GL_ENTRYPOINT(glClientAttribDefaultEXT)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPushClientAttribDefaultEXT \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPushClientAttribDefaultEXT GL_ENTRYPOINT(glPushClientAttribDefaultEXT)(mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixLoadfEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixLoadfEXT GL_ENTRYPOINT(glMatrixLoadfEXT)(mode, pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixLoaddEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixLoaddEXT GL_ENTRYPOINT(glMatrixLoaddEXT)(mode, pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixMultfEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixMultfEXT GL_ENTRYPOINT(glMatrixMultfEXT)(mode, pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixMultdEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixMultdEXT GL_ENTRYPOINT(glMatrixMultdEXT)(mode, pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixLoadIdentityEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixLoadIdentityEXT GL_ENTRYPOINT(glMatrixLoadIdentityEXT)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixRotatefEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLfloat angle = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixRotatefEXT GL_ENTRYPOINT(glMatrixRotatefEXT)(mode, angle, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixRotatedEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLdouble angle = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixRotatedEXT GL_ENTRYPOINT(glMatrixRotatedEXT)(mode, angle, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixScalefEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixScalefEXT GL_ENTRYPOINT(glMatrixScalefEXT)(mode, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixScaledEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixScaledEXT GL_ENTRYPOINT(glMatrixScaledEXT)(mode, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixTranslatefEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixTranslatefEXT GL_ENTRYPOINT(glMatrixTranslatefEXT)(mode, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixTranslatedEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixTranslatedEXT GL_ENTRYPOINT(glMatrixTranslatedEXT)(mode, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixFrustumEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLdouble left = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble right = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble bottom = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble top = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble zNear = trace_packet.get_param_value<GLdouble>(5); \
   GLdouble zFar = trace_packet.get_param_value<GLdouble>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixFrustumEXT GL_ENTRYPOINT(glMatrixFrustumEXT)(mode, left, right, bottom, top, zNear, zFar)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixOrthoEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLdouble left = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble right = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble bottom = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble top = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble zNear = trace_packet.get_param_value<GLdouble>(5); \
   GLdouble zFar = trace_packet.get_param_value<GLdouble>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixOrthoEXT GL_ENTRYPOINT(glMatrixOrthoEXT)(mode, left, right, bottom, top, zNear, zFar)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixPopEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixPopEXT GL_ENTRYPOINT(glMatrixPopEXT)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixPushEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixPushEXT GL_ENTRYPOINT(glMatrixPushEXT)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixLoadTransposefEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixLoadTransposefEXT GL_ENTRYPOINT(glMatrixLoadTransposefEXT)(mode, pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixLoadTransposedEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixLoadTransposedEXT GL_ENTRYPOINT(glMatrixLoadTransposedEXT)(mode, pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixMultTransposefEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLfloat * pTrace_m = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixMultTransposefEXT GL_ENTRYPOINT(glMatrixMultTransposefEXT)(mode, pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMatrixMultTransposedEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLdouble * pTrace_m = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glMatrixMultTransposedEXT GL_ENTRYPOINT(glMatrixMultTransposedEXT)(mode, pTrace_m)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureParameterfEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureParameterfEXT GL_ENTRYPOINT(glTextureParameterfEXT)(texture, target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureParameterfvEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureParameterfvEXT GL_ENTRYPOINT(glTextureParameterfvEXT)(texture, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureParameteriEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLint param = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureParameteriEXT GL_ENTRYPOINT(glTextureParameteriEXT)(texture, target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureParameterivEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureParameterivEXT GL_ENTRYPOINT(glTextureParameterivEXT)(texture, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureImage1DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLint border = trace_packet.get_param_value<GLint>(5); \
   GLenum format = trace_packet.get_param_value<GLenum>(6); \
   GLenum type = trace_packet.get_param_value<GLenum>(7); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureImage1DEXT GL_ENTRYPOINT(glTextureImage1DEXT)(texture, target, level, internalformat, width, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureImage2DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6); \
   GLenum format = trace_packet.get_param_value<GLenum>(7); \
   GLenum type = trace_packet.get_param_value<GLenum>(8); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureImage2DEXT GL_ENTRYPOINT(glTextureImage2DEXT)(texture, target, level, internalformat, width, height, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureSubImage1DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLenum format = trace_packet.get_param_value<GLenum>(5); \
   GLenum type = trace_packet.get_param_value<GLenum>(6); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureSubImage1DEXT GL_ENTRYPOINT(glTextureSubImage1DEXT)(texture, target, level, xoffset, width, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureSubImage2DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLenum format = trace_packet.get_param_value<GLenum>(7); \
   GLenum type = trace_packet.get_param_value<GLenum>(8); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureSubImage2DEXT GL_ENTRYPOINT(glTextureSubImage2DEXT)(texture, target, level, xoffset, yoffset, width, height, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTextureImage1DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLint x = trace_packet.get_param_value<GLint>(4); \
   GLint y = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLint border = trace_packet.get_param_value<GLint>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTextureImage1DEXT GL_ENTRYPOINT(glCopyTextureImage1DEXT)(texture, target, level, internalformat, x, y, width, border)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTextureImage2DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLint x = trace_packet.get_param_value<GLint>(4); \
   GLint y = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(7); \
   GLint border = trace_packet.get_param_value<GLint>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTextureImage2DEXT GL_ENTRYPOINT(glCopyTextureImage2DEXT)(texture, target, level, internalformat, x, y, width, height, border)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTextureSubImage1DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint x = trace_packet.get_param_value<GLint>(4); \
   GLint y = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTextureSubImage1DEXT GL_ENTRYPOINT(glCopyTextureSubImage1DEXT)(texture, target, level, xoffset, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTextureSubImage2DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLint x = trace_packet.get_param_value<GLint>(5); \
   GLint y = trace_packet.get_param_value<GLint>(6); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(7); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTextureSubImage2DEXT GL_ENTRYPOINT(glCopyTextureSubImage2DEXT)(texture, target, level, xoffset, yoffset, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTextureImageEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum format = trace_packet.get_param_value<GLenum>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTextureImageEXT GL_ENTRYPOINT(glGetTextureImageEXT)(texture, target, level, format, type, pReplay_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTextureParameterfvEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTextureParameterfvEXT GL_ENTRYPOINT(glGetTextureParameterfvEXT)(texture, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTextureParameterivEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTextureParameterivEXT GL_ENTRYPOINT(glGetTextureParameterivEXT)(texture, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTextureLevelParameterfvEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum pname = trace_packet.get_param_value<GLenum>(3); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTextureLevelParameterfvEXT GL_ENTRYPOINT(glGetTextureLevelParameterfvEXT)(texture, target, level, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTextureLevelParameterivEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum pname = trace_packet.get_param_value<GLenum>(3); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTextureLevelParameterivEXT GL_ENTRYPOINT(glGetTextureLevelParameterivEXT)(texture, target, level, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureImage3DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(6); \
   GLint border = trace_packet.get_param_value<GLint>(7); \
   GLenum format = trace_packet.get_param_value<GLenum>(8); \
   GLenum type = trace_packet.get_param_value<GLenum>(9); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(10));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureImage3DEXT GL_ENTRYPOINT(glTextureImage3DEXT)(texture, target, level, internalformat, width, height, depth, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureSubImage3DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLint zoffset = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(7); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(8); \
   GLenum format = trace_packet.get_param_value<GLenum>(9); \
   GLenum type = trace_packet.get_param_value<GLenum>(10); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(11));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureSubImage3DEXT GL_ENTRYPOINT(glTextureSubImage3DEXT)(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyTextureSubImage3DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLint zoffset = trace_packet.get_param_value<GLint>(5); \
   GLint x = trace_packet.get_param_value<GLint>(6); \
   GLint y = trace_packet.get_param_value<GLint>(7); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(8); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(9);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyTextureSubImage3DEXT GL_ENTRYPOINT(glCopyTextureSubImage3DEXT)(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexParameterfEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexParameterfEXT GL_ENTRYPOINT(glMultiTexParameterfEXT)(texunit, target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexParameterfvEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexParameterfvEXT GL_ENTRYPOINT(glMultiTexParameterfvEXT)(texunit, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexParameteriEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLint param = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexParameteriEXT GL_ENTRYPOINT(glMultiTexParameteriEXT)(texunit, target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexParameterivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexParameterivEXT GL_ENTRYPOINT(glMultiTexParameterivEXT)(texunit, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexImage1DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLint border = trace_packet.get_param_value<GLint>(5); \
   GLenum format = trace_packet.get_param_value<GLenum>(6); \
   GLenum type = trace_packet.get_param_value<GLenum>(7); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexImage1DEXT GL_ENTRYPOINT(glMultiTexImage1DEXT)(texunit, target, level, internalformat, width, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexImage2DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6); \
   GLenum format = trace_packet.get_param_value<GLenum>(7); \
   GLenum type = trace_packet.get_param_value<GLenum>(8); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexImage2DEXT GL_ENTRYPOINT(glMultiTexImage2DEXT)(texunit, target, level, internalformat, width, height, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexSubImage1DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLenum format = trace_packet.get_param_value<GLenum>(5); \
   GLenum type = trace_packet.get_param_value<GLenum>(6); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexSubImage1DEXT GL_ENTRYPOINT(glMultiTexSubImage1DEXT)(texunit, target, level, xoffset, width, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexSubImage2DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLenum format = trace_packet.get_param_value<GLenum>(7); \
   GLenum type = trace_packet.get_param_value<GLenum>(8); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexSubImage2DEXT GL_ENTRYPOINT(glMultiTexSubImage2DEXT)(texunit, target, level, xoffset, yoffset, width, height, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyMultiTexImage1DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLint x = trace_packet.get_param_value<GLint>(4); \
   GLint y = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLint border = trace_packet.get_param_value<GLint>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyMultiTexImage1DEXT GL_ENTRYPOINT(glCopyMultiTexImage1DEXT)(texunit, target, level, internalformat, x, y, width, border)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyMultiTexImage2DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLint x = trace_packet.get_param_value<GLint>(4); \
   GLint y = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(7); \
   GLint border = trace_packet.get_param_value<GLint>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyMultiTexImage2DEXT GL_ENTRYPOINT(glCopyMultiTexImage2DEXT)(texunit, target, level, internalformat, x, y, width, height, border)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyMultiTexSubImage1DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint x = trace_packet.get_param_value<GLint>(4); \
   GLint y = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyMultiTexSubImage1DEXT GL_ENTRYPOINT(glCopyMultiTexSubImage1DEXT)(texunit, target, level, xoffset, x, y, width)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyMultiTexSubImage2DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLint x = trace_packet.get_param_value<GLint>(5); \
   GLint y = trace_packet.get_param_value<GLint>(6); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(7); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyMultiTexSubImage2DEXT GL_ENTRYPOINT(glCopyMultiTexSubImage2DEXT)(texunit, target, level, xoffset, yoffset, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexImageEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum format = trace_packet.get_param_value<GLenum>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexImageEXT GL_ENTRYPOINT(glGetMultiTexImageEXT)(texunit, target, level, format, type, pReplay_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexParameterfvEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexParameterfvEXT GL_ENTRYPOINT(glGetMultiTexParameterfvEXT)(texunit, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexParameterivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexParameterivEXT GL_ENTRYPOINT(glGetMultiTexParameterivEXT)(texunit, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexLevelParameterfvEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum pname = trace_packet.get_param_value<GLenum>(3); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexLevelParameterfvEXT GL_ENTRYPOINT(glGetMultiTexLevelParameterfvEXT)(texunit, target, level, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexLevelParameterivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum pname = trace_packet.get_param_value<GLenum>(3); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexLevelParameterivEXT GL_ENTRYPOINT(glGetMultiTexLevelParameterivEXT)(texunit, target, level, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexImage3DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(6); \
   GLint border = trace_packet.get_param_value<GLint>(7); \
   GLenum format = trace_packet.get_param_value<GLenum>(8); \
   GLenum type = trace_packet.get_param_value<GLenum>(9); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(10));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexImage3DEXT GL_ENTRYPOINT(glMultiTexImage3DEXT)(texunit, target, level, internalformat, width, height, depth, border, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexSubImage3DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLint zoffset = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(7); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(8); \
   GLenum format = trace_packet.get_param_value<GLenum>(9); \
   GLenum type = trace_packet.get_param_value<GLenum>(10); \
   const GLvoid * pTrace_pixels = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(11));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexSubImage3DEXT GL_ENTRYPOINT(glMultiTexSubImage3DEXT)(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pTrace_pixels)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyMultiTexSubImage3DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLint zoffset = trace_packet.get_param_value<GLint>(5); \
   GLint x = trace_packet.get_param_value<GLint>(6); \
   GLint y = trace_packet.get_param_value<GLint>(7); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(8); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(9);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyMultiTexSubImage3DEXT GL_ENTRYPOINT(glCopyMultiTexSubImage3DEXT)(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindMultiTextureEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindMultiTextureEXT GL_ENTRYPOINT(glBindMultiTextureEXT)(texunit, target, texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnableClientStateIndexedEXT \
   GLenum array = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEnableClientStateIndexedEXT GL_ENTRYPOINT(glEnableClientStateIndexedEXT)(array, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDisableClientStateIndexedEXT \
   GLenum array = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDisableClientStateIndexedEXT GL_ENTRYPOINT(glDisableClientStateIndexedEXT)(array, index)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexCoordPointerEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexCoordPointerEXT GL_ENTRYPOINT(glMultiTexCoordPointerEXT)(texunit, size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexEnvfEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexEnvfEXT GL_ENTRYPOINT(glMultiTexEnvfEXT)(texunit, target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexEnvfvEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexEnvfvEXT GL_ENTRYPOINT(glMultiTexEnvfvEXT)(texunit, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexEnviEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLint param = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexEnviEXT GL_ENTRYPOINT(glMultiTexEnviEXT)(texunit, target, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexEnvivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexEnvivEXT GL_ENTRYPOINT(glMultiTexEnvivEXT)(texunit, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexGendEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLdouble param = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexGendEXT GL_ENTRYPOINT(glMultiTexGendEXT)(texunit, coord, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexGendvEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexGendvEXT GL_ENTRYPOINT(glMultiTexGendvEXT)(texunit, coord, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexGenfEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLfloat param = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexGenfEXT GL_ENTRYPOINT(glMultiTexGenfEXT)(texunit, coord, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexGenfvEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexGenfvEXT GL_ENTRYPOINT(glMultiTexGenfvEXT)(texunit, coord, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexGeniEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   GLint param = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexGeniEXT GL_ENTRYPOINT(glMultiTexGeniEXT)(texunit, coord, pname, param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexGenivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexGenivEXT GL_ENTRYPOINT(glMultiTexGenivEXT)(texunit, coord, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexEnvfvEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexEnvfvEXT GL_ENTRYPOINT(glGetMultiTexEnvfvEXT)(texunit, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexEnvivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexEnvivEXT GL_ENTRYPOINT(glGetMultiTexEnvivEXT)(texunit, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexGendvEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexGendvEXT GL_ENTRYPOINT(glGetMultiTexGendvEXT)(texunit, coord, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexGenfvEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexGenfvEXT GL_ENTRYPOINT(glGetMultiTexGenfvEXT)(texunit, coord, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexGenivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum coord = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexGenivEXT GL_ENTRYPOINT(glGetMultiTexGenivEXT)(texunit, coord, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFloatIndexedvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_data = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFloatIndexedvEXT GL_ENTRYPOINT(glGetFloatIndexedvEXT)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetDoubleIndexedvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLdouble * pTrace_data = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetDoubleIndexedvEXT GL_ENTRYPOINT(glGetDoubleIndexedvEXT)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPointerIndexedvEXT \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLvoid* * pTrace_data = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPointerIndexedvEXT GL_ENTRYPOINT(glGetPointerIndexedvEXT)(target, index, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTextureImage3DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(6); \
   GLint border = trace_packet.get_param_value<GLint>(7); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(8); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTextureImage3DEXT GL_ENTRYPOINT(glCompressedTextureImage3DEXT)(texture, target, level, internalformat, width, height, depth, border, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTextureImage2DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(7); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTextureImage2DEXT GL_ENTRYPOINT(glCompressedTextureImage2DEXT)(texture, target, level, internalformat, width, height, border, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTextureImage1DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLint border = trace_packet.get_param_value<GLint>(5); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(6); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTextureImage1DEXT GL_ENTRYPOINT(glCompressedTextureImage1DEXT)(texture, target, level, internalformat, width, border, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTextureSubImage3DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLint zoffset = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(7); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(8); \
   GLenum format = trace_packet.get_param_value<GLenum>(9); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(10); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(11));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTextureSubImage3DEXT GL_ENTRYPOINT(glCompressedTextureSubImage3DEXT)(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTextureSubImage2DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLenum format = trace_packet.get_param_value<GLenum>(7); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(8); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTextureSubImage2DEXT GL_ENTRYPOINT(glCompressedTextureSubImage2DEXT)(texture, target, level, xoffset, yoffset, width, height, format, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedTextureSubImage1DEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLenum format = trace_packet.get_param_value<GLenum>(5); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(6); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedTextureSubImage1DEXT GL_ENTRYPOINT(glCompressedTextureSubImage1DEXT)(texture, target, level, xoffset, width, format, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetCompressedTextureImageEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint lod = trace_packet.get_param_value<GLint>(2); \
   const GLvoid * pTrace_img = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetCompressedTextureImageEXT GL_ENTRYPOINT(glGetCompressedTextureImageEXT)(texture, target, lod, pReplay_img)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedMultiTexImage3DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(6); \
   GLint border = trace_packet.get_param_value<GLint>(7); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(8); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedMultiTexImage3DEXT GL_ENTRYPOINT(glCompressedMultiTexImage3DEXT)(texunit, target, level, internalformat, width, height, depth, border, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedMultiTexImage2DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLint border = trace_packet.get_param_value<GLint>(6); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(7); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedMultiTexImage2DEXT GL_ENTRYPOINT(glCompressedMultiTexImage2DEXT)(texunit, target, level, internalformat, width, height, border, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedMultiTexImage1DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLint border = trace_packet.get_param_value<GLint>(5); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(6); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedMultiTexImage1DEXT GL_ENTRYPOINT(glCompressedMultiTexImage1DEXT)(texunit, target, level, internalformat, width, border, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedMultiTexSubImage3DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLint zoffset = trace_packet.get_param_value<GLint>(5); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(7); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(8); \
   GLenum format = trace_packet.get_param_value<GLenum>(9); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(10); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(11));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedMultiTexSubImage3DEXT GL_ENTRYPOINT(glCompressedMultiTexSubImage3DEXT)(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedMultiTexSubImage2DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLint yoffset = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLenum format = trace_packet.get_param_value<GLenum>(7); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(8); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(9));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedMultiTexSubImage2DEXT GL_ENTRYPOINT(glCompressedMultiTexSubImage2DEXT)(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCompressedMultiTexSubImage1DEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLint xoffset = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLenum format = trace_packet.get_param_value<GLenum>(5); \
   GLsizei imageSize = trace_packet.get_param_value<GLsizei>(6); \
   const GLvoid * pTrace_bits = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glCompressedMultiTexSubImage1DEXT GL_ENTRYPOINT(glCompressedMultiTexSubImage1DEXT)(texunit, target, level, xoffset, width, format, imageSize, pTrace_bits)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetCompressedMultiTexImageEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLint lod = trace_packet.get_param_value<GLint>(2); \
   const GLvoid * pTrace_img = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetCompressedMultiTexImageEXT GL_ENTRYPOINT(glGetCompressedMultiTexImageEXT)(texunit, target, lod, pReplay_img)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramStringEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLsizei len = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_string = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramStringEXT GL_ENTRYPOINT(glNamedProgramStringEXT)(program, target, format, len, pTrace_string)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParameter4dEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(5); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParameter4dEXT GL_ENTRYPOINT(glNamedProgramLocalParameter4dEXT)(program, target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParameter4dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParameter4dvEXT GL_ENTRYPOINT(glNamedProgramLocalParameter4dvEXT)(program, target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParameter4fEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat w = trace_packet.get_param_value<GLfloat>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParameter4fEXT GL_ENTRYPOINT(glNamedProgramLocalParameter4fEXT)(program, target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParameter4fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParameter4fvEXT GL_ENTRYPOINT(glNamedProgramLocalParameter4fvEXT)(program, target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedProgramLocalParameterdvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedProgramLocalParameterdvEXT GL_ENTRYPOINT(glGetNamedProgramLocalParameterdvEXT)(program, target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedProgramLocalParameterfvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedProgramLocalParameterfvEXT GL_ENTRYPOINT(glGetNamedProgramLocalParameterfvEXT)(program, target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedProgramivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedProgramivEXT GL_ENTRYPOINT(glGetNamedProgramivEXT)(program, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedProgramStringEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_string = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedProgramStringEXT GL_ENTRYPOINT(glGetNamedProgramStringEXT)(program, target, pname, pReplay_string)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParameters4fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParameters4fvEXT GL_ENTRYPOINT(glNamedProgramLocalParameters4fvEXT)(program, target, index, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParameterI4iEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLint x = trace_packet.get_param_value<GLint>(3); \
   GLint y = trace_packet.get_param_value<GLint>(4); \
   GLint z = trace_packet.get_param_value<GLint>(5); \
   GLint w = trace_packet.get_param_value<GLint>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParameterI4iEXT GL_ENTRYPOINT(glNamedProgramLocalParameterI4iEXT)(program, target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParameterI4ivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParameterI4ivEXT GL_ENTRYPOINT(glNamedProgramLocalParameterI4ivEXT)(program, target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParametersI4ivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParametersI4ivEXT GL_ENTRYPOINT(glNamedProgramLocalParametersI4ivEXT)(program, target, index, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParameterI4uiEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLuint x = trace_packet.get_param_value<GLuint>(3); \
   GLuint y = trace_packet.get_param_value<GLuint>(4); \
   GLuint z = trace_packet.get_param_value<GLuint>(5); \
   GLuint w = trace_packet.get_param_value<GLuint>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParameterI4uiEXT GL_ENTRYPOINT(glNamedProgramLocalParameterI4uiEXT)(program, target, index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParameterI4uivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParameterI4uivEXT GL_ENTRYPOINT(glNamedProgramLocalParameterI4uivEXT)(program, target, index, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedProgramLocalParametersI4uivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(3); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedProgramLocalParametersI4uivEXT GL_ENTRYPOINT(glNamedProgramLocalParametersI4uivEXT)(program, target, index, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedProgramLocalParameterIivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedProgramLocalParameterIivEXT GL_ENTRYPOINT(glGetNamedProgramLocalParameterIivEXT)(program, target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedProgramLocalParameterIuivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedProgramLocalParameterIuivEXT GL_ENTRYPOINT(glGetNamedProgramLocalParameterIuivEXT)(program, target, index, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureParameterIivEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureParameterIivEXT GL_ENTRYPOINT(glTextureParameterIivEXT)(texture, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureParameterIuivEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureParameterIuivEXT GL_ENTRYPOINT(glTextureParameterIuivEXT)(texture, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTextureParameterIivEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTextureParameterIivEXT GL_ENTRYPOINT(glGetTextureParameterIivEXT)(texture, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTextureParameterIuivEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTextureParameterIuivEXT GL_ENTRYPOINT(glGetTextureParameterIuivEXT)(texture, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexParameterIivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexParameterIivEXT GL_ENTRYPOINT(glMultiTexParameterIivEXT)(texunit, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexParameterIuivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexParameterIuivEXT GL_ENTRYPOINT(glMultiTexParameterIuivEXT)(texunit, target, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexParameterIivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexParameterIivEXT GL_ENTRYPOINT(glGetMultiTexParameterIivEXT)(texunit, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultiTexParameterIuivEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultiTexParameterIuivEXT GL_ENTRYPOINT(glGetMultiTexParameterIuivEXT)(texunit, target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1fEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1fEXT GL_ENTRYPOINT(glProgramUniform1fEXT)(program, location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2fEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2fEXT GL_ENTRYPOINT(glProgramUniform2fEXT)(program, location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3fEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3fEXT GL_ENTRYPOINT(glProgramUniform3fEXT)(program, location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4fEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLfloat v0 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat v3 = trace_packet.get_param_value<GLfloat>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4fEXT GL_ENTRYPOINT(glProgramUniform4fEXT)(program, location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1iEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint v0 = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1iEXT GL_ENTRYPOINT(glProgramUniform1iEXT)(program, location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2iEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint v0 = trace_packet.get_param_value<GLint>(2); \
   GLint v1 = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2iEXT GL_ENTRYPOINT(glProgramUniform2iEXT)(program, location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3iEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint v0 = trace_packet.get_param_value<GLint>(2); \
   GLint v1 = trace_packet.get_param_value<GLint>(3); \
   GLint v2 = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3iEXT GL_ENTRYPOINT(glProgramUniform3iEXT)(program, location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4iEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint v0 = trace_packet.get_param_value<GLint>(2); \
   GLint v1 = trace_packet.get_param_value<GLint>(3); \
   GLint v2 = trace_packet.get_param_value<GLint>(4); \
   GLint v3 = trace_packet.get_param_value<GLint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4iEXT GL_ENTRYPOINT(glProgramUniform4iEXT)(program, location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1fvEXT GL_ENTRYPOINT(glProgramUniform1fvEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2fvEXT GL_ENTRYPOINT(glProgramUniform2fvEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3fvEXT GL_ENTRYPOINT(glProgramUniform3fvEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4fvEXT GL_ENTRYPOINT(glProgramUniform4fvEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1ivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1ivEXT GL_ENTRYPOINT(glProgramUniform1ivEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2ivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2ivEXT GL_ENTRYPOINT(glProgramUniform2ivEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3ivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3ivEXT GL_ENTRYPOINT(glProgramUniform3ivEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4ivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4ivEXT GL_ENTRYPOINT(glProgramUniform4ivEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2fvEXT GL_ENTRYPOINT(glProgramUniformMatrix2fvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3fvEXT GL_ENTRYPOINT(glProgramUniformMatrix3fvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4fvEXT GL_ENTRYPOINT(glProgramUniformMatrix4fvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2x3fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2x3fvEXT GL_ENTRYPOINT(glProgramUniformMatrix2x3fvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3x2fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3x2fvEXT GL_ENTRYPOINT(glProgramUniformMatrix3x2fvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2x4fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2x4fvEXT GL_ENTRYPOINT(glProgramUniformMatrix2x4fvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4x2fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4x2fvEXT GL_ENTRYPOINT(glProgramUniformMatrix4x2fvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3x4fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3x4fvEXT GL_ENTRYPOINT(glProgramUniformMatrix3x4fvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4x3fvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4x3fvEXT GL_ENTRYPOINT(glProgramUniformMatrix4x3fvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1uiEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1uiEXT GL_ENTRYPOINT(glProgramUniform1uiEXT)(program, location, v0)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2uiEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2uiEXT GL_ENTRYPOINT(glProgramUniform2uiEXT)(program, location, v0, v1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3uiEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(3); \
   GLuint v2 = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3uiEXT GL_ENTRYPOINT(glProgramUniform3uiEXT)(program, location, v0, v1, v2)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4uiEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint v0 = trace_packet.get_param_value<GLuint>(2); \
   GLuint v1 = trace_packet.get_param_value<GLuint>(3); \
   GLuint v2 = trace_packet.get_param_value<GLuint>(4); \
   GLuint v3 = trace_packet.get_param_value<GLuint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4uiEXT GL_ENTRYPOINT(glProgramUniform4uiEXT)(program, location, v0, v1, v2, v3)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1uivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1uivEXT GL_ENTRYPOINT(glProgramUniform1uivEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2uivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2uivEXT GL_ENTRYPOINT(glProgramUniform2uivEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3uivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3uivEXT GL_ENTRYPOINT(glProgramUniform3uivEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4uivEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_value = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4uivEXT GL_ENTRYPOINT(glProgramUniform4uivEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedBufferDataEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(1); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLenum usage = trace_packet.get_param_value<GLenum>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedBufferDataEXT GL_ENTRYPOINT(glNamedBufferDataEXT)(buffer, size, pTrace_data, usage)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedBufferSubDataEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(2); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedBufferSubDataEXT GL_ENTRYPOINT(glNamedBufferSubDataEXT)(buffer, offset, size, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapNamedBufferEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum access = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapNamedBufferEXT GL_ENTRYPOINT(glMapNamedBufferEXT)(buffer, access)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUnmapNamedBufferEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glUnmapNamedBufferEXT GL_ENTRYPOINT(glUnmapNamedBufferEXT)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapNamedBufferRangeEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr length = trace_packet.get_param_value<GLsizeiptr>(2); \
   GLbitfield access = trace_packet.get_param_value<GLbitfield>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMapNamedBufferRangeEXT GL_ENTRYPOINT(glMapNamedBufferRangeEXT)(buffer, offset, length, access)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFlushMappedNamedBufferRangeEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr length = trace_packet.get_param_value<GLsizeiptr>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glFlushMappedNamedBufferRangeEXT GL_ENTRYPOINT(glFlushMappedNamedBufferRangeEXT)(buffer, offset, length)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedCopyBufferSubDataEXT \
   GLuint readBuffer = trace_packet.get_param_value<GLuint>(0); \
   GLuint writeBuffer = trace_packet.get_param_value<GLuint>(1); \
   GLintptr readOffset = trace_packet.get_param_value<GLintptr>(2); \
   GLintptr writeOffset = trace_packet.get_param_value<GLintptr>(3); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedCopyBufferSubDataEXT GL_ENTRYPOINT(glNamedCopyBufferSubDataEXT)(readBuffer, writeBuffer, readOffset, writeOffset, size)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedBufferParameterivEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedBufferParameterivEXT GL_ENTRYPOINT(glGetNamedBufferParameterivEXT)(buffer, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedBufferPointervEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_params = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedBufferPointervEXT GL_ENTRYPOINT(glGetNamedBufferPointervEXT)(buffer, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedBufferSubDataEXT \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(1); \
   GLsizeiptr size = trace_packet.get_param_value<GLsizeiptr>(2); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedBufferSubDataEXT GL_ENTRYPOINT(glGetNamedBufferSubDataEXT)(buffer, offset, size, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureBufferEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureBufferEXT GL_ENTRYPOINT(glTextureBufferEXT)(texture, target, internalformat, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexBufferEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexBufferEXT GL_ENTRYPOINT(glMultiTexBufferEXT)(texunit, target, internalformat, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedRenderbufferStorageEXT \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedRenderbufferStorageEXT GL_ENTRYPOINT(glNamedRenderbufferStorageEXT)(renderbuffer, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedRenderbufferParameterivEXT \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedRenderbufferParameterivEXT GL_ENTRYPOINT(glGetNamedRenderbufferParameterivEXT)(renderbuffer, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCheckNamedFramebufferStatusEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glCheckNamedFramebufferStatusEXT GL_ENTRYPOINT(glCheckNamedFramebufferStatusEXT)(framebuffer, target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedFramebufferTexture1DEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum textarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint texture = trace_packet.get_param_value<GLuint>(3); \
   GLint level = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedFramebufferTexture1DEXT GL_ENTRYPOINT(glNamedFramebufferTexture1DEXT)(framebuffer, attachment, textarget, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedFramebufferTexture2DEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum textarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint texture = trace_packet.get_param_value<GLuint>(3); \
   GLint level = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedFramebufferTexture2DEXT GL_ENTRYPOINT(glNamedFramebufferTexture2DEXT)(framebuffer, attachment, textarget, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedFramebufferTexture3DEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum textarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint texture = trace_packet.get_param_value<GLuint>(3); \
   GLint level = trace_packet.get_param_value<GLint>(4); \
   GLint zoffset = trace_packet.get_param_value<GLint>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedFramebufferTexture3DEXT GL_ENTRYPOINT(glNamedFramebufferTexture3DEXT)(framebuffer, attachment, textarget, texture, level, zoffset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedFramebufferRenderbufferEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum renderbuffertarget = trace_packet.get_param_value<GLenum>(2); \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedFramebufferRenderbufferEXT GL_ENTRYPOINT(glNamedFramebufferRenderbufferEXT)(framebuffer, attachment, renderbuffertarget, renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedFramebufferAttachmentParameterivEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedFramebufferAttachmentParameterivEXT GL_ENTRYPOINT(glGetNamedFramebufferAttachmentParameterivEXT)(framebuffer, attachment, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenerateTextureMipmapEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenerateTextureMipmapEXT GL_ENTRYPOINT(glGenerateTextureMipmapEXT)(texture, target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenerateMultiTexMipmapEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenerateMultiTexMipmapEXT GL_ENTRYPOINT(glGenerateMultiTexMipmapEXT)(texunit, target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferDrawBufferEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferDrawBufferEXT GL_ENTRYPOINT(glFramebufferDrawBufferEXT)(framebuffer, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferDrawBuffersEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLsizei n = trace_packet.get_param_value<GLsizei>(1); \
   const GLenum * pTrace_bufs = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferDrawBuffersEXT GL_ENTRYPOINT(glFramebufferDrawBuffersEXT)(framebuffer, n, pTrace_bufs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFramebufferReadBufferEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFramebufferReadBufferEXT GL_ENTRYPOINT(glFramebufferReadBufferEXT)(framebuffer, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetFramebufferParameterivEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetFramebufferParameterivEXT GL_ENTRYPOINT(glGetFramebufferParameterivEXT)(framebuffer, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedRenderbufferStorageMultisampleEXT \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(0); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(1); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedRenderbufferStorageMultisampleEXT GL_ENTRYPOINT(glNamedRenderbufferStorageMultisampleEXT)(renderbuffer, samples, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedRenderbufferStorageMultisampleCoverageEXT \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(0); \
   GLsizei coverageSamples = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei colorSamples = trace_packet.get_param_value<GLsizei>(2); \
   GLenum internalformat = trace_packet.get_param_value<GLenum>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedRenderbufferStorageMultisampleCoverageEXT GL_ENTRYPOINT(glNamedRenderbufferStorageMultisampleCoverageEXT)(renderbuffer, coverageSamples, colorSamples, internalformat, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedFramebufferTextureEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedFramebufferTextureEXT GL_ENTRYPOINT(glNamedFramebufferTextureEXT)(framebuffer, attachment, texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedFramebufferTextureLayerEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3); \
   GLint layer = trace_packet.get_param_value<GLint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedFramebufferTextureLayerEXT GL_ENTRYPOINT(glNamedFramebufferTextureLayerEXT)(framebuffer, attachment, texture, level, layer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNamedFramebufferTextureFaceEXT \
   GLuint framebuffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum attachment = trace_packet.get_param_value<GLenum>(1); \
   GLuint texture = trace_packet.get_param_value<GLuint>(2); \
   GLint level = trace_packet.get_param_value<GLint>(3); \
   GLenum face = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glNamedFramebufferTextureFaceEXT GL_ENTRYPOINT(glNamedFramebufferTextureFaceEXT)(framebuffer, attachment, texture, level, face)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureRenderbufferEXT \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureRenderbufferEXT GL_ENTRYPOINT(glTextureRenderbufferEXT)(texture, target, renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiTexRenderbufferEXT \
   GLenum texunit = trace_packet.get_param_value<GLenum>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiTexRenderbufferEXT GL_ENTRYPOINT(glMultiTexRenderbufferEXT)(texunit, target, renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1dEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1dEXT GL_ENTRYPOINT(glProgramUniform1dEXT)(program, location, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2dEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2dEXT GL_ENTRYPOINT(glProgramUniform2dEXT)(program, location, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3dEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3dEXT GL_ENTRYPOINT(glProgramUniform3dEXT)(program, location, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4dEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(4); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4dEXT GL_ENTRYPOINT(glProgramUniform4dEXT)(program, location, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1dvEXT GL_ENTRYPOINT(glProgramUniform1dvEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2dvEXT GL_ENTRYPOINT(glProgramUniform2dvEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3dvEXT GL_ENTRYPOINT(glProgramUniform3dvEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4dvEXT GL_ENTRYPOINT(glProgramUniform4dvEXT)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2dvEXT GL_ENTRYPOINT(glProgramUniformMatrix2dvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3dvEXT GL_ENTRYPOINT(glProgramUniformMatrix3dvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4dvEXT GL_ENTRYPOINT(glProgramUniformMatrix4dvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2x3dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2x3dvEXT GL_ENTRYPOINT(glProgramUniformMatrix2x3dvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix2x4dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix2x4dvEXT GL_ENTRYPOINT(glProgramUniformMatrix2x4dvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3x2dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3x2dvEXT GL_ENTRYPOINT(glProgramUniformMatrix3x2dvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix3x4dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix3x4dvEXT GL_ENTRYPOINT(glProgramUniformMatrix3x4dvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4x2dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4x2dvEXT GL_ENTRYPOINT(glProgramUniformMatrix4x2dvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformMatrix4x3dvEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   GLboolean transpose = trace_packet.get_param_value<GLboolean>(3); \
   const GLdouble * pTrace_value = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformMatrix4x3dvEXT GL_ENTRYPOINT(glProgramUniformMatrix4x3dvEXT)(program, location, count, transpose, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetMultisamplefvNV \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_val = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetMultisamplefvNV GL_ENTRYPOINT(glGetMultisamplefvNV)(pname, index, pReplay_val)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSampleMaskIndexedNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLbitfield mask = trace_packet.get_param_value<GLbitfield>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glSampleMaskIndexedNV GL_ENTRYPOINT(glSampleMaskIndexedNV)(index, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexRenderbufferNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint renderbuffer = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexRenderbufferNV GL_ENTRYPOINT(glTexRenderbufferNV)(target, renderbuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindTransformFeedbackNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindTransformFeedbackNV GL_ENTRYPOINT(glBindTransformFeedbackNV)(target, id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteTransformFeedbacksNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteTransformFeedbacksNV GL_ENTRYPOINT(glDeleteTransformFeedbacksNV)(n, pTrace_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenTransformFeedbacksNV \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenTransformFeedbacksNV GL_ENTRYPOINT(glGenTransformFeedbacksNV)(n, pReplay_ids)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsTransformFeedbackNV \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsTransformFeedbackNV GL_ENTRYPOINT(glIsTransformFeedbackNV)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPauseTransformFeedbackNV  

#define VOGL_REPLAY_CALL_GL_HELPER_glPauseTransformFeedbackNV GL_ENTRYPOINT(glPauseTransformFeedbackNV)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glResumeTransformFeedbackNV  

#define VOGL_REPLAY_CALL_GL_HELPER_glResumeTransformFeedbackNV GL_ENTRYPOINT(glResumeTransformFeedbackNV)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawTransformFeedbackNV \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLuint id = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawTransformFeedbackNV GL_ENTRYPOINT(glDrawTransformFeedbackNV)(mode, id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPerfMonitorGroupsAMD \
   const GLint * pTrace_numGroups = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLsizei groupsSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_groups = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPerfMonitorGroupsAMD GL_ENTRYPOINT(glGetPerfMonitorGroupsAMD)(pReplay_numGroups, groupsSize, pReplay_groups)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPerfMonitorCountersAMD \
   GLuint group = trace_packet.get_param_value<GLuint>(0); \
   const GLint * pTrace_numCounters = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLint * pTrace_maxActiveCounters = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLsizei counterSize = trace_packet.get_param_value<GLsizei>(3); \
   const GLuint * pTrace_counters = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPerfMonitorCountersAMD GL_ENTRYPOINT(glGetPerfMonitorCountersAMD)(group, pReplay_numCounters, pReplay_maxActiveCounters, counterSize, pReplay_counters)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPerfMonitorGroupStringAMD \
   GLuint group = trace_packet.get_param_value<GLuint>(0); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(1); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLchar * pTrace_groupString = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPerfMonitorGroupStringAMD GL_ENTRYPOINT(glGetPerfMonitorGroupStringAMD)(group, bufSize, pReplay_length, pReplay_groupString)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPerfMonitorCounterStringAMD \
   GLuint group = trace_packet.get_param_value<GLuint>(0); \
   GLuint counter = trace_packet.get_param_value<GLuint>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLchar * pTrace_counterString = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPerfMonitorCounterStringAMD GL_ENTRYPOINT(glGetPerfMonitorCounterStringAMD)(group, counter, bufSize, pReplay_length, pReplay_counterString)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPerfMonitorCounterInfoAMD \
   GLuint group = trace_packet.get_param_value<GLuint>(0); \
   GLuint counter = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPerfMonitorCounterInfoAMD GL_ENTRYPOINT(glGetPerfMonitorCounterInfoAMD)(group, counter, pname, pReplay_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenPerfMonitorsAMD \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_monitors = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenPerfMonitorsAMD GL_ENTRYPOINT(glGenPerfMonitorsAMD)(n, pReplay_monitors)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeletePerfMonitorsAMD \
   GLsizei n = trace_packet.get_param_value<GLsizei>(0); \
   const GLuint * pTrace_monitors = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeletePerfMonitorsAMD GL_ENTRYPOINT(glDeletePerfMonitorsAMD)(n, pReplay_monitors)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSelectPerfMonitorCountersAMD \
   GLuint monitor = trace_packet.get_param_value<GLuint>(0); \
   GLboolean enable = trace_packet.get_param_value<GLboolean>(1); \
   GLuint group = trace_packet.get_param_value<GLuint>(2); \
   GLint numCounters = trace_packet.get_param_value<GLint>(3); \
   const GLuint * pTrace_counterList = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glSelectPerfMonitorCountersAMD GL_ENTRYPOINT(glSelectPerfMonitorCountersAMD)(monitor, enable, group, numCounters, pReplay_counterList)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginPerfMonitorAMD \
   GLuint monitor = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginPerfMonitorAMD GL_ENTRYPOINT(glBeginPerfMonitorAMD)(monitor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndPerfMonitorAMD \
   GLuint monitor = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEndPerfMonitorAMD GL_ENTRYPOINT(glEndPerfMonitorAMD)(monitor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPerfMonitorCounterDataAMD \
   GLuint monitor = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLsizei dataSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_data = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLint * pTrace_bytesWritten = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPerfMonitorCounterDataAMD GL_ENTRYPOINT(glGetPerfMonitorCounterDataAMD)(monitor, pname, dataSize, pReplay_data, pReplay_bytesWritten)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTessellationFactorAMD \
   GLfloat factor = trace_packet.get_param_value<GLfloat>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTessellationFactorAMD GL_ENTRYPOINT(glTessellationFactorAMD)(factor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTessellationModeAMD \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glTessellationModeAMD GL_ENTRYPOINT(glTessellationModeAMD)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProvokingVertexEXT \
   GLenum mode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glProvokingVertexEXT GL_ENTRYPOINT(glProvokingVertexEXT)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFuncIndexedAMD \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum src = trace_packet.get_param_value<GLenum>(1); \
   GLenum dst = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFuncIndexedAMD GL_ENTRYPOINT(glBlendFuncIndexedAMD)(buf, src, dst)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendFuncSeparateIndexedAMD \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum srcRGB = trace_packet.get_param_value<GLenum>(1); \
   GLenum dstRGB = trace_packet.get_param_value<GLenum>(2); \
   GLenum srcAlpha = trace_packet.get_param_value<GLenum>(3); \
   GLenum dstAlpha = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendFuncSeparateIndexedAMD GL_ENTRYPOINT(glBlendFuncSeparateIndexedAMD)(buf, srcRGB, dstRGB, srcAlpha, dstAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquationIndexedAMD \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum mode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquationIndexedAMD GL_ENTRYPOINT(glBlendEquationIndexedAMD)(buf, mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBlendEquationSeparateIndexedAMD \
   GLuint buf = trace_packet.get_param_value<GLuint>(0); \
   GLenum modeRGB = trace_packet.get_param_value<GLenum>(1); \
   GLenum modeAlpha = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glBlendEquationSeparateIndexedAMD GL_ENTRYPOINT(glBlendEquationSeparateIndexedAMD)(buf, modeRGB, modeAlpha)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureRangeAPPLE \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(1); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureRangeAPPLE GL_ENTRYPOINT(glTextureRangeAPPLE)(target, length, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTexParameterPointervAPPLE \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid* * pTrace_params = reinterpret_cast<const GLvoid* *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTexParameterPointervAPPLE GL_ENTRYPOINT(glGetTexParameterPointervAPPLE)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEnableVertexAttribAPPLE \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glEnableVertexAttribAPPLE GL_ENTRYPOINT(glEnableVertexAttribAPPLE)(index, pname)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDisableVertexAttribAPPLE \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDisableVertexAttribAPPLE GL_ENTRYPOINT(glDisableVertexAttribAPPLE)(index, pname)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsVertexAttribEnabledAPPLE \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsVertexAttribEnabledAPPLE GL_ENTRYPOINT(glIsVertexAttribEnabledAPPLE)(index, pname)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapVertexAttrib1dAPPLE \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint size = trace_packet.get_param_value<GLuint>(1); \
   GLdouble u1 = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble u2 = trace_packet.get_param_value<GLdouble>(3); \
   GLint stride = trace_packet.get_param_value<GLint>(4); \
   GLint order = trace_packet.get_param_value<GLint>(5); \
   const GLdouble * pTrace_points = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glMapVertexAttrib1dAPPLE GL_ENTRYPOINT(glMapVertexAttrib1dAPPLE)(index, size, u1, u2, stride, order, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapVertexAttrib1fAPPLE \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint size = trace_packet.get_param_value<GLuint>(1); \
   GLfloat u1 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat u2 = trace_packet.get_param_value<GLfloat>(3); \
   GLint stride = trace_packet.get_param_value<GLint>(4); \
   GLint order = trace_packet.get_param_value<GLint>(5); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glMapVertexAttrib1fAPPLE GL_ENTRYPOINT(glMapVertexAttrib1fAPPLE)(index, size, u1, u2, stride, order, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapVertexAttrib2dAPPLE \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint size = trace_packet.get_param_value<GLuint>(1); \
   GLdouble u1 = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble u2 = trace_packet.get_param_value<GLdouble>(3); \
   GLint ustride = trace_packet.get_param_value<GLint>(4); \
   GLint uorder = trace_packet.get_param_value<GLint>(5); \
   GLdouble v1 = trace_packet.get_param_value<GLdouble>(6); \
   GLdouble v2 = trace_packet.get_param_value<GLdouble>(7); \
   GLint vstride = trace_packet.get_param_value<GLint>(8); \
   GLint vorder = trace_packet.get_param_value<GLint>(9); \
   const GLdouble * pTrace_points = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(10));

#define VOGL_REPLAY_CALL_GL_HELPER_glMapVertexAttrib2dAPPLE GL_ENTRYPOINT(glMapVertexAttrib2dAPPLE)(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapVertexAttrib2fAPPLE \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint size = trace_packet.get_param_value<GLuint>(1); \
   GLfloat u1 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat u2 = trace_packet.get_param_value<GLfloat>(3); \
   GLint ustride = trace_packet.get_param_value<GLint>(4); \
   GLint uorder = trace_packet.get_param_value<GLint>(5); \
   GLfloat v1 = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat v2 = trace_packet.get_param_value<GLfloat>(7); \
   GLint vstride = trace_packet.get_param_value<GLint>(8); \
   GLint vorder = trace_packet.get_param_value<GLint>(9); \
   const GLfloat * pTrace_points = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(10));

#define VOGL_REPLAY_CALL_GL_HELPER_glMapVertexAttrib2fAPPLE GL_ENTRYPOINT(glMapVertexAttrib2fAPPLE)(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, pTrace_points)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glObjectPurgeableAPPLE \
   GLenum objectType = trace_packet.get_param_value<GLenum>(0); \
   GLuint name = trace_packet.get_param_value<GLuint>(1); \
   GLenum option = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glObjectPurgeableAPPLE GL_ENTRYPOINT(glObjectPurgeableAPPLE)(objectType, name, option)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glObjectUnpurgeableAPPLE \
   GLenum objectType = trace_packet.get_param_value<GLenum>(0); \
   GLuint name = trace_packet.get_param_value<GLuint>(1); \
   GLenum option = trace_packet.get_param_value<GLenum>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glObjectUnpurgeableAPPLE GL_ENTRYPOINT(glObjectUnpurgeableAPPLE)(objectType, name, option)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetObjectParameterivAPPLE \
   GLenum objectType = trace_packet.get_param_value<GLenum>(0); \
   GLuint name = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetObjectParameterivAPPLE GL_ENTRYPOINT(glGetObjectParameterivAPPLE)(objectType, name, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginVideoCaptureNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginVideoCaptureNV GL_ENTRYPOINT(glBeginVideoCaptureNV)(video_capture_slot)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindVideoCaptureStreamBufferNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint stream = trace_packet.get_param_value<GLuint>(1); \
   GLenum frame_region = trace_packet.get_param_value<GLenum>(2); \
   GLintptrARB offset = trace_packet.get_param_value<GLintptrARB>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindVideoCaptureStreamBufferNV GL_ENTRYPOINT(glBindVideoCaptureStreamBufferNV)(video_capture_slot, stream, frame_region, offset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindVideoCaptureStreamTextureNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint stream = trace_packet.get_param_value<GLuint>(1); \
   GLenum frame_region = trace_packet.get_param_value<GLenum>(2); \
   GLenum target = trace_packet.get_param_value<GLenum>(3); \
   GLuint texture = trace_packet.get_param_value<GLuint>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindVideoCaptureStreamTextureNV GL_ENTRYPOINT(glBindVideoCaptureStreamTextureNV)(video_capture_slot, stream, frame_region, target, texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndVideoCaptureNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEndVideoCaptureNV GL_ENTRYPOINT(glEndVideoCaptureNV)(video_capture_slot)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVideoCaptureivNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVideoCaptureivNV GL_ENTRYPOINT(glGetVideoCaptureivNV)(video_capture_slot, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVideoCaptureStreamivNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint stream = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVideoCaptureStreamivNV GL_ENTRYPOINT(glGetVideoCaptureStreamivNV)(video_capture_slot, stream, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVideoCaptureStreamfvNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint stream = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVideoCaptureStreamfvNV GL_ENTRYPOINT(glGetVideoCaptureStreamfvNV)(video_capture_slot, stream, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVideoCaptureStreamdvNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint stream = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVideoCaptureStreamdvNV GL_ENTRYPOINT(glGetVideoCaptureStreamdvNV)(video_capture_slot, stream, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVideoCaptureNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   const GLuint * pTrace_sequence_num = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLuint64EXT * pTrace_capture_time = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glVideoCaptureNV GL_ENTRYPOINT(glVideoCaptureNV)(video_capture_slot, pReplay_sequence_num, pReplay_capture_time)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVideoCaptureStreamParameterivNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint stream = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLint * pTrace_params = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVideoCaptureStreamParameterivNV GL_ENTRYPOINT(glVideoCaptureStreamParameterivNV)(video_capture_slot, stream, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVideoCaptureStreamParameterfvNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint stream = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_params = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVideoCaptureStreamParameterfvNV GL_ENTRYPOINT(glVideoCaptureStreamParameterfvNV)(video_capture_slot, stream, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVideoCaptureStreamParameterdvNV \
   GLuint video_capture_slot = trace_packet.get_param_value<GLuint>(0); \
   GLuint stream = trace_packet.get_param_value<GLuint>(1); \
   GLenum pname = trace_packet.get_param_value<GLenum>(2); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVideoCaptureStreamParameterdvNV GL_ENTRYPOINT(glVideoCaptureStreamParameterdvNV)(video_capture_slot, stream, pname, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glClearTexImage \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLenum format = trace_packet.get_param_value<GLenum>(2); \
   GLenum type = trace_packet.get_param_value<GLenum>(3); \
   const GLvoid * pTrace_data = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glClearTexImage GL_ENTRYPOINT(glClearTexImage)(texture, level, format, type, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUseShaderProgramEXT \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLuint program = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUseShaderProgramEXT GL_ENTRYPOINT(glUseShaderProgramEXT)(type, program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glActiveProgramEXT \
   GLuint program = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glActiveProgramEXT GL_ENTRYPOINT(glActiveProgramEXT)(program)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCreateShaderProgramEXT \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   const GLchar * pTrace_string = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glCreateShaderProgramEXT GL_ENTRYPOINT(glCreateShaderProgramEXT)(type, pTrace_string)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMakeBufferResidentNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum access = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMakeBufferResidentNV GL_ENTRYPOINT(glMakeBufferResidentNV)(target, access)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMakeBufferNonResidentNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMakeBufferNonResidentNV GL_ENTRYPOINT(glMakeBufferNonResidentNV)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsBufferResidentNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsBufferResidentNV GL_ENTRYPOINT(glIsBufferResidentNV)(target)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMakeNamedBufferResidentNV \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum access = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMakeNamedBufferResidentNV GL_ENTRYPOINT(glMakeNamedBufferResidentNV)(buffer, access)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMakeNamedBufferNonResidentNV \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMakeNamedBufferNonResidentNV GL_ENTRYPOINT(glMakeNamedBufferNonResidentNV)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsNamedBufferResidentNV \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsNamedBufferResidentNV GL_ENTRYPOINT(glIsNamedBufferResidentNV)(buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetBufferParameterui64vNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint64EXT * pTrace_params = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetBufferParameterui64vNV GL_ENTRYPOINT(glGetBufferParameterui64vNV)(target, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetNamedBufferParameterui64vNV \
   GLuint buffer = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint64EXT * pTrace_params = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetNamedBufferParameterui64vNV GL_ENTRYPOINT(glGetNamedBufferParameterui64vNV)(buffer, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetIntegerui64vNV \
   GLenum value = trace_packet.get_param_value<GLenum>(0); \
   const GLuint64EXT * pTrace_result = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetIntegerui64vNV GL_ENTRYPOINT(glGetIntegerui64vNV)(value, pReplay_result)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformui64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint64EXT value = trace_packet.get_param_value<GLuint64EXT>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformui64NV GL_ENTRYPOINT(glUniformui64NV)(location, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformui64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformui64vNV GL_ENTRYPOINT(glUniformui64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformui64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLuint64EXT * pTrace_params = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformui64vNV GL_ENTRYPOINT(glGetUniformui64vNV)(program, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformui64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint64EXT value = trace_packet.get_param_value<GLuint64EXT>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformui64NV GL_ENTRYPOINT(glProgramUniformui64NV)(program, location, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformui64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformui64vNV GL_ENTRYPOINT(glProgramUniformui64vNV)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBufferAddressRangeNV \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   GLuint64EXT address = trace_packet.get_param_value<GLuint64EXT>(2); \
   GLsizeiptr length = trace_packet.get_param_value<GLsizeiptr>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glBufferAddressRangeNV GL_ENTRYPOINT(glBufferAddressRangeNV)(pname, index, address, length)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexFormatNV \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexFormatNV GL_ENTRYPOINT(glVertexFormatNV)(size, type, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glNormalFormatNV \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glNormalFormatNV GL_ENTRYPOINT(glNormalFormatNV)(type, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glColorFormatNV \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glColorFormatNV GL_ENTRYPOINT(glColorFormatNV)(size, type, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIndexFormatNV \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glIndexFormatNV GL_ENTRYPOINT(glIndexFormatNV)(type, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexCoordFormatNV \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexCoordFormatNV GL_ENTRYPOINT(glTexCoordFormatNV)(size, type, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEdgeFlagFormatNV \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glEdgeFlagFormatNV GL_ENTRYPOINT(glEdgeFlagFormatNV)(stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSecondaryColorFormatNV \
   GLint size = trace_packet.get_param_value<GLint>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glSecondaryColorFormatNV GL_ENTRYPOINT(glSecondaryColorFormatNV)(size, type, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glFogCoordFormatNV \
   GLenum type = trace_packet.get_param_value<GLenum>(0); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glFogCoordFormatNV GL_ENTRYPOINT(glFogCoordFormatNV)(type, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribFormatNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLboolean normalized = trace_packet.get_param_value<GLboolean>(3); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribFormatNV GL_ENTRYPOINT(glVertexAttribFormatNV)(index, size, type, normalized, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribIFormatNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribIFormatNV GL_ENTRYPOINT(glVertexAttribIFormatNV)(index, size, type, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetIntegerui64i_vNV \
   GLenum value = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLuint64EXT * pTrace_result = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetIntegerui64i_vNV GL_ENTRYPOINT(glGetIntegerui64i_vNV)(value, index, pReplay_result)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureBarrierNV  

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureBarrierNV GL_ENTRYPOINT(glTextureBarrierNV)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBindImageTextureEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint texture = trace_packet.get_param_value<GLuint>(1); \
   GLint level = trace_packet.get_param_value<GLint>(2); \
   GLboolean layered = trace_packet.get_param_value<GLboolean>(3); \
   GLint layer = trace_packet.get_param_value<GLint>(4); \
   GLenum access = trace_packet.get_param_value<GLenum>(5); \
   GLint format = trace_packet.get_param_value<GLint>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glBindImageTextureEXT GL_ENTRYPOINT(glBindImageTextureEXT)(index, texture, level, layered, layer, access, format)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMemoryBarrierEXT \
   GLbitfield barriers = trace_packet.get_param_value<GLbitfield>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMemoryBarrierEXT GL_ENTRYPOINT(glMemoryBarrierEXT)(barriers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL1dEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL1dEXT GL_ENTRYPOINT(glVertexAttribL1dEXT)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL2dEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL2dEXT GL_ENTRYPOINT(glVertexAttribL2dEXT)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL3dEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL3dEXT GL_ENTRYPOINT(glVertexAttribL3dEXT)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL4dEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLdouble x = trace_packet.get_param_value<GLdouble>(1); \
   GLdouble y = trace_packet.get_param_value<GLdouble>(2); \
   GLdouble z = trace_packet.get_param_value<GLdouble>(3); \
   GLdouble w = trace_packet.get_param_value<GLdouble>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL4dEXT GL_ENTRYPOINT(glVertexAttribL4dEXT)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL1dvEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL1dvEXT GL_ENTRYPOINT(glVertexAttribL1dvEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL2dvEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL2dvEXT GL_ENTRYPOINT(glVertexAttribL2dvEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL3dvEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL3dvEXT GL_ENTRYPOINT(glVertexAttribL3dvEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL4dvEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLdouble * pTrace_v = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL4dvEXT GL_ENTRYPOINT(glVertexAttribL4dvEXT)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribLPointerEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3); \
   const GLvoid * pTrace_pointer = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribLPointerEXT GL_ENTRYPOINT(glVertexAttribLPointerEXT)(index, size, type, stride, pTrace_pointer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribLdvEXT \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLdouble * pTrace_params = reinterpret_cast<const GLdouble *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribLdvEXT GL_ENTRYPOINT(glGetVertexAttribLdvEXT)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexArrayVertexAttribLOffsetEXT \
   GLuint vaobj = trace_packet.get_param_value<GLuint>(0); \
   GLuint buffer = trace_packet.get_param_value<GLuint>(1); \
   GLuint index = trace_packet.get_param_value<GLuint>(2); \
   GLint size = trace_packet.get_param_value<GLint>(3); \
   GLenum type = trace_packet.get_param_value<GLenum>(4); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(5); \
   GLintptr offset = trace_packet.get_param_value<GLintptr>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexArrayVertexAttribLOffsetEXT GL_ENTRYPOINT(glVertexArrayVertexAttribLOffsetEXT)(vaobj, buffer, index, size, type, stride, offset)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramSubroutineParametersuivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_params = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramSubroutineParametersuivNV GL_ENTRYPOINT(glProgramSubroutineParametersuivNV)(target, count, pTrace_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetProgramSubroutineParameteruivNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLuint * pTrace_param = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetProgramSubroutineParameteruivNV GL_ENTRYPOINT(glGetProgramSubroutineParameteruivNV)(target, index, pReplay_param)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1i64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1i64NV GL_ENTRYPOINT(glUniform1i64NV)(location, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2i64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(1); \
   GLint64EXT y = trace_packet.get_param_value<GLint64EXT>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2i64NV GL_ENTRYPOINT(glUniform2i64NV)(location, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3i64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(1); \
   GLint64EXT y = trace_packet.get_param_value<GLint64EXT>(2); \
   GLint64EXT z = trace_packet.get_param_value<GLint64EXT>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3i64NV GL_ENTRYPOINT(glUniform3i64NV)(location, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4i64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(1); \
   GLint64EXT y = trace_packet.get_param_value<GLint64EXT>(2); \
   GLint64EXT z = trace_packet.get_param_value<GLint64EXT>(3); \
   GLint64EXT w = trace_packet.get_param_value<GLint64EXT>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4i64NV GL_ENTRYPOINT(glUniform4i64NV)(location, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1i64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint64EXT * pTrace_value = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1i64vNV GL_ENTRYPOINT(glUniform1i64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2i64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint64EXT * pTrace_value = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2i64vNV GL_ENTRYPOINT(glUniform2i64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3i64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint64EXT * pTrace_value = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3i64vNV GL_ENTRYPOINT(glUniform3i64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4i64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLint64EXT * pTrace_value = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4i64vNV GL_ENTRYPOINT(glUniform4i64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1ui64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1ui64NV GL_ENTRYPOINT(glUniform1ui64NV)(location, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2ui64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(1); \
   GLuint64EXT y = trace_packet.get_param_value<GLuint64EXT>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2ui64NV GL_ENTRYPOINT(glUniform2ui64NV)(location, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3ui64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(1); \
   GLuint64EXT y = trace_packet.get_param_value<GLuint64EXT>(2); \
   GLuint64EXT z = trace_packet.get_param_value<GLuint64EXT>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3ui64NV GL_ENTRYPOINT(glUniform3ui64NV)(location, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4ui64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(1); \
   GLuint64EXT y = trace_packet.get_param_value<GLuint64EXT>(2); \
   GLuint64EXT z = trace_packet.get_param_value<GLuint64EXT>(3); \
   GLuint64EXT w = trace_packet.get_param_value<GLuint64EXT>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4ui64NV GL_ENTRYPOINT(glUniform4ui64NV)(location, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform1ui64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform1ui64vNV GL_ENTRYPOINT(glUniform1ui64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform2ui64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform2ui64vNV GL_ENTRYPOINT(glUniform2ui64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform3ui64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform3ui64vNV GL_ENTRYPOINT(glUniform3ui64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniform4ui64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniform4ui64vNV GL_ENTRYPOINT(glUniform4ui64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetUniformi64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   const GLint64EXT * pTrace_params = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetUniformi64vNV GL_ENTRYPOINT(glGetUniformi64vNV)(program, location, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1i64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1i64NV GL_ENTRYPOINT(glProgramUniform1i64NV)(program, location, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2i64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(2); \
   GLint64EXT y = trace_packet.get_param_value<GLint64EXT>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2i64NV GL_ENTRYPOINT(glProgramUniform2i64NV)(program, location, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3i64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(2); \
   GLint64EXT y = trace_packet.get_param_value<GLint64EXT>(3); \
   GLint64EXT z = trace_packet.get_param_value<GLint64EXT>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3i64NV GL_ENTRYPOINT(glProgramUniform3i64NV)(program, location, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4i64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(2); \
   GLint64EXT y = trace_packet.get_param_value<GLint64EXT>(3); \
   GLint64EXT z = trace_packet.get_param_value<GLint64EXT>(4); \
   GLint64EXT w = trace_packet.get_param_value<GLint64EXT>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4i64NV GL_ENTRYPOINT(glProgramUniform4i64NV)(program, location, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1i64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint64EXT * pTrace_value = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1i64vNV GL_ENTRYPOINT(glProgramUniform1i64vNV)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2i64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint64EXT * pTrace_value = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2i64vNV GL_ENTRYPOINT(glProgramUniform2i64vNV)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3i64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint64EXT * pTrace_value = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3i64vNV GL_ENTRYPOINT(glProgramUniform3i64vNV)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4i64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLint64EXT * pTrace_value = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4i64vNV GL_ENTRYPOINT(glProgramUniform4i64vNV)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1ui64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1ui64NV GL_ENTRYPOINT(glProgramUniform1ui64NV)(program, location, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2ui64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(2); \
   GLuint64EXT y = trace_packet.get_param_value<GLuint64EXT>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2ui64NV GL_ENTRYPOINT(glProgramUniform2ui64NV)(program, location, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3ui64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(2); \
   GLuint64EXT y = trace_packet.get_param_value<GLuint64EXT>(3); \
   GLuint64EXT z = trace_packet.get_param_value<GLuint64EXT>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3ui64NV GL_ENTRYPOINT(glProgramUniform3ui64NV)(program, location, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4ui64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(2); \
   GLuint64EXT y = trace_packet.get_param_value<GLuint64EXT>(3); \
   GLuint64EXT z = trace_packet.get_param_value<GLuint64EXT>(4); \
   GLuint64EXT w = trace_packet.get_param_value<GLuint64EXT>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4ui64NV GL_ENTRYPOINT(glProgramUniform4ui64NV)(program, location, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform1ui64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform1ui64vNV GL_ENTRYPOINT(glProgramUniform1ui64vNV)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform2ui64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform2ui64vNV GL_ENTRYPOINT(glProgramUniform2ui64vNV)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform3ui64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform3ui64vNV GL_ENTRYPOINT(glProgramUniform3ui64vNV)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniform4ui64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint64EXT * pTrace_value = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniform4ui64vNV GL_ENTRYPOINT(glProgramUniform4ui64vNV)(program, location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL1i64NV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL1i64NV GL_ENTRYPOINT(glVertexAttribL1i64NV)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL2i64NV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(1); \
   GLint64EXT y = trace_packet.get_param_value<GLint64EXT>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL2i64NV GL_ENTRYPOINT(glVertexAttribL2i64NV)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL3i64NV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(1); \
   GLint64EXT y = trace_packet.get_param_value<GLint64EXT>(2); \
   GLint64EXT z = trace_packet.get_param_value<GLint64EXT>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL3i64NV GL_ENTRYPOINT(glVertexAttribL3i64NV)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL4i64NV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint64EXT x = trace_packet.get_param_value<GLint64EXT>(1); \
   GLint64EXT y = trace_packet.get_param_value<GLint64EXT>(2); \
   GLint64EXT z = trace_packet.get_param_value<GLint64EXT>(3); \
   GLint64EXT w = trace_packet.get_param_value<GLint64EXT>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL4i64NV GL_ENTRYPOINT(glVertexAttribL4i64NV)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL1i64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint64EXT * pTrace_v = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL1i64vNV GL_ENTRYPOINT(glVertexAttribL1i64vNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL2i64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint64EXT * pTrace_v = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL2i64vNV GL_ENTRYPOINT(glVertexAttribL2i64vNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL3i64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint64EXT * pTrace_v = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL3i64vNV GL_ENTRYPOINT(glVertexAttribL3i64vNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL4i64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLint64EXT * pTrace_v = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL4i64vNV GL_ENTRYPOINT(glVertexAttribL4i64vNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL1ui64NV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL1ui64NV GL_ENTRYPOINT(glVertexAttribL1ui64NV)(index, x)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL2ui64NV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(1); \
   GLuint64EXT y = trace_packet.get_param_value<GLuint64EXT>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL2ui64NV GL_ENTRYPOINT(glVertexAttribL2ui64NV)(index, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL3ui64NV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(1); \
   GLuint64EXT y = trace_packet.get_param_value<GLuint64EXT>(2); \
   GLuint64EXT z = trace_packet.get_param_value<GLuint64EXT>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL3ui64NV GL_ENTRYPOINT(glVertexAttribL3ui64NV)(index, x, y, z)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL4ui64NV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLuint64EXT x = trace_packet.get_param_value<GLuint64EXT>(1); \
   GLuint64EXT y = trace_packet.get_param_value<GLuint64EXT>(2); \
   GLuint64EXT z = trace_packet.get_param_value<GLuint64EXT>(3); \
   GLuint64EXT w = trace_packet.get_param_value<GLuint64EXT>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL4ui64NV GL_ENTRYPOINT(glVertexAttribL4ui64NV)(index, x, y, z, w)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL1ui64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint64EXT * pTrace_v = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL1ui64vNV GL_ENTRYPOINT(glVertexAttribL1ui64vNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL2ui64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint64EXT * pTrace_v = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL2ui64vNV GL_ENTRYPOINT(glVertexAttribL2ui64vNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL3ui64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint64EXT * pTrace_v = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL3ui64vNV GL_ENTRYPOINT(glVertexAttribL3ui64vNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribL4ui64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   const GLuint64EXT * pTrace_v = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribL4ui64vNV GL_ENTRYPOINT(glVertexAttribL4ui64vNV)(index, pTrace_v)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribLi64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint64EXT * pTrace_params = reinterpret_cast<const GLint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribLi64vNV GL_ENTRYPOINT(glGetVertexAttribLi64vNV)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetVertexAttribLui64vNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLuint64EXT * pTrace_params = reinterpret_cast<const GLuint64EXT *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetVertexAttribLui64vNV GL_ENTRYPOINT(glGetVertexAttribLui64vNV)(index, pname, pReplay_params)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVertexAttribLFormatNV \
   GLuint index = trace_packet.get_param_value<GLuint>(0); \
   GLint size = trace_packet.get_param_value<GLint>(1); \
   GLenum type = trace_packet.get_param_value<GLenum>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glVertexAttribLFormatNV GL_ENTRYPOINT(glVertexAttribLFormatNV)(index, size, type, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenNamesAMD \
   GLenum identifier = trace_packet.get_param_value<GLenum>(0); \
   GLuint num = trace_packet.get_param_value<GLuint>(1); \
   const GLuint * pTrace_names = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGenNamesAMD GL_ENTRYPOINT(glGenNamesAMD)(identifier, num, pReplay_names)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeleteNamesAMD \
   GLenum identifier = trace_packet.get_param_value<GLenum>(0); \
   GLuint num = trace_packet.get_param_value<GLuint>(1); \
   const GLuint * pTrace_names = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glDeleteNamesAMD GL_ENTRYPOINT(glDeleteNamesAMD)(identifier, num, pTrace_names)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsNameAMD \
   GLenum identifier = trace_packet.get_param_value<GLenum>(0); \
   GLuint name = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsNameAMD GL_ENTRYPOINT(glIsNameAMD)(identifier, name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDebugMessageEnableAMD \
   GLenum category = trace_packet.get_param_value<GLenum>(0); \
   GLenum severity = trace_packet.get_param_value<GLenum>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLboolean enabled = trace_packet.get_param_value<GLboolean>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glDebugMessageEnableAMD GL_ENTRYPOINT(glDebugMessageEnableAMD)(category, severity, count, pTrace_ids, enabled)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDebugMessageInsertAMD \
   GLenum category = trace_packet.get_param_value<GLenum>(0); \
   GLenum severity = trace_packet.get_param_value<GLenum>(1); \
   GLuint id = trace_packet.get_param_value<GLuint>(2); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(3); \
   const GLchar * pTrace_buf = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glDebugMessageInsertAMD GL_ENTRYPOINT(glDebugMessageInsertAMD)(category, severity, id, length, pTrace_buf)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDebugMessageCallbackAMD \
   GLDEBUGPROCAMD callback = trace_packet.get_param_value<GLDEBUGPROCAMD>(0); \
   const GLvoid * pTrace_userParam = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glDebugMessageCallbackAMD GL_ENTRYPOINT(glDebugMessageCallbackAMD)(callback, pReplay_userParam)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetDebugMessageLogAMD \
   GLuint count = trace_packet.get_param_value<GLuint>(0); \
   GLsizei bufsize = trace_packet.get_param_value<GLsizei>(1); \
   const GLenum * pTrace_categories = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLuint * pTrace_severities = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLuint * pTrace_ids = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLsizei * pTrace_lengths = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLchar * pTrace_message = reinterpret_cast<const GLchar *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetDebugMessageLogAMD GL_ENTRYPOINT(glGetDebugMessageLogAMD)(count, bufsize, pReplay_categories, pReplay_severities, pReplay_ids, pReplay_lengths, pReplay_message)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAUInitNV \
   const GLvoid * pTrace_vdpDevice = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLvoid * pTrace_getProcAddress = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAUInitNV GL_ENTRYPOINT(glVDPAUInitNV)(pTrace_vdpDevice, pTrace_getProcAddress)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAUFiniNV  

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAUFiniNV GL_ENTRYPOINT(glVDPAUFiniNV)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAURegisterVideoSurfaceNV \
   const GLvoid * pTrace_vdpSurface = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei numTextureNames = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_textureNames = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAURegisterVideoSurfaceNV GL_ENTRYPOINT(glVDPAURegisterVideoSurfaceNV)(pTrace_vdpSurface, target, numTextureNames, pTrace_textureNames)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAURegisterOutputSurfaceNV \
   const GLvoid * pTrace_vdpSurface = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei numTextureNames = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint * pTrace_textureNames = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAURegisterOutputSurfaceNV GL_ENTRYPOINT(glVDPAURegisterOutputSurfaceNV)(pReplay_vdpSurface, target, numTextureNames, pTrace_textureNames)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAUIsSurfaceNV \
   GLvdpauSurfaceNV surface = trace_packet.get_param_value<GLvdpauSurfaceNV>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAUIsSurfaceNV GL_ENTRYPOINT(glVDPAUIsSurfaceNV)(surface)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAUUnregisterSurfaceNV \
   GLvdpauSurfaceNV surface = trace_packet.get_param_value<GLvdpauSurfaceNV>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAUUnregisterSurfaceNV GL_ENTRYPOINT(glVDPAUUnregisterSurfaceNV)(surface)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAUGetSurfaceivNV \
   GLvdpauSurfaceNV surface = trace_packet.get_param_value<GLvdpauSurfaceNV>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLsizei bufSize = trace_packet.get_param_value<GLsizei>(2); \
   const GLsizei * pTrace_length = reinterpret_cast<const GLsizei *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLint * pTrace_values = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAUGetSurfaceivNV GL_ENTRYPOINT(glVDPAUGetSurfaceivNV)(surface, pname, bufSize, pReplay_length, pReplay_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAUSurfaceAccessNV \
   GLvdpauSurfaceNV surface = trace_packet.get_param_value<GLvdpauSurfaceNV>(0); \
   GLenum access = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAUSurfaceAccessNV GL_ENTRYPOINT(glVDPAUSurfaceAccessNV)(surface, access)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAUMapSurfacesNV \
   GLsizei numSurfaces = trace_packet.get_param_value<GLsizei>(0); \
   const GLvdpauSurfaceNV * pTrace_surfaces = reinterpret_cast<const GLvdpauSurfaceNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAUMapSurfacesNV GL_ENTRYPOINT(glVDPAUMapSurfacesNV)(numSurfaces, pTrace_surfaces)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glVDPAUUnmapSurfacesNV \
   GLsizei numSurface = trace_packet.get_param_value<GLsizei>(0); \
   const GLvdpauSurfaceNV * pTrace_surfaces = reinterpret_cast<const GLvdpauSurfaceNV *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glVDPAUUnmapSurfacesNV GL_ENTRYPOINT(glVDPAUUnmapSurfacesNV)(numSurface, pTrace_surfaces)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexImage2DMultisampleCoverageNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei coverageSamples = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei colorSamples = trace_packet.get_param_value<GLsizei>(2); \
   GLint internalFormat = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLboolean fixedSampleLocations = trace_packet.get_param_value<GLboolean>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexImage2DMultisampleCoverageNV GL_ENTRYPOINT(glTexImage2DMultisampleCoverageNV)(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexImage3DMultisampleCoverageNV \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLsizei coverageSamples = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei colorSamples = trace_packet.get_param_value<GLsizei>(2); \
   GLint internalFormat = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(6); \
   GLboolean fixedSampleLocations = trace_packet.get_param_value<GLboolean>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexImage3DMultisampleCoverageNV GL_ENTRYPOINT(glTexImage3DMultisampleCoverageNV)(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureImage2DMultisampleNV \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(2); \
   GLint internalFormat = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLboolean fixedSampleLocations = trace_packet.get_param_value<GLboolean>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureImage2DMultisampleNV GL_ENTRYPOINT(glTextureImage2DMultisampleNV)(texture, target, samples, internalFormat, width, height, fixedSampleLocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureImage3DMultisampleNV \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei samples = trace_packet.get_param_value<GLsizei>(2); \
   GLint internalFormat = trace_packet.get_param_value<GLint>(3); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(6); \
   GLboolean fixedSampleLocations = trace_packet.get_param_value<GLboolean>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureImage3DMultisampleNV GL_ENTRYPOINT(glTextureImage3DMultisampleNV)(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureImage2DMultisampleCoverageNV \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei coverageSamples = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei colorSamples = trace_packet.get_param_value<GLsizei>(3); \
   GLint internalFormat = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLboolean fixedSampleLocations = trace_packet.get_param_value<GLboolean>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureImage2DMultisampleCoverageNV GL_ENTRYPOINT(glTextureImage2DMultisampleCoverageNV)(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureImage3DMultisampleCoverageNV \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLsizei coverageSamples = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei colorSamples = trace_packet.get_param_value<GLsizei>(3); \
   GLint internalFormat = trace_packet.get_param_value<GLint>(4); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(6); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(7); \
   GLboolean fixedSampleLocations = trace_packet.get_param_value<GLboolean>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureImage3DMultisampleCoverageNV GL_ENTRYPOINT(glTextureImage3DMultisampleCoverageNV)(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSetMultisamplefvAMD \
   GLenum pname = trace_packet.get_param_value<GLenum>(0); \
   GLuint index = trace_packet.get_param_value<GLuint>(1); \
   const GLfloat * pTrace_val = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glSetMultisamplefvAMD GL_ENTRYPOINT(glSetMultisamplefvAMD)(pname, index, pTrace_val)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glImportSyncEXT \
   GLenum external_sync_type = trace_packet.get_param_value<GLenum>(0); \
   GLintptr external_sync = trace_packet.get_param_value<GLintptr>(1); \
   GLbitfield flags = trace_packet.get_param_value<GLbitfield>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glImportSyncEXT GL_ENTRYPOINT(glImportSyncEXT)(external_sync_type, external_sync, flags)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawArraysIndirectAMD \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   const GLvoid * pTrace_indirect = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawArraysIndirectAMD GL_ENTRYPOINT(glMultiDrawArraysIndirectAMD)(mode, pTrace_indirect, primcount, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMultiDrawElementsIndirectAMD \
   GLenum mode = trace_packet.get_param_value<GLenum>(0); \
   GLenum type = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_indirect = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLsizei primcount = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glMultiDrawElementsIndirectAMD GL_ENTRYPOINT(glMultiDrawElementsIndirectAMD)(mode, type, pTrace_indirect, primcount, stride)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGenPathsNV \
   GLsizei range = trace_packet.get_param_value<GLsizei>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGenPathsNV GL_ENTRYPOINT(glGenPathsNV)(range)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDeletePathsNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLsizei range = trace_packet.get_param_value<GLsizei>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glDeletePathsNV GL_ENTRYPOINT(glDeletePathsNV)(path, range)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsPathNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsPathNV GL_ENTRYPOINT(glIsPathNV)(path)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathCommandsNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLsizei numCommands = trace_packet.get_param_value<GLsizei>(1); \
   const GLubyte * pTrace_commands = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLsizei numCoords = trace_packet.get_param_value<GLsizei>(3); \
   GLenum coordType = trace_packet.get_param_value<GLenum>(4); \
   const GLvoid * pTrace_coords = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathCommandsNV GL_ENTRYPOINT(glPathCommandsNV)(path, numCommands, pTrace_commands, numCoords, coordType, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathCoordsNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLsizei numCoords = trace_packet.get_param_value<GLsizei>(1); \
   GLenum coordType = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_coords = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathCoordsNV GL_ENTRYPOINT(glPathCoordsNV)(path, numCoords, coordType, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathSubCommandsNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLsizei commandStart = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei commandsToDelete = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei numCommands = trace_packet.get_param_value<GLsizei>(3); \
   const GLubyte * pTrace_commands = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(4)); \
   GLsizei numCoords = trace_packet.get_param_value<GLsizei>(5); \
   GLenum coordType = trace_packet.get_param_value<GLenum>(6); \
   const GLvoid * pTrace_coords = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathSubCommandsNV GL_ENTRYPOINT(glPathSubCommandsNV)(path, commandStart, commandsToDelete, numCommands, pTrace_commands, numCoords, coordType, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathSubCoordsNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLsizei coordStart = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei numCoords = trace_packet.get_param_value<GLsizei>(2); \
   GLenum coordType = trace_packet.get_param_value<GLenum>(3); \
   const GLvoid * pTrace_coords = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathSubCoordsNV GL_ENTRYPOINT(glPathSubCoordsNV)(path, coordStart, numCoords, coordType, pTrace_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathStringNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum format = trace_packet.get_param_value<GLenum>(1); \
   GLsizei length = trace_packet.get_param_value<GLsizei>(2); \
   const GLvoid * pTrace_pathString = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathStringNV GL_ENTRYPOINT(glPathStringNV)(path, format, length, pTrace_pathString)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathGlyphsNV \
   GLuint firstPathName = trace_packet.get_param_value<GLuint>(0); \
   GLenum fontTarget = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_fontName = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLbitfield fontStyle = trace_packet.get_param_value<GLbitfield>(3); \
   GLsizei numGlyphs = trace_packet.get_param_value<GLsizei>(4); \
   GLenum type = trace_packet.get_param_value<GLenum>(5); \
   const GLvoid * pTrace_charcodes = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(6)); \
   GLenum handleMissingGlyphs = trace_packet.get_param_value<GLenum>(7); \
   GLuint pathParameterTemplate = trace_packet.get_param_value<GLuint>(8); \
   GLfloat emScale = trace_packet.get_param_value<GLfloat>(9);

#define VOGL_REPLAY_CALL_GL_HELPER_glPathGlyphsNV GL_ENTRYPOINT(glPathGlyphsNV)(firstPathName, fontTarget, pTrace_fontName, fontStyle, numGlyphs, type, pTrace_charcodes, handleMissingGlyphs, pathParameterTemplate, emScale)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathGlyphRangeNV \
   GLuint firstPathName = trace_packet.get_param_value<GLuint>(0); \
   GLenum fontTarget = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_fontName = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLbitfield fontStyle = trace_packet.get_param_value<GLbitfield>(3); \
   GLuint firstGlyph = trace_packet.get_param_value<GLuint>(4); \
   GLsizei numGlyphs = trace_packet.get_param_value<GLsizei>(5); \
   GLenum handleMissingGlyphs = trace_packet.get_param_value<GLenum>(6); \
   GLuint pathParameterTemplate = trace_packet.get_param_value<GLuint>(7); \
   GLfloat emScale = trace_packet.get_param_value<GLfloat>(8);

#define VOGL_REPLAY_CALL_GL_HELPER_glPathGlyphRangeNV GL_ENTRYPOINT(glPathGlyphRangeNV)(firstPathName, fontTarget, pTrace_fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glWeightPathsNV \
   GLuint resultPath = trace_packet.get_param_value<GLuint>(0); \
   GLsizei numPaths = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint * pTrace_paths = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLfloat * pTrace_weights = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glWeightPathsNV GL_ENTRYPOINT(glWeightPathsNV)(resultPath, numPaths, pTrace_paths, pTrace_weights)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCopyPathNV \
   GLuint resultPath = trace_packet.get_param_value<GLuint>(0); \
   GLuint srcPath = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glCopyPathNV GL_ENTRYPOINT(glCopyPathNV)(resultPath, srcPath)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInterpolatePathsNV \
   GLuint resultPath = trace_packet.get_param_value<GLuint>(0); \
   GLuint pathA = trace_packet.get_param_value<GLuint>(1); \
   GLuint pathB = trace_packet.get_param_value<GLuint>(2); \
   GLfloat weight = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glInterpolatePathsNV GL_ENTRYPOINT(glInterpolatePathsNV)(resultPath, pathA, pathB, weight)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTransformPathNV \
   GLuint resultPath = trace_packet.get_param_value<GLuint>(0); \
   GLuint srcPath = trace_packet.get_param_value<GLuint>(1); \
   GLenum transformType = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_transformValues = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glTransformPathNV GL_ENTRYPOINT(glTransformPathNV)(resultPath, srcPath, transformType, pTrace_transformValues)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathParameterivNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathParameterivNV GL_ENTRYPOINT(glPathParameterivNV)(path, pname, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathParameteriNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLint value = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glPathParameteriNV GL_ENTRYPOINT(glPathParameteriNV)(path, pname, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathParameterfvNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathParameterfvNV GL_ENTRYPOINT(glPathParameterfvNV)(path, pname, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathParameterfNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   GLfloat value = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glPathParameterfNV GL_ENTRYPOINT(glPathParameterfNV)(path, pname, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathDashArrayNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLsizei dashCount = trace_packet.get_param_value<GLsizei>(1); \
   const GLfloat * pTrace_dashArray = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathDashArrayNV GL_ENTRYPOINT(glPathDashArrayNV)(path, dashCount, pTrace_dashArray)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathStencilFuncNV \
   GLenum func = trace_packet.get_param_value<GLenum>(0); \
   GLint ref = trace_packet.get_param_value<GLint>(1); \
   GLuint mask = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glPathStencilFuncNV GL_ENTRYPOINT(glPathStencilFuncNV)(func, ref, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathStencilDepthOffsetNV \
   GLfloat factor = trace_packet.get_param_value<GLfloat>(0); \
   GLfloat units = trace_packet.get_param_value<GLfloat>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glPathStencilDepthOffsetNV GL_ENTRYPOINT(glPathStencilDepthOffsetNV)(factor, units)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilFillPathNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum fillMode = trace_packet.get_param_value<GLenum>(1); \
   GLuint mask = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilFillPathNV GL_ENTRYPOINT(glStencilFillPathNV)(path, fillMode, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilStrokePathNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLint reference = trace_packet.get_param_value<GLint>(1); \
   GLuint mask = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilStrokePathNV GL_ENTRYPOINT(glStencilStrokePathNV)(path, reference, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilFillPathInstancedNV \
   GLsizei numPaths = trace_packet.get_param_value<GLsizei>(0); \
   GLenum pathNameType = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_paths = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLuint pathBase = trace_packet.get_param_value<GLuint>(3); \
   GLenum fillMode = trace_packet.get_param_value<GLenum>(4); \
   GLuint mask = trace_packet.get_param_value<GLuint>(5); \
   GLenum transformType = trace_packet.get_param_value<GLenum>(6); \
   const GLfloat * pTrace_transformValues = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilFillPathInstancedNV GL_ENTRYPOINT(glStencilFillPathInstancedNV)(numPaths, pathNameType, pTrace_paths, pathBase, fillMode, mask, transformType, pTrace_transformValues)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilStrokePathInstancedNV \
   GLsizei numPaths = trace_packet.get_param_value<GLsizei>(0); \
   GLenum pathNameType = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_paths = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLuint pathBase = trace_packet.get_param_value<GLuint>(3); \
   GLint reference = trace_packet.get_param_value<GLint>(4); \
   GLuint mask = trace_packet.get_param_value<GLuint>(5); \
   GLenum transformType = trace_packet.get_param_value<GLenum>(6); \
   const GLfloat * pTrace_transformValues = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilStrokePathInstancedNV GL_ENTRYPOINT(glStencilStrokePathInstancedNV)(numPaths, pathNameType, pTrace_paths, pathBase, reference, mask, transformType, pTrace_transformValues)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathCoverDepthFuncNV \
   GLenum func = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPathCoverDepthFuncNV GL_ENTRYPOINT(glPathCoverDepthFuncNV)(func)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathColorGenNV \
   GLenum color = trace_packet.get_param_value<GLenum>(0); \
   GLenum genMode = trace_packet.get_param_value<GLenum>(1); \
   GLenum colorFormat = trace_packet.get_param_value<GLenum>(2); \
   const GLfloat * pTrace_coeffs = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathColorGenNV GL_ENTRYPOINT(glPathColorGenNV)(color, genMode, colorFormat, pTrace_coeffs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathTexGenNV \
   GLenum texCoordSet = trace_packet.get_param_value<GLenum>(0); \
   GLenum genMode = trace_packet.get_param_value<GLenum>(1); \
   GLint components = trace_packet.get_param_value<GLint>(2); \
   const GLfloat * pTrace_coeffs = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glPathTexGenNV GL_ENTRYPOINT(glPathTexGenNV)(texCoordSet, genMode, components, pTrace_coeffs)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPathFogGenNV \
   GLenum genMode = trace_packet.get_param_value<GLenum>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glPathFogGenNV GL_ENTRYPOINT(glPathFogGenNV)(genMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCoverFillPathNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum coverMode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glCoverFillPathNV GL_ENTRYPOINT(glCoverFillPathNV)(path, coverMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCoverStrokePathNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum coverMode = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glCoverStrokePathNV GL_ENTRYPOINT(glCoverStrokePathNV)(path, coverMode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCoverFillPathInstancedNV \
   GLsizei numPaths = trace_packet.get_param_value<GLsizei>(0); \
   GLenum pathNameType = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_paths = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLuint pathBase = trace_packet.get_param_value<GLuint>(3); \
   GLenum coverMode = trace_packet.get_param_value<GLenum>(4); \
   GLenum transformType = trace_packet.get_param_value<GLenum>(5); \
   const GLfloat * pTrace_transformValues = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glCoverFillPathInstancedNV GL_ENTRYPOINT(glCoverFillPathInstancedNV)(numPaths, pathNameType, pTrace_paths, pathBase, coverMode, transformType, pTrace_transformValues)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glCoverStrokePathInstancedNV \
   GLsizei numPaths = trace_packet.get_param_value<GLsizei>(0); \
   GLenum pathNameType = trace_packet.get_param_value<GLenum>(1); \
   const GLvoid * pTrace_paths = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(2)); \
   GLuint pathBase = trace_packet.get_param_value<GLuint>(3); \
   GLenum coverMode = trace_packet.get_param_value<GLenum>(4); \
   GLenum transformType = trace_packet.get_param_value<GLenum>(5); \
   const GLfloat * pTrace_transformValues = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glCoverStrokePathInstancedNV GL_ENTRYPOINT(glCoverStrokePathInstancedNV)(numPaths, pathNameType, pTrace_paths, pathBase, coverMode, transformType, pTrace_transformValues)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathParameterivNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathParameterivNV GL_ENTRYPOINT(glGetPathParameterivNV)(path, pname, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathParameterfvNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathParameterfvNV GL_ENTRYPOINT(glGetPathParameterfvNV)(path, pname, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathCommandsNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   const GLubyte * pTrace_commands = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathCommandsNV GL_ENTRYPOINT(glGetPathCommandsNV)(path, pReplay_commands)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathCoordsNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_coords = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathCoordsNV GL_ENTRYPOINT(glGetPathCoordsNV)(path, pReplay_coords)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathDashArrayNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   const GLfloat * pTrace_dashArray = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(1));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathDashArrayNV GL_ENTRYPOINT(glGetPathDashArrayNV)(path, pReplay_dashArray)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathMetricsNV \
   GLbitfield metricQueryMask = trace_packet.get_param_value<GLbitfield>(0); \
   GLsizei numPaths = trace_packet.get_param_value<GLsizei>(1); \
   GLenum pathNameType = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_paths = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLuint pathBase = trace_packet.get_param_value<GLuint>(4); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(5); \
   const GLfloat * pTrace_metrics = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(6));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathMetricsNV GL_ENTRYPOINT(glGetPathMetricsNV)(metricQueryMask, numPaths, pathNameType, pTrace_paths, pathBase, stride, pReplay_metrics)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathMetricRangeNV \
   GLbitfield metricQueryMask = trace_packet.get_param_value<GLbitfield>(0); \
   GLuint firstPathName = trace_packet.get_param_value<GLuint>(1); \
   GLsizei numPaths = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei stride = trace_packet.get_param_value<GLsizei>(3); \
   const GLfloat * pTrace_metrics = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathMetricRangeNV GL_ENTRYPOINT(glGetPathMetricRangeNV)(metricQueryMask, firstPathName, numPaths, stride, pReplay_metrics)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathSpacingNV \
   GLenum pathListMode = trace_packet.get_param_value<GLenum>(0); \
   GLsizei numPaths = trace_packet.get_param_value<GLsizei>(1); \
   GLenum pathNameType = trace_packet.get_param_value<GLenum>(2); \
   const GLvoid * pTrace_paths = reinterpret_cast<const GLvoid *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLuint pathBase = trace_packet.get_param_value<GLuint>(4); \
   GLfloat advanceScale = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat kerningScale = trace_packet.get_param_value<GLfloat>(6); \
   GLenum transformType = trace_packet.get_param_value<GLenum>(7); \
   const GLfloat * pTrace_returnedSpacing = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(8));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathSpacingNV GL_ENTRYPOINT(glGetPathSpacingNV)(pathListMode, numPaths, pathNameType, pTrace_paths, pathBase, advanceScale, kerningScale, transformType, pReplay_returnedSpacing)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathColorGenivNV \
   GLenum color = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathColorGenivNV GL_ENTRYPOINT(glGetPathColorGenivNV)(color, pname, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathColorGenfvNV \
   GLenum color = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathColorGenfvNV GL_ENTRYPOINT(glGetPathColorGenfvNV)(color, pname, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathTexGenivNV \
   GLenum texCoordSet = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathTexGenivNV GL_ENTRYPOINT(glGetPathTexGenivNV)(texCoordSet, pname, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathTexGenfvNV \
   GLenum texCoordSet = trace_packet.get_param_value<GLenum>(0); \
   GLenum pname = trace_packet.get_param_value<GLenum>(1); \
   const GLfloat * pTrace_value = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathTexGenfvNV GL_ENTRYPOINT(glGetPathTexGenfvNV)(texCoordSet, pname, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsPointInFillPathNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLuint mask = trace_packet.get_param_value<GLuint>(1); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsPointInFillPathNV GL_ENTRYPOINT(glIsPointInFillPathNV)(path, mask, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsPointInStrokePathNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLfloat x = trace_packet.get_param_value<GLfloat>(1); \
   GLfloat y = trace_packet.get_param_value<GLfloat>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsPointInStrokePathNV GL_ENTRYPOINT(glIsPointInStrokePathNV)(path, x, y)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetPathLengthNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLsizei startSegment = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei numSegments = trace_packet.get_param_value<GLsizei>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetPathLengthNV GL_ENTRYPOINT(glGetPathLengthNV)(path, startSegment, numSegments)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glPointAlongPathNV \
   GLuint path = trace_packet.get_param_value<GLuint>(0); \
   GLsizei startSegment = trace_packet.get_param_value<GLsizei>(1); \
   GLsizei numSegments = trace_packet.get_param_value<GLsizei>(2); \
   GLfloat distance = trace_packet.get_param_value<GLfloat>(3); \
   const GLfloat * pTrace_x = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(4)); \
   const GLfloat * pTrace_y = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(5)); \
   const GLfloat * pTrace_tangentX = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(6)); \
   const GLfloat * pTrace_tangentY = reinterpret_cast<const GLfloat *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glPointAlongPathNV GL_ENTRYPOINT(glPointAlongPathNV)(path, startSegment, numSegments, distance, pReplay_x, pReplay_y, pReplay_tangentX, pReplay_tangentY)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glStencilOpValueAMD \
   GLenum face = trace_packet.get_param_value<GLenum>(0); \
   GLuint value = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glStencilOpValueAMD GL_ENTRYPOINT(glStencilOpValueAMD)(face, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTextureHandleNV \
   GLuint texture = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTextureHandleNV GL_ENTRYPOINT(glGetTextureHandleNV)(texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetTextureSamplerHandleNV \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLuint sampler = trace_packet.get_param_value<GLuint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetTextureSamplerHandleNV GL_ENTRYPOINT(glGetTextureSamplerHandleNV)(texture, sampler)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMakeTextureHandleResidentNV \
   GLuint64 handle = trace_packet.get_param_value<GLuint64>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMakeTextureHandleResidentNV GL_ENTRYPOINT(glMakeTextureHandleResidentNV)(handle)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMakeTextureHandleNonResidentNV \
   GLuint64 handle = trace_packet.get_param_value<GLuint64>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMakeTextureHandleNonResidentNV GL_ENTRYPOINT(glMakeTextureHandleNonResidentNV)(handle)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glGetImageHandleNV \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLboolean layered = trace_packet.get_param_value<GLboolean>(2); \
   GLint layer = trace_packet.get_param_value<GLint>(3); \
   GLenum format = trace_packet.get_param_value<GLenum>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glGetImageHandleNV GL_ENTRYPOINT(glGetImageHandleNV)(texture, level, layered, layer, format)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMakeImageHandleResidentNV \
   GLuint64 handle = trace_packet.get_param_value<GLuint64>(0); \
   GLenum access = trace_packet.get_param_value<GLenum>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glMakeImageHandleResidentNV GL_ENTRYPOINT(glMakeImageHandleResidentNV)(handle, access)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMakeImageHandleNonResidentNV \
   GLuint64 handle = trace_packet.get_param_value<GLuint64>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glMakeImageHandleNonResidentNV GL_ENTRYPOINT(glMakeImageHandleNonResidentNV)(handle)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformHandleui64NV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLuint64 value = trace_packet.get_param_value<GLuint64>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformHandleui64NV GL_ENTRYPOINT(glUniformHandleui64NV)(location, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUniformHandleui64vNV \
   GLint location = trace_packet.get_param_value<GLint>(0); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(1); \
   const GLuint64 * pTrace_value = reinterpret_cast<const GLuint64 *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glUniformHandleui64vNV GL_ENTRYPOINT(glUniformHandleui64vNV)(location, count, pTrace_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformHandleui64NV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLuint64 value = trace_packet.get_param_value<GLuint64>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformHandleui64NV GL_ENTRYPOINT(glProgramUniformHandleui64NV)(program, location, value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glProgramUniformHandleui64vNV \
   GLuint program = trace_packet.get_param_value<GLuint>(0); \
   GLint location = trace_packet.get_param_value<GLint>(1); \
   GLsizei count = trace_packet.get_param_value<GLsizei>(2); \
   const GLuint64 * pTrace_values = reinterpret_cast<const GLuint64 *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glProgramUniformHandleui64vNV GL_ENTRYPOINT(glProgramUniformHandleui64vNV)(program, location, count, pTrace_values)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsTextureHandleResidentNV \
   GLuint64 handle = trace_packet.get_param_value<GLuint64>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsTextureHandleResidentNV GL_ENTRYPOINT(glIsTextureHandleResidentNV)(handle)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glIsImageHandleResidentNV \
   GLuint64 handle = trace_packet.get_param_value<GLuint64>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glIsImageHandleResidentNV GL_ENTRYPOINT(glIsImageHandleResidentNV)(handle)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glBeginConditionalRenderNVX \
   GLuint id = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glBeginConditionalRenderNVX GL_ENTRYPOINT(glBeginConditionalRenderNVX)(id)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glEndConditionalRenderNVX  

#define VOGL_REPLAY_CALL_GL_HELPER_glEndConditionalRenderNVX GL_ENTRYPOINT(glEndConditionalRenderNVX)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTexStorageSparseAMD \
   GLenum target = trace_packet.get_param_value<GLenum>(0); \
   GLenum internalFormat = trace_packet.get_param_value<GLenum>(1); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(2); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei layers = trace_packet.get_param_value<GLsizei>(5); \
   GLbitfield flags = trace_packet.get_param_value<GLbitfield>(6);

#define VOGL_REPLAY_CALL_GL_HELPER_glTexStorageSparseAMD GL_ENTRYPOINT(glTexStorageSparseAMD)(target, internalFormat, width, height, depth, layers, flags)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glTextureStorageSparseAMD \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLenum target = trace_packet.get_param_value<GLenum>(1); \
   GLenum internalFormat = trace_packet.get_param_value<GLenum>(2); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(3); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(4); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(5); \
   GLsizei layers = trace_packet.get_param_value<GLsizei>(6); \
   GLbitfield flags = trace_packet.get_param_value<GLbitfield>(7);

#define VOGL_REPLAY_CALL_GL_HELPER_glTextureStorageSparseAMD GL_ENTRYPOINT(glTextureStorageSparseAMD)(texture, target, internalFormat, width, height, depth, layers, flags)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glSyncTextureINTEL \
   GLuint texture = trace_packet.get_param_value<GLuint>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glSyncTextureINTEL GL_ENTRYPOINT(glSyncTextureINTEL)(texture)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glUnmapTexture2DINTEL \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glUnmapTexture2DINTEL GL_ENTRYPOINT(glUnmapTexture2DINTEL)(texture, level)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glMapTexture2DINTEL \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLint level = trace_packet.get_param_value<GLint>(1); \
   GLbitfield access = trace_packet.get_param_value<GLbitfield>(2); \
   const GLint * pTrace_stride = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3)); \
   const GLenum * pTrace_layout = reinterpret_cast<const GLenum *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glMapTexture2DINTEL GL_ENTRYPOINT(glMapTexture2DINTEL)(texture, level, access, pTrace_stride, pTrace_layout)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glDrawTextureNV \
   GLuint texture = trace_packet.get_param_value<GLuint>(0); \
   GLuint sampler = trace_packet.get_param_value<GLuint>(1); \
   GLfloat x0 = trace_packet.get_param_value<GLfloat>(2); \
   GLfloat y0 = trace_packet.get_param_value<GLfloat>(3); \
   GLfloat x1 = trace_packet.get_param_value<GLfloat>(4); \
   GLfloat y1 = trace_packet.get_param_value<GLfloat>(5); \
   GLfloat z = trace_packet.get_param_value<GLfloat>(6); \
   GLfloat s0 = trace_packet.get_param_value<GLfloat>(7); \
   GLfloat t0 = trace_packet.get_param_value<GLfloat>(8); \
   GLfloat s1 = trace_packet.get_param_value<GLfloat>(9); \
   GLfloat t1 = trace_packet.get_param_value<GLfloat>(10);

#define VOGL_REPLAY_CALL_GL_HELPER_glDrawTextureNV GL_ENTRYPOINT(glDrawTextureNV)(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glInternalTraceCommandRAD \
   GLuint cmd = trace_packet.get_param_value<GLuint>(0); \
   GLuint size = trace_packet.get_param_value<GLuint>(1); \
   const GLubyte * pTrace_data = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glInternalTraceCommandRAD GL_ENTRYPOINT(glInternalTraceCommandRAD)(cmd, size, pTrace_data)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXChooseVisual \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLint screen = trace_packet.get_param_value<GLint>(1); \
   const GLint * pTrace_attribList = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXChooseVisual GL_ENTRYPOINT(glXChooseVisual)(pTrace_dpy, screen, pTrace_attribList)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetConfig \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   const XVisualInfo * pTrace_vis = reinterpret_cast<const XVisualInfo *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLint attrib = trace_packet.get_param_value<GLint>(2); \
   const GLint * pTrace_value = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetConfig GL_ENTRYPOINT(glXGetConfig)(pTrace_dpy, pTrace_vis, attrib, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryExtension \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLint * pTrace_errorBase = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLint * pTrace_eventBase = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryExtension GL_ENTRYPOINT(glXQueryExtension)(pTrace_dpy, pReplay_errorBase, pReplay_eventBase)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetClientString \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLint name = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetClientString GL_ENTRYPOINT(glXGetClientString)(pTrace_dpy, name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetCurrentDrawable  

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetCurrentDrawable GL_ENTRYPOINT(glXGetCurrentDrawable)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXRender  

#define VOGL_REPLAY_CALL_GL_HELPER_glXRender GL_ENTRYPOINT(glXRender)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXRenderLarge  

#define VOGL_REPLAY_CALL_GL_HELPER_glXRenderLarge GL_ENTRYPOINT(glXRenderLarge)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCreateContext \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   const XVisualInfo * pTrace_vis = reinterpret_cast<const XVisualInfo *>(trace_packet.get_param_client_memory_ptr(1)); \
   GLXContext shareList = trace_packet.get_param_value<GLXContext>(2); \
   Bool direct = trace_packet.get_param_value<Bool>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glXCreateContext GL_ENTRYPOINT(glXCreateContext)(pTrace_dpy, pTrace_vis, shareList, direct)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXDestroyContext \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXContext context = trace_packet.get_param_value<GLXContext>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXDestroyContext GL_ENTRYPOINT(glXDestroyContext)(pTrace_dpy, context)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXMakeCurrent \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   GLXContext context = trace_packet.get_param_value<GLXContext>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXMakeCurrent GL_ENTRYPOINT(glXMakeCurrent)(pTrace_dpy, drawable, context)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetCurrentContext  

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetCurrentContext GL_ENTRYPOINT(glXGetCurrentContext)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXIsDirect \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXContext context = trace_packet.get_param_value<GLXContext>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXIsDirect GL_ENTRYPOINT(glXIsDirect)(pTrace_dpy, context)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryVersion \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   const GLint * pTrace_major = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(1)); \
   const GLint * pTrace_minor = reinterpret_cast<const GLint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryVersion GL_ENTRYPOINT(glXQueryVersion)(pTrace_dpy, pReplay_major, pReplay_minor)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXWaitGL  

#define VOGL_REPLAY_CALL_GL_HELPER_glXWaitGL GL_ENTRYPOINT(glXWaitGL)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXWaitX  

#define VOGL_REPLAY_CALL_GL_HELPER_glXWaitX GL_ENTRYPOINT(glXWaitX)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCopyContext \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXContext source = trace_packet.get_param_value<GLXContext>(1); \
   GLXContext dest = trace_packet.get_param_value<GLXContext>(2); \
   unsigned long mask = trace_packet.get_param_value<unsigned long>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glXCopyContext GL_ENTRYPOINT(glXCopyContext)(pTrace_dpy, source, dest, mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXSwapBuffers \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXSwapBuffers GL_ENTRYPOINT(glXSwapBuffers)(pTrace_dpy, drawable)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXUseXFont \
   Font font = trace_packet.get_param_value<Font>(0); \
   GLint first = trace_packet.get_param_value<GLint>(1); \
   GLint count = trace_packet.get_param_value<GLint>(2); \
   GLint list_base = trace_packet.get_param_value<GLint>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glXUseXFont GL_ENTRYPOINT(glXUseXFont)(font, first, count, list_base)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCreateGLXPixmap \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   const XVisualInfo * pTrace_visual = reinterpret_cast<const XVisualInfo *>(trace_packet.get_param_client_memory_ptr(1)); \
   Pixmap pixmap = trace_packet.get_param_value<Pixmap>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXCreateGLXPixmap GL_ENTRYPOINT(glXCreateGLXPixmap)(pTrace_dpy, pTrace_visual, pixmap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetVisualConfigs  

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetVisualConfigs GL_ENTRYPOINT(glXGetVisualConfigs)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXDestroyGLXPixmap \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXPixmap pixmap = trace_packet.get_param_value<GLXPixmap>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXDestroyGLXPixmap GL_ENTRYPOINT(glXDestroyGLXPixmap)(pTrace_dpy, pixmap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXVendorPrivate  

#define VOGL_REPLAY_CALL_GL_HELPER_glXVendorPrivate GL_ENTRYPOINT(glXVendorPrivate)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXVendorPrivateWithReply  

#define VOGL_REPLAY_CALL_GL_HELPER_glXVendorPrivateWithReply GL_ENTRYPOINT(glXVendorPrivateWithReply)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryExtensionsString \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLint screen = trace_packet.get_param_value<GLint>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryExtensionsString GL_ENTRYPOINT(glXQueryExtensionsString)(pTrace_dpy, screen)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryServerString \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLint screen = trace_packet.get_param_value<GLint>(1); \
   GLint name = trace_packet.get_param_value<GLint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryServerString GL_ENTRYPOINT(glXQueryServerString)(pTrace_dpy, screen, name)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXClientInfo  

#define VOGL_REPLAY_CALL_GL_HELPER_glXClientInfo GL_ENTRYPOINT(glXClientInfo)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetDrawableAttributes \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetDrawableAttributes GL_ENTRYPOINT(glXGetDrawableAttributes)(drawable)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXChangeDrawableAttributes \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glXChangeDrawableAttributes GL_ENTRYPOINT(glXChangeDrawableAttributes)(drawable)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetFBConfigs \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1); \
   const int * pTrace_nelements = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetFBConfigs GL_ENTRYPOINT(glXGetFBConfigs)(pTrace_dpy, screen, pReplay_nelements)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXChooseFBConfig \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1); \
   const int * pTrace_attrib_list = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(2)); \
   const int * pTrace_nelements = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXChooseFBConfig GL_ENTRYPOINT(glXChooseFBConfig)(pTrace_dpy, screen, pTrace_attrib_list, pReplay_nelements)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetFBConfigAttrib \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXFBConfig config = trace_packet.get_param_value<GLXFBConfig>(1); \
   int attribute = trace_packet.get_param_value<int>(2); \
   const int * pTrace_value = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetFBConfigAttrib GL_ENTRYPOINT(glXGetFBConfigAttrib)(pTrace_dpy, config, attribute, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetVisualFromFBConfig \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXFBConfig config = trace_packet.get_param_value<GLXFBConfig>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetVisualFromFBConfig GL_ENTRYPOINT(glXGetVisualFromFBConfig)(pTrace_dpy, config)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCreateWindow \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXFBConfig config = trace_packet.get_param_value<GLXFBConfig>(1); \
   Window win = trace_packet.get_param_value<Window>(2); \
   const int * pTrace_attrib_list = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXCreateWindow GL_ENTRYPOINT(glXCreateWindow)(pTrace_dpy, config, win, pTrace_attrib_list)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXDestroyWindow \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXWindow win = trace_packet.get_param_value<GLXWindow>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXDestroyWindow GL_ENTRYPOINT(glXDestroyWindow)(pTrace_dpy, win)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCreatePixmap \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXFBConfig config = trace_packet.get_param_value<GLXFBConfig>(1); \
   Pixmap pixmap = trace_packet.get_param_value<Pixmap>(2); \
   const int * pTrace_attrib_list = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXCreatePixmap GL_ENTRYPOINT(glXCreatePixmap)(pTrace_dpy, config, pixmap, pTrace_attrib_list)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXDestroyPixmap \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXPixmap pixmap = trace_packet.get_param_value<GLXPixmap>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXDestroyPixmap GL_ENTRYPOINT(glXDestroyPixmap)(pTrace_dpy, pixmap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCreatePbuffer \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXFBConfig config = trace_packet.get_param_value<GLXFBConfig>(1); \
   const int * pTrace_attrib_list = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXCreatePbuffer GL_ENTRYPOINT(glXCreatePbuffer)(pTrace_dpy, config, pTrace_attrib_list)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXDestroyPbuffer \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXPbuffer pbuf = trace_packet.get_param_value<GLXPbuffer>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXDestroyPbuffer GL_ENTRYPOINT(glXDestroyPbuffer)(pTrace_dpy, pbuf)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryDrawable \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable draw = trace_packet.get_param_value<GLXDrawable>(1); \
   int attribute = trace_packet.get_param_value<int>(2); \
   const unsigned int * pTrace_value = reinterpret_cast<const unsigned int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryDrawable GL_ENTRYPOINT(glXQueryDrawable)(pTrace_dpy, draw, attribute, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCreateNewContext \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXFBConfig config = trace_packet.get_param_value<GLXFBConfig>(1); \
   int render_type = trace_packet.get_param_value<int>(2); \
   GLXContext share_list = trace_packet.get_param_value<GLXContext>(3); \
   Bool direct = trace_packet.get_param_value<Bool>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glXCreateNewContext GL_ENTRYPOINT(glXCreateNewContext)(pTrace_dpy, config, render_type, share_list, direct)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXMakeContextCurrent \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable draw = trace_packet.get_param_value<GLXDrawable>(1); \
   GLXDrawable read = trace_packet.get_param_value<GLXDrawable>(2); \
   GLXContext ctx = trace_packet.get_param_value<GLXContext>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glXMakeContextCurrent GL_ENTRYPOINT(glXMakeContextCurrent)(pTrace_dpy, draw, read, ctx)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetCurrentReadDrawable  

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetCurrentReadDrawable GL_ENTRYPOINT(glXGetCurrentReadDrawable)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetCurrentDisplay  

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetCurrentDisplay GL_ENTRYPOINT(glXGetCurrentDisplay)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryContext \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXContext ctx = trace_packet.get_param_value<GLXContext>(1); \
   int attribute = trace_packet.get_param_value<int>(2); \
   const int * pTrace_value = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryContext GL_ENTRYPOINT(glXQueryContext)(pTrace_dpy, ctx, attribute, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXSelectEvent \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable draw = trace_packet.get_param_value<GLXDrawable>(1); \
   unsigned long event_mask = trace_packet.get_param_value<unsigned long>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXSelectEvent GL_ENTRYPOINT(glXSelectEvent)(pTrace_dpy, draw, event_mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetSelectedEvent \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable draw = trace_packet.get_param_value<GLXDrawable>(1); \
   const unsigned long * pTrace_event_mask = reinterpret_cast<const unsigned long *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetSelectedEvent GL_ENTRYPOINT(glXGetSelectedEvent)(pTrace_dpy, draw, pReplay_event_mask)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetProcAddress \
   const GLubyte * pTrace_procName = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetProcAddress GL_ENTRYPOINT(glXGetProcAddress)(pTrace_procName)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetProcAddressARB \
   const GLubyte * pTrace_procName = reinterpret_cast<const GLubyte *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetProcAddressARB GL_ENTRYPOINT(glXGetProcAddressARB)(pTrace_procName)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCreateContextAttribsARB \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXFBConfig config = trace_packet.get_param_value<GLXFBConfig>(1); \
   GLXContext share_context = trace_packet.get_param_value<GLXContext>(2); \
   Bool direct = trace_packet.get_param_value<Bool>(3); \
   const int * pTrace_attrib_list = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glXCreateContextAttribsARB GL_ENTRYPOINT(glXCreateContextAttribsARB)(pTrace_dpy, config, share_context, direct, pTrace_attrib_list)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXSwapIntervalSGI \
   int interval = trace_packet.get_param_value<int>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glXSwapIntervalSGI GL_ENTRYPOINT(glXSwapIntervalSGI)(interval)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetVideoSyncSGI \
   const unsigned int * pTrace_count = reinterpret_cast<const unsigned int *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetVideoSyncSGI GL_ENTRYPOINT(glXGetVideoSyncSGI)(pReplay_count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXWaitVideoSyncSGI \
   int divisor = trace_packet.get_param_value<int>(0); \
   int remainder = trace_packet.get_param_value<int>(1); \
   const unsigned int * pTrace_count = reinterpret_cast<const unsigned int *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXWaitVideoSyncSGI GL_ENTRYPOINT(glXWaitVideoSyncSGI)(divisor, remainder, pReplay_count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXMakeCurrentReadSGI \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable draw = trace_packet.get_param_value<GLXDrawable>(1); \
   GLXDrawable read = trace_packet.get_param_value<GLXDrawable>(2); \
   GLXContext ctx = trace_packet.get_param_value<GLXContext>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glXMakeCurrentReadSGI GL_ENTRYPOINT(glXMakeCurrentReadSGI)(pTrace_dpy, draw, read, ctx)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetCurrentReadDrawableSGI  

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetCurrentReadDrawableSGI GL_ENTRYPOINT(glXGetCurrentReadDrawableSGI)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCopyImageSubDataNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXContext srcCtx = trace_packet.get_param_value<GLXContext>(1); \
   GLuint srcName = trace_packet.get_param_value<GLuint>(2); \
   GLenum srcTarget = trace_packet.get_param_value<GLenum>(3); \
   GLint srcLevel = trace_packet.get_param_value<GLint>(4); \
   GLint srcX = trace_packet.get_param_value<GLint>(5); \
   GLint srcY = trace_packet.get_param_value<GLint>(6); \
   GLint srcZ = trace_packet.get_param_value<GLint>(7); \
   GLXContext dstCtx = trace_packet.get_param_value<GLXContext>(8); \
   GLuint dstName = trace_packet.get_param_value<GLuint>(9); \
   GLenum dstTarget = trace_packet.get_param_value<GLenum>(10); \
   GLint dstLevel = trace_packet.get_param_value<GLint>(11); \
   GLint dstX = trace_packet.get_param_value<GLint>(12); \
   GLint dstY = trace_packet.get_param_value<GLint>(13); \
   GLint dstZ = trace_packet.get_param_value<GLint>(14); \
   GLsizei width = trace_packet.get_param_value<GLsizei>(15); \
   GLsizei height = trace_packet.get_param_value<GLsizei>(16); \
   GLsizei depth = trace_packet.get_param_value<GLsizei>(17);

#define VOGL_REPLAY_CALL_GL_HELPER_glXCopyImageSubDataNV GL_ENTRYPOINT(glXCopyImageSubDataNV)(pTrace_dpy, srcCtx, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstCtx, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXSwapIntervalEXT \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   int interval = trace_packet.get_param_value<int>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXSwapIntervalEXT GL_ENTRYPOINT(glXSwapIntervalEXT)(pTrace_dpy, drawable, interval)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetCurrentDisplayEXT  

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetCurrentDisplayEXT GL_ENTRYPOINT(glXGetCurrentDisplayEXT)()

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryContextInfoEXT \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXContext context = trace_packet.get_param_value<GLXContext>(1); \
   int attribute = trace_packet.get_param_value<int>(2); \
   const int * pTrace_value = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryContextInfoEXT GL_ENTRYPOINT(glXQueryContextInfoEXT)(pTrace_dpy, context, attribute, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetContextIDEXT \
   const GLXContext context = trace_packet.get_param_value<const GLXContext>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetContextIDEXT GL_ENTRYPOINT(glXGetContextIDEXT)(context)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXImportContextEXT \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXContextID contextID = trace_packet.get_param_value<GLXContextID>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXImportContextEXT GL_ENTRYPOINT(glXImportContextEXT)(pTrace_dpy, contextID)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXFreeContextEXT \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXContext context = trace_packet.get_param_value<GLXContext>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXFreeContextEXT GL_ENTRYPOINT(glXFreeContextEXT)(pTrace_dpy, context)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXReleaseVideoCaptureDeviceNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXVideoCaptureDeviceNV device = trace_packet.get_param_value<GLXVideoCaptureDeviceNV>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXReleaseVideoCaptureDeviceNV GL_ENTRYPOINT(glXReleaseVideoCaptureDeviceNV)(pTrace_dpy, device)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryVideoCaptureDeviceNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXVideoCaptureDeviceNV device = trace_packet.get_param_value<GLXVideoCaptureDeviceNV>(1); \
   int attribute = trace_packet.get_param_value<int>(2); \
   const int * pTrace_value = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryVideoCaptureDeviceNV GL_ENTRYPOINT(glXQueryVideoCaptureDeviceNV)(pTrace_dpy, device, attribute, pReplay_value)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXLockVideoCaptureDeviceNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXVideoCaptureDeviceNV device = trace_packet.get_param_value<GLXVideoCaptureDeviceNV>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXLockVideoCaptureDeviceNV GL_ENTRYPOINT(glXLockVideoCaptureDeviceNV)(pTrace_dpy, device)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXEnumerateVideoCaptureDevicesNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1); \
   const int * pTrace_nelements = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXEnumerateVideoCaptureDevicesNV GL_ENTRYPOINT(glXEnumerateVideoCaptureDevicesNV)(pTrace_dpy, screen, pReplay_nelements)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXBindVideoCaptureDeviceNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   unsigned int video_capture_slot = trace_packet.get_param_value<unsigned int>(1); \
   GLXVideoCaptureDeviceNV device = trace_packet.get_param_value<GLXVideoCaptureDeviceNV>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXBindVideoCaptureDeviceNV GL_ENTRYPOINT(glXBindVideoCaptureDeviceNV)(pTrace_dpy, video_capture_slot, device)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXResetFrameCountNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXResetFrameCountNV GL_ENTRYPOINT(glXResetFrameCountNV)(pTrace_dpy, screen)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryFrameCountNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1); \
   const GLuint * pTrace_count = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryFrameCountNV GL_ENTRYPOINT(glXQueryFrameCountNV)(pTrace_dpy, screen, pReplay_count)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQueryMaxSwapGroupsNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1); \
   const GLuint * pTrace_maxGroups = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLuint * pTrace_maxBarriers = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXQueryMaxSwapGroupsNV GL_ENTRYPOINT(glXQueryMaxSwapGroupsNV)(pTrace_dpy, screen, pReplay_maxGroups, pReplay_maxBarriers)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXQuerySwapGroupNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   const GLuint * pTrace_group = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(2)); \
   const GLuint * pTrace_barrier = reinterpret_cast<const GLuint *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXQuerySwapGroupNV GL_ENTRYPOINT(glXQuerySwapGroupNV)(pTrace_dpy, drawable, pReplay_group, pReplay_barrier)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXBindSwapBarrierNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLuint group = trace_packet.get_param_value<GLuint>(1); \
   GLuint barrier = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXBindSwapBarrierNV GL_ENTRYPOINT(glXBindSwapBarrierNV)(pTrace_dpy, group, barrier)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXJoinSwapGroupNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   GLuint group = trace_packet.get_param_value<GLuint>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXJoinSwapGroupNV GL_ENTRYPOINT(glXJoinSwapGroupNV)(pTrace_dpy, drawable, group)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCushionSGI \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   Window window = trace_packet.get_param_value<Window>(1); \
   float cushion = trace_packet.get_param_value<float>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXCushionSGI GL_ENTRYPOINT(glXCushionSGI)(pTrace_dpy, window, cushion)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetVideoInfoNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1); \
   GLXVideoDeviceNV VideoDevice = trace_packet.get_param_value<GLXVideoDeviceNV>(2); \
   const unsigned long * pTrace_pulCounterOutputPbuffer = reinterpret_cast<const unsigned long *>(trace_packet.get_param_client_memory_ptr(3)); \
   const unsigned long * pTrace_pulCounterOutputVideo = reinterpret_cast<const unsigned long *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetVideoInfoNV GL_ENTRYPOINT(glXGetVideoInfoNV)(pTrace_dpy, screen, VideoDevice, pReplay_pulCounterOutputPbuffer, pReplay_pulCounterOutputVideo)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXSendPbufferToVideoNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXPbuffer pbuf = trace_packet.get_param_value<GLXPbuffer>(1); \
   int iBufferType = trace_packet.get_param_value<int>(2); \
   const unsigned long * pTrace_pulCounterPbuffer = reinterpret_cast<const unsigned long *>(trace_packet.get_param_client_memory_ptr(3)); \
   GLboolean bBlock = trace_packet.get_param_value<GLboolean>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glXSendPbufferToVideoNV GL_ENTRYPOINT(glXSendPbufferToVideoNV)(pTrace_dpy, pbuf, iBufferType, pReplay_pulCounterPbuffer, bBlock)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXReleaseVideoImageNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXPbuffer pbuf = trace_packet.get_param_value<GLXPbuffer>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXReleaseVideoImageNV GL_ENTRYPOINT(glXReleaseVideoImageNV)(pTrace_dpy, pbuf)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXBindVideoImageNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXVideoDeviceNV VideoDevice = trace_packet.get_param_value<GLXVideoDeviceNV>(1); \
   GLXPbuffer pbuf = trace_packet.get_param_value<GLXPbuffer>(2); \
   int iVideoBuffer = trace_packet.get_param_value<int>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glXBindVideoImageNV GL_ENTRYPOINT(glXBindVideoImageNV)(pTrace_dpy, VideoDevice, pbuf, iVideoBuffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXReleaseVideoDeviceNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1); \
   GLXVideoDeviceNV VideoDevice = trace_packet.get_param_value<GLXVideoDeviceNV>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXReleaseVideoDeviceNV GL_ENTRYPOINT(glXReleaseVideoDeviceNV)(pTrace_dpy, screen, VideoDevice)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetVideoDeviceNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1); \
   int numVideoDevices = trace_packet.get_param_value<int>(2); \
   const GLXVideoDeviceNV * pTrace_pVideoDevice = reinterpret_cast<const GLXVideoDeviceNV *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetVideoDeviceNV GL_ENTRYPOINT(glXGetVideoDeviceNV)(pTrace_dpy, screen, numVideoDevices, pReplay_pVideoDevice)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXBindVideoDeviceNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   unsigned int video_slot = trace_packet.get_param_value<unsigned int>(1); \
   unsigned int video_device = trace_packet.get_param_value<unsigned int>(2); \
   const int * pTrace_attrib_list = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXBindVideoDeviceNV GL_ENTRYPOINT(glXBindVideoDeviceNV)(pTrace_dpy, video_slot, video_device, pTrace_attrib_list)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXEnumerateVideoDevicesNV \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   int screen = trace_packet.get_param_value<int>(1); \
   const int * pTrace_nelements = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(2));

#define VOGL_REPLAY_CALL_GL_HELPER_glXEnumerateVideoDevicesNV GL_ENTRYPOINT(glXEnumerateVideoDevicesNV)(pTrace_dpy, screen, pReplay_nelements)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXReleaseTexImageEXT \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   int buffer = trace_packet.get_param_value<int>(2);

#define VOGL_REPLAY_CALL_GL_HELPER_glXReleaseTexImageEXT GL_ENTRYPOINT(glXReleaseTexImageEXT)(pTrace_dpy, drawable, buffer)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetTransparentIndexSUN \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   Window overlay = trace_packet.get_param_value<Window>(1); \
   Window underlay = trace_packet.get_param_value<Window>(2); \
   const long * pTrace_pTransparentIndex = reinterpret_cast<const long *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetTransparentIndexSUN GL_ENTRYPOINT(glXGetTransparentIndexSUN)(pTrace_dpy, overlay, underlay, pReplay_pTransparentIndex)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCopySubBufferMESA \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   int x = trace_packet.get_param_value<int>(2); \
   int y = trace_packet.get_param_value<int>(3); \
   int width = trace_packet.get_param_value<int>(4); \
   int height = trace_packet.get_param_value<int>(5);

#define VOGL_REPLAY_CALL_GL_HELPER_glXCopySubBufferMESA GL_ENTRYPOINT(glXCopySubBufferMESA)(pTrace_dpy, drawable, x, y, width, height)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXCreateGLXPixmapMESA \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   const XVisualInfo * pTrace_visual = reinterpret_cast<const XVisualInfo *>(trace_packet.get_param_client_memory_ptr(1)); \
   Pixmap pixmap = trace_packet.get_param_value<Pixmap>(2); \
   Colormap cmap = trace_packet.get_param_value<Colormap>(3);

#define VOGL_REPLAY_CALL_GL_HELPER_glXCreateGLXPixmapMESA GL_ENTRYPOINT(glXCreateGLXPixmapMESA)(pTrace_dpy, pReplay_visual, pixmap, cmap)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXReleaseBuffersMESA \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1);

#define VOGL_REPLAY_CALL_GL_HELPER_glXReleaseBuffersMESA GL_ENTRYPOINT(glXReleaseBuffersMESA)(pTrace_dpy, drawable)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXSet3DfxModeMESA \
   int mode = trace_packet.get_param_value<int>(0);

#define VOGL_REPLAY_CALL_GL_HELPER_glXSet3DfxModeMESA GL_ENTRYPOINT(glXSet3DfxModeMESA)(mode)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetSyncValuesOML \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   const int64_t * pTrace_ust = reinterpret_cast<const int64_t *>(trace_packet.get_param_client_memory_ptr(2)); \
   const int64_t * pTrace_msc = reinterpret_cast<const int64_t *>(trace_packet.get_param_client_memory_ptr(3)); \
   const int64_t * pTrace_sbc = reinterpret_cast<const int64_t *>(trace_packet.get_param_client_memory_ptr(4));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetSyncValuesOML GL_ENTRYPOINT(glXGetSyncValuesOML)(pTrace_dpy, drawable, pReplay_ust, pReplay_msc, pReplay_sbc)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetMscRateOML \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   const int32_t * pTrace_numerator = reinterpret_cast<const int32_t *>(trace_packet.get_param_client_memory_ptr(2)); \
   const int32_t * pTrace_denominator = reinterpret_cast<const int32_t *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetMscRateOML GL_ENTRYPOINT(glXGetMscRateOML)(pTrace_dpy, drawable, pReplay_numerator, pReplay_denominator)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXSwapBuffersMscOML \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   int64_t target_msc = trace_packet.get_param_value<int64_t>(2); \
   int64_t divisor = trace_packet.get_param_value<int64_t>(3); \
   int64_t remainder = trace_packet.get_param_value<int64_t>(4);

#define VOGL_REPLAY_CALL_GL_HELPER_glXSwapBuffersMscOML GL_ENTRYPOINT(glXSwapBuffersMscOML)(pTrace_dpy, drawable, target_msc, divisor, remainder)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXWaitForMscOML \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   int64_t target_msc = trace_packet.get_param_value<int64_t>(2); \
   int64_t divisor = trace_packet.get_param_value<int64_t>(3); \
   int64_t remainder = trace_packet.get_param_value<int64_t>(4); \
   const int64_t * pTrace_ust = reinterpret_cast<const int64_t *>(trace_packet.get_param_client_memory_ptr(5)); \
   const int64_t * pTrace_msc = reinterpret_cast<const int64_t *>(trace_packet.get_param_client_memory_ptr(6)); \
   const int64_t * pTrace_sbc = reinterpret_cast<const int64_t *>(trace_packet.get_param_client_memory_ptr(7));

#define VOGL_REPLAY_CALL_GL_HELPER_glXWaitForMscOML GL_ENTRYPOINT(glXWaitForMscOML)(pTrace_dpy, drawable, target_msc, divisor, remainder, pReplay_ust, pReplay_msc, pReplay_sbc)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXWaitForSbcOML \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   int64_t target_sbc = trace_packet.get_param_value<int64_t>(2); \
   const int64_t * pTrace_ust = reinterpret_cast<const int64_t *>(trace_packet.get_param_client_memory_ptr(3)); \
   const int64_t * pTrace_msc = reinterpret_cast<const int64_t *>(trace_packet.get_param_client_memory_ptr(4)); \
   const int64_t * pTrace_sbc = reinterpret_cast<const int64_t *>(trace_packet.get_param_client_memory_ptr(5));

#define VOGL_REPLAY_CALL_GL_HELPER_glXWaitForSbcOML GL_ENTRYPOINT(glXWaitForSbcOML)(pTrace_dpy, drawable, target_sbc, pReplay_ust, pReplay_msc, pReplay_sbc)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXBindTexImageEXT \
   const Display * pTrace_dpy = reinterpret_cast<const Display *>(trace_packet.get_param_client_memory_ptr(0)); \
   GLXDrawable drawable = trace_packet.get_param_value<GLXDrawable>(1); \
   int buffer = trace_packet.get_param_value<int>(2); \
   const int * pTrace_attrib_list = reinterpret_cast<const int *>(trace_packet.get_param_client_memory_ptr(3));

#define VOGL_REPLAY_CALL_GL_HELPER_glXBindTexImageEXT GL_ENTRYPOINT(glXBindTexImageEXT)(pTrace_dpy, drawable, buffer, pTrace_attrib_list)

#define VOGL_REPLAY_LOAD_PARAMS_HELPER_glXGetAGPOffsetMESA \
   const void * pTrace_pointer = reinterpret_cast<const void *>(trace_packet.get_param_client_memory_ptr(0));

#define VOGL_REPLAY_CALL_GL_HELPER_glXGetAGPOffsetMESA GL_ENTRYPOINT(glXGetAGPOffsetMESA)(pTrace_pointer)

