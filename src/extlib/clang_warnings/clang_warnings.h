/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @header          clang-warnings.h
 * @copyright       (c) 2011, XS-Labs
 * @author          Jean-David Gadina - www.xs-labs.com
 */

#ifndef EOS_CLANG_WARNINGS_H
#define EOS_CLANG_WARNINGS_H

#ifdef __clang__

// TODO: How to fix this?
#pragma clang diagnostic ignored "-Wc++11-long-long"

#pragma clang diagnostic warning "-Wabi"
#pragma clang diagnostic warning "-Waddress-of-temporary"
#pragma clang diagnostic warning "-Waddress"
#pragma clang diagnostic warning "-Waggregate-return"
#pragma clang diagnostic warning "-Wall"
#pragma clang diagnostic warning "-Wambiguous-member-template"
#pragma clang diagnostic warning "-Warc-abi"
#pragma clang diagnostic warning "-Warc-non-pod-memaccess"
#pragma clang diagnostic warning "-Warc-retain-cycles"
#pragma clang diagnostic warning "-Warc-unsafe-retained-assign"
#pragma clang diagnostic warning "-Warc"
#pragma clang diagnostic warning "-Watomic-properties"
#pragma clang diagnostic warning "-Wattributes"
#pragma clang diagnostic warning "-Wavailability"
#pragma clang diagnostic warning "-Wbad-function-cast"
#pragma clang diagnostic warning "-Wbind-to-temporary-copy"
#pragma clang diagnostic warning "-Wbitwise-op-parentheses"
#pragma clang diagnostic warning "-Wbool-conversions"
#pragma clang diagnostic warning "-Wbuiltin-macro-redefined"

#pragma clang diagnostic warning "-Wc++-compat"
#pragma clang diagnostic warning "-Wc++0x-compat"
//#pragma clang diagnostic warning "-Wc++0x-extensions"

// This one is insane
//#pragma clang diagnostic warning "-Wcast-align"

#pragma clang diagnostic warning "-Wcast-qual"
#pragma clang diagnostic warning "-Wchar-align"
#pragma clang diagnostic warning "-Wchar-subscripts"

#pragma clang diagnostic warning "-Wcomment"
#pragma clang diagnostic warning "-Wcomments"

#pragma clang diagnostic warning "-Wconditional-uninitialized"

// Would love to fix this, but it would be a ton of work
//#pragma clang diagnostic warning "-Wconversion"

#pragma clang diagnostic warning "-Wshorten-64-to-32"

// TODO - try enabling these one at a time..
#pragma clang diagnostic warning "-Wctor-dtor-privacy"
#pragma clang diagnostic warning "-Wcustom-atomic-properties"
#pragma clang diagnostic warning "-Wdeclaration-after-statement"
//#pragma clang diagnostic warning "-Wdefault-arg-special-member"
#pragma clang diagnostic warning "-Wdelegating-ctor-cycles"
#pragma clang diagnostic warning "-Wdelete-non-virtual-dtor"
#pragma clang diagnostic warning "-Wdeprecated-declarations"
#pragma clang diagnostic warning "-Wdeprecated-implementations"
#pragma clang diagnostic warning "-Wdeprecated-writable-strings"
#pragma clang diagnostic warning "-Wdeprecated"
#pragma clang diagnostic warning "-Wdisabled-optimization"

#pragma clang diagnostic warning "-Wdiscard-qual"
#pragma clang diagnostic warning "-Wdiv-by-zero"
#pragma clang diagnostic warning "-Wduplicate-method-arg"
#pragma clang diagnostic warning "-Weffc++"
#pragma clang diagnostic warning "-Wempty-body"
#pragma clang diagnostic warning "-Wendif-labels"

// Can see this being useful to find global objects
//#pragma clang diagnostic warning "-Wexit-time-destructors"

#pragma clang diagnostic warning "-Wextra-tokens"
#pragma clang diagnostic warning "-Wextra"

//#pragma clang diagnostic warning "-Wformat-nonliteral"
#pragma clang diagnostic warning "-Wformat-extra-args"
#pragma clang diagnostic warning "-Wformat-zero-length"
#pragma clang diagnostic warning "-Wformat"
//#pragma clang diagnostic warning "-Wformat=2"
#pragma clang diagnostic warning "-Wfour-char-constants"
//#pragma clang diagnostic warning "-Wglobal-constructors"
#pragma clang diagnostic warning "-Wgnu-designator"
//#pragma clang diagnostic warning "-Wgnu"

// TODO: complains of using voglcore in one of my headers
//#pragma clang diagnostic warning "-Wheader-hygiene"

#pragma clang diagnostic warning "-Widiomatic-parentheses"
#pragma clang diagnostic warning "-Wignored-qualifiers"
#pragma clang diagnostic warning "-Wimplicit-atomic-properties"
#pragma clang diagnostic warning "-Wimplicit-function-declaration"
#pragma clang diagnostic warning "-Wimplicit-int"
#pragma clang diagnostic warning "-Wimplicit"
#pragma clang diagnostic warning "-Wimport"
#pragma clang diagnostic warning "-Wincompatible-pointer-types"

#pragma clang diagnostic warning "-Winit-self"
#pragma clang diagnostic warning "-Winitializer-overrides"
#pragma clang diagnostic warning "-Winline"
#pragma clang diagnostic warning "-Wint-to-pointer-cast"
#pragma clang diagnostic warning "-Winvalid-offsetof"
#pragma clang diagnostic warning "-Winvalid-pch"
#pragma clang diagnostic warning "-Wlarge-by-value-copy"
#pragma clang diagnostic warning "-Wliteral-range"
#pragma clang diagnostic warning "-Wlocal-type-template-args"
#pragma clang diagnostic warning "-Wlogical-op-parentheses"

// Dunno how to fix this yet
//#pragma clang diagnostic warning "-Wlong-long"

#pragma clang diagnostic warning "-Wmain"
#pragma clang diagnostic warning "-Wmicrosoft"
#pragma clang diagnostic warning "-Wmismatched-tags"
#pragma clang diagnostic warning "-Wmissing-braces"
#pragma clang diagnostic warning "-Wmissing-declarations"
#pragma clang diagnostic warning "-Wmissing-field-initializers"
#pragma clang diagnostic warning "-Wmissing-format-attribute"
#pragma clang diagnostic warning "-Wmissing-include-dirs"
#pragma clang diagnostic warning "-Wmissing-noreturn"

#pragma clang diagnostic warning "-Wmost"

#pragma clang diagnostic warning "-Wmultichar"
#pragma clang diagnostic warning "-Wnested-externs"
#pragma clang diagnostic warning "-Wnewline-eof"

//#pragma clang diagnostic warning "-Wnon-gcc"
#pragma clang diagnostic warning "-Wnon-virtual-dtor"
#pragma clang diagnostic warning "-Wnonnull"
#pragma clang diagnostic warning "-Wnonportable-cfstrings"

#pragma clang diagnostic warning "-Wnull-dereference"
#pragma clang diagnostic warning "-Wobjc-nonunified-exceptions"
#pragma clang diagnostic warning "-Wold-style-cast"
#pragma clang diagnostic warning "-Wold-style-definition"
#pragma clang diagnostic warning "-Wout-of-line-declaration"
#pragma clang diagnostic warning "-Woverflow"
#pragma clang diagnostic warning "-Woverlength-strings"
#pragma clang diagnostic warning "-Woverloaded-virtual"
#pragma clang diagnostic warning "-Wpacked"

// Seems useless
//#pragma clang diagnostic warning "-Wpadded"

#pragma clang diagnostic warning "-Wparentheses"
#pragma clang diagnostic warning "-Wpointer-arith"
#pragma clang diagnostic warning "-Wpointer-to-int-cast"
#pragma clang diagnostic warning "-Wprotocol"
#pragma clang diagnostic warning "-Wreadonly-setter-attrs"
#pragma clang diagnostic warning "-Wredundant-decls"
#pragma clang diagnostic warning "-Wreorder"
#pragma clang diagnostic warning "-Wreturn-type"
#pragma clang diagnostic warning "-Wself-assign"
#pragma clang diagnostic warning "-Wsemicolon-before-method-body"
#pragma clang diagnostic warning "-Wsequence-point"

// TODO: Would like to enable this eventually
//#pragma clang diagnostic warning "-Wshadow"

#pragma clang diagnostic warning "-Wshorten-64-to-32"
#pragma clang diagnostic warning "-Wsign-compare"
#pragma clang diagnostic warning "-Wsign-promo"
#pragma clang diagnostic warning "-Wsizeof-array-argument"
#pragma clang diagnostic warning "-Wstack-protector"
#pragma clang diagnostic warning "-Wstrict-aliasing"
#pragma clang diagnostic warning "-Wstrict-overflow"
#pragma clang diagnostic warning "-Wstrict-prototypes"
#pragma clang diagnostic warning "-Wstrict-selector-match"
#pragma clang diagnostic warning "-Wsuper-class-method-mismatch"

#pragma clang diagnostic warning "-Wswitch-default"

// Too chatty
//#pragma clang diagnostic warning "-Wswitch-enum"

#pragma clang diagnostic warning "-Wswitch"
#pragma clang diagnostic warning "-Wsynth"
#pragma clang diagnostic warning "-Wtautological-compare"
#pragma clang diagnostic warning "-Wtrigraphs"
#pragma clang diagnostic warning "-Wtype-limits"
#pragma clang diagnostic warning "-Wundeclared-selector"
#pragma clang diagnostic warning "-Wuninitialized"
#pragma clang diagnostic warning "-Wunknown-pragmas"
#pragma clang diagnostic warning "-Wunnamed-type-template-args"
#pragma clang diagnostic warning "-Wunneeded-internal-declaration"
#pragma clang diagnostic warning "-Wunneeded-member-function"

#pragma clang diagnostic warning "-Wunused-argument"
#pragma clang diagnostic warning "-Wunused-exception-parameter"
#pragma clang diagnostic warning "-Wunused-function"
#pragma clang diagnostic warning "-Wunused-label"
#pragma clang diagnostic warning "-Wunused-member-function"
#pragma clang diagnostic warning "-Wunused-parameter"
#pragma clang diagnostic warning "-Wunused-value"
#pragma clang diagnostic warning "-Wunused-variable"
#pragma clang diagnostic warning "-Wunused"
#pragma clang diagnostic warning "-Wused-but-marked-unused"

// Seems useless
//#pragma clang diagnostic warning "-Wvariadic-macros"

#pragma clang diagnostic warning "-Wvector-conversions"
#pragma clang diagnostic warning "-Wvla"
#pragma clang diagnostic warning "-Wvolatile-register-var"
#pragma clang diagnostic warning "-Wwrite-strings"


/* Not wanted:
 *
 * #pragma clang diagnostic warning "-Wselector"
 */



#endif

#endif /* EOS_CLANG_WARNINGS_H */
